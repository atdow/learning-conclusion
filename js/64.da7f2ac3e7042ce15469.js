(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{288:function(t,i,e){"use strict";e.r(i);e(23);var n={name:"ListView",computed:{contentHeight(){return this.data.length*this.itemHeight}},mounted(){this.getData(),this.update()},data:()=>({data:[],itemHeight:30,list:[]}),methods:{update(t=0){const i=Math.ceil(this.$el.clientHeight/this.itemHeight),e=Math.floor(t/this.itemHeight),n=e+i;this.list=this.data.slice(e,n),this.$refs.content.style.webkitTransform=`translate3d(0, ${e*this.itemHeight}px, 0)`},handleScroll(t){const i=this.$refs.container.scrollTop;this.update(i)},getData(){const t=[];for(let i=0;i<1e6;i++)t.push(`第 ${i} 个数据`);this.data=[...t]}}},s=(e(620),e(9)),a=Object(s.a)(n,(function(){var t=this,i=t._self._c;return i("div",{staticClass:"test-component"},[i("div",[i("div",{ref:"container",staticClass:"list-view",on:{scroll:t.handleScroll}},[i("div",{ref:"clientHeight",staticClass:"list-view-phantom",style:{height:t.contentHeight+"px"}}),t._v(" "),i("ul",{ref:"content",staticClass:"list-view-content"},t._l(t.list,(function(e,n){return i("li",{key:n,staticClass:"list-view-item",style:{height:t.itemHeight+"px"}},[t._v("\n          "+t._s(e)+"\n        ")])})),0)])])])}),[],!1,null,"ab152f72",null);i.default=a.exports},382:function(t,i,e){var n=e(2),s=e(621);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[t.i,s,""]]);var a={insert:"head",singleton:!1};n(s,a);t.exports=s.locals||{}},620:function(t,i,e){"use strict";e(382)},621:function(t,i,e){(i=e(3)(!1)).push([t.i,".list-view[data-v-ab152f72] {\n  width: 400px;\n  height: 400px;\n  overflow: auto;\n  position: relative;\n  border: 1px solid #c1c1c1;\n  box-shadow: 3px 3px 5px #ccc;\n}\n.list-view-phantom[data-v-ab152f72] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  z-index: -1;\n}\n.list-view-content[data-v-ab152f72] {\n  left: 0;\n  right: 0;\n  top: 0;\n  position: relative;\n}\n.list-view-item[data-v-ab152f72] {\n  padding: 6px;\n  color: #999;\n  line-height: 30px;\n}\n",""]),t.exports=i}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZGVtby92aXJ0dWFsU2Nyb2xsLWRlbW8udnVlIiwid2VicGFjazovLy8uL3NyYy9kZW1vL3ZpcnR1YWxTY3JvbGwtZGVtby52dWU/Y2MyOCIsIndlYnBhY2s6Ly8vc3JjL2RlbW8vdmlydHVhbFNjcm9sbC1kZW1vLnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvZGVtby92aXJ0dWFsU2Nyb2xsLWRlbW8udnVlP2EwMzciLCJ3ZWJwYWNrOi8vLy4vc3JjL2RlbW8vdmlydHVhbFNjcm9sbC1kZW1vLnZ1ZT9jMTNlIiwid2VicGFjazovLy8uL3NyYy9kZW1vL3ZpcnR1YWxTY3JvbGwtZGVtby52dWU/YmMwNyIsIndlYnBhY2s6Ly8vLi9zcmMvZGVtby92aXJ0dWFsU2Nyb2xsLWRlbW8udnVlP2JlNWMiXSwibmFtZXMiOlsibmFtZSIsImNvbXB1dGVkIiwiY29udGVudEhlaWdodCIsImRhdGEiLCJsZW5ndGgiLCJpdGVtSGVpZ2h0IiwibW91bnRlZCIsImdldERhdGEiLCJ1cGRhdGUiLCJsaXN0IiwibWV0aG9kcyIsInNjcm9sbFRvcCIsImNvdW50IiwiTWF0aCIsImNlaWwiLCIkZWwiLCJjbGllbnRIZWlnaHQiLCJzdGFydCIsImZsb29yIiwiZW5kIiwic2xpY2UiLCIkcmVmcyIsImNvbnRlbnQiLCJzdHlsZSIsIndlYmtpdFRyYW5zZm9ybSIsImhhbmRsZVNjcm9sbCIsImUiLCJjb250YWluZXIiLCJpIiwicHVzaCIsImNvbXBvbmVudCIsIl92bSIsInRoaXMiLCJfYyIsIl9zZWxmIiwic3RhdGljQ2xhc3MiLCJyZWYiLCJvbiIsImhlaWdodCIsIl92IiwiX2wiLCJ2YWwiLCJpbmRleCIsImtleSIsIl9zIiwiYXBpIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJtb2R1bGUiLCJvcHRpb25zIiwiZXhwb3J0cyIsImxvY2FscyIsIl9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyJdLCJtYXBwaW5ncyI6IndHQUFBLElDQWlOLEVDeUNsTSxDQUNmQSxLQUFBLFdBQ0FDLFNBQUEsQ0FDQUMsZ0JBRUEsWUFBQUMsS0FBQUMsT0FBQSxLQUFBQyxhQUdBQyxVQUNBLEtBQUFDLFVBQ0EsS0FBQUMsVUFHQUwsVUFDQSxDQUNBQSxLQUFBLEdBQ0FFLFdBQUEsR0FDQUksS0FBQSxLQUlBQyxRQUFBLENBQ0FGLE9BQUFHLEVBQUEsR0FFQSxNQUFBQyxFQUFBQyxLQUFBQyxLQUFBLEtBQUFDLElBQUFDLGFBQUEsS0FBQVgsWUFFQVksRUFBQUosS0FBQUssTUFBQVAsRUFBQSxLQUFBTixZQUVBYyxFQUFBRixFQUFBTCxFQUdBLEtBQUFILEtBQUEsS0FBQU4sS0FBQWlCLE1BQUFILEVBQUFFLEdBR0EsS0FBQUUsTUFBQUMsUUFBQUMsTUFBQUMsZ0JBQUEsa0JBQ0FQLEVBQUEsS0FBQVosb0JBR0FvQixhQUFBQyxHQUVBLE1BQUFmLEVBQUEsS0FBQVUsTUFBQU0sVUFBQWhCLFVBQ0EsS0FBQUgsT0FBQUcsSUFFQUosVUFFQSxNQUFBSixFQUFBLEdBQ0EsUUFBQXlCLEVBQUEsRUFBQUEsRUFBQSxJQUFBQSxJQUNBekIsRUFBQTBCLEtBQUEsS0FBQUQsU0FFQSxLQUFBekIsS0FBQSxJQUFBQSxNLGdCQ2xGSTJCLEVBQVksWUFDZCxHSFRXLFdBQWtCLElBQUlDLEVBQUlDLEtBQUtDLEVBQUdGLEVBQUlHLE1BQU1ELEdBQUcsT0FBT0EsRUFBRyxNQUFNLENBQUNFLFlBQVksa0JBQWtCLENBQUNGLEVBQUcsTUFBTSxDQUFDQSxFQUFHLE1BQU0sQ0FBQ0csSUFBSSxZQUFZRCxZQUFZLFlBQVlFLEdBQUcsQ0FBQyxPQUFTTixFQUFJTixlQUFlLENBQUNRLEVBQUcsTUFBTSxDQUFDRyxJQUFJLGVBQWVELFlBQVksb0JBQW9CWixNQUFPLENBQUVlLE9BQVFQLEVBQUk3QixjQUFnQixRQUFVNkIsRUFBSVEsR0FBRyxLQUFLTixFQUFHLEtBQUssQ0FBQ0csSUFBSSxVQUFVRCxZQUFZLHFCQUFxQkosRUFBSVMsR0FBSVQsRUFBSXRCLE1BQU0sU0FBU2dDLEVBQUlDLEdBQU8sT0FBT1QsRUFBRyxLQUFLLENBQUNVLElBQUlELEVBQU1QLFlBQVksaUJBQWlCWixNQUFPLENBQUVlLE9BQVFQLEVBQUkxQixXQUFhLE9BQVMsQ0FBQzBCLEVBQUlRLEdBQUcsZUFBZVIsRUFBSWEsR0FBR0gsR0FBSyxtQkFBa0IsV0FFaGlCLElHVXBCLEVBQ0EsS0FDQSxXQUNBLE1BSWEsVUFBQVgsRSw2QkNuQmYsSUFBSWUsRUFBTSxFQUFRLEdBQ0Z2QixFQUFVLEVBQVEsS0FJQyxpQkFGdkJBLEVBQVVBLEVBQVF3QixXQUFheEIsRUFBUXlCLFFBQVV6QixLQUcvQ0EsRUFBVSxDQUFDLENBQUMwQixFQUFPcEIsRUFBSU4sRUFBUyxNQUc5QyxJQUFJMkIsRUFBVSxDQUVkLE9BQWlCLE9BQ2pCLFdBQW9CLEdBRVBKLEVBQUl2QixFQUFTMkIsR0FJMUJELEVBQU9FLFFBQVU1QixFQUFRNkIsUUFBVSxJLGlDQ2xCbkMsUSxxQkNFQUQsRUFEa0MsRUFBUSxFQUNoQ0UsRUFBNEIsSUFFOUJ2QixLQUFLLENBQUNtQixFQUFPcEIsRUFBSSx5ZUFBMGUsS0FFbmdCb0IsRUFBT0UsUUFBVUEiLCJmaWxlIjoianMvNjQuZGE3ZjJhYzNlNzA0MmNlMTU0NjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCl7dmFyIF92bT10aGlzLF9jPV92bS5fc2VsZi5fYztyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwidGVzdC1jb21wb25lbnRcIn0sW19jKCdkaXYnLFtfYygnZGl2Jyx7cmVmOlwiY29udGFpbmVyXCIsc3RhdGljQ2xhc3M6XCJsaXN0LXZpZXdcIixvbjp7XCJzY3JvbGxcIjpfdm0uaGFuZGxlU2Nyb2xsfX0sW19jKCdkaXYnLHtyZWY6XCJjbGllbnRIZWlnaHRcIixzdGF0aWNDbGFzczpcImxpc3Qtdmlldy1waGFudG9tXCIsc3R5bGU6KHsgaGVpZ2h0OiBfdm0uY29udGVudEhlaWdodCArICdweCcgfSl9KSxfdm0uX3YoXCIgXCIpLF9jKCd1bCcse3JlZjpcImNvbnRlbnRcIixzdGF0aWNDbGFzczpcImxpc3Qtdmlldy1jb250ZW50XCJ9LF92bS5fbCgoX3ZtLmxpc3QpLGZ1bmN0aW9uKHZhbCxpbmRleCl7cmV0dXJuIF9jKCdsaScse2tleTppbmRleCxzdGF0aWNDbGFzczpcImxpc3Qtdmlldy1pdGVtXCIsc3R5bGU6KHsgaGVpZ2h0OiBfdm0uaXRlbUhlaWdodCArICdweCcgfSl9LFtfdm0uX3YoXCJcXG4gICAgICAgICAgXCIrX3ZtLl9zKHZhbCkrXCJcXG4gICAgICAgIFwiKV0pfSksMCldKV0pXSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3ZpcnR1YWxTY3JvbGwtZGVtby52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi92aXJ0dWFsU2Nyb2xsLWRlbW8udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiPCEtLVxuICogQEF1dGhvcjogYXRkb3dcbiAqIEBEYXRlOiAyMDIyLTA0LTAzIDIxOjQwOjEyXG4gKiBATGFzdEVkaXRvcnM6IG51bGxcbiAqIEBMYXN0RWRpdFRpbWU6IDIwMjItMDQtMDMgMjE6NDA6MTNcbiAqIEBEZXNjcmlwdGlvbjogZmlsZSBkZXNjcmlwdGlvblxuLS0+XG48IS0tXG4gKiBAQXV0aG9yOiBhdGRvd1xuICogQERhdGU6IDIwMjEtMDYtMTggMTY6MDE6NDNcbiAqIEBMYXN0RWRpdG9yczogbnVsbFxuICogQExhc3RFZGl0VGltZTogMjAyMS0wNi0yOSAxNzoyNjoxMlxuICogQERlc2NyaXB0aW9uOiBmaWxlIGRlc2NyaXB0aW9uXG4tLT5cbjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cInRlc3QtY29tcG9uZW50XCI+XG4gICAgPGRpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJsaXN0LXZpZXdcIiByZWY9XCJjb250YWluZXJcIiBAc2Nyb2xsPVwiaGFuZGxlU2Nyb2xsXCI+XG4gICAgICAgIDwhLS0g6L+Z6YeM5piv55So5LqO5pKR5byA6auY5bqm77yM5Ye6546w5rua5Yqo5p2h55SoIC0tPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3M9XCJsaXN0LXZpZXctcGhhbnRvbVwiXG4gICAgICAgICAgcmVmPVwiY2xpZW50SGVpZ2h0XCJcbiAgICAgICAgICA6c3R5bGU9XCJ7IGhlaWdodDogY29udGVudEhlaWdodCArICdweCcgfVwiXG4gICAgICAgID48L2Rpdj5cbiAgICAgICAgPCEtLSDnnJ/mraPnmoTmuLLmn5PmlbDmja4gLS0+XG4gICAgICAgIDx1bCByZWY9XCJjb250ZW50XCIgY2xhc3M9XCJsaXN0LXZpZXctY29udGVudFwiPlxuICAgICAgICAgIDxsaVxuICAgICAgICAgICAgY2xhc3M9XCJsaXN0LXZpZXctaXRlbVwiXG4gICAgICAgICAgICA6c3R5bGU9XCJ7IGhlaWdodDogaXRlbUhlaWdodCArICdweCcgfVwiXG4gICAgICAgICAgICA6a2V5PVwiaW5kZXhcIlxuICAgICAgICAgICAgdi1mb3I9XCIodmFsLCBpbmRleCkgaW4gbGlzdFwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAge3sgdmFsIH19XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdMaXN0VmlldycsXG4gIGNvbXB1dGVkOiB7XG4gICAgY29udGVudEhlaWdodCgpIHtcbiAgICAgIC8vIOiuoeeul+a7muWKqOadoemrmOW6plxuICAgICAgcmV0dXJuIHRoaXMuZGF0YS5sZW5ndGggKiB0aGlzLml0ZW1IZWlnaHRcbiAgICB9LFxuICB9LFxuICBtb3VudGVkKCkge1xuICAgIHRoaXMuZ2V0RGF0YSgpXG4gICAgdGhpcy51cGRhdGUoKVxuICB9LFxuXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRhdGE6IFtdLCAvLyDmgLvmlbDmja5cbiAgICAgIGl0ZW1IZWlnaHQ6IDMwLCAvLyDljZXkuKrpq5jluqZcbiAgICAgIGxpc3Q6IFtdLCAvLyDmuLLmn5PmlbDmja5cbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIHVwZGF0ZShzY3JvbGxUb3AgPSAwKSB7XG4gICAgICAvLyDojrflj5blvZPliY3lj6/lsZXnpLrmlbDph49cbiAgICAgIGNvbnN0IGNvdW50ID0gTWF0aC5jZWlsKHRoaXMuJGVsLmNsaWVudEhlaWdodCAvIHRoaXMuaXRlbUhlaWdodClcbiAgICAgIC8vIOWPluW+l+WPr+ingeWMuuWfn+eahOi1t+Wni+aVsOaNrue0ouW8lVxuICAgICAgY29uc3Qgc3RhcnQgPSBNYXRoLmZsb29yKHNjcm9sbFRvcCAvIHRoaXMuaXRlbUhlaWdodClcbiAgICAgIC8vIOWPluW+l+WPr+ingeWMuuWfn+eahOe7k+adn+aVsOaNrue0ouW8lVxuICAgICAgY29uc3QgZW5kID0gc3RhcnQgKyBjb3VudFxuXG4gICAgICAvLyDorqHnrpflh7rlj6/op4HljLrln5/lr7nlupTnmoTmlbDmja7vvIzorqkgVnVlLmpzIOabtOaWsFxuICAgICAgdGhpcy5saXN0ID0gdGhpcy5kYXRhLnNsaWNlKHN0YXJ0LCBlbmQpXG5cbiAgICAgIC8vIOaKiuWPr+ingeWMuuWfn+eahCB0b3Ag6K6+572u5Li66LW35aeL5YWD57Sg5Zyo5pW05Liq5YiX6KGo5Lit55qE5L2N572u77yI5L2/55SoIHRyYW5zZm9ybSDmmK/kuLrkuobmm7Tlpb3nmoTmgKfog73vvIlcbiAgICAgIHRoaXMuJHJlZnMuY29udGVudC5zdHlsZS53ZWJraXRUcmFuc2Zvcm0gPSBgdHJhbnNsYXRlM2QoMCwgJHtcbiAgICAgICAgc3RhcnQgKiB0aGlzLml0ZW1IZWlnaHRcbiAgICAgIH1weCwgMClgXG4gICAgfSxcbiAgICBoYW5kbGVTY3JvbGwoZSkge1xuICAgICAgLy8g6I635Y+W5b2T5YmN5rua5Yqo5p2h5rua5Yqo5L2N572uXG4gICAgICBjb25zdCBzY3JvbGxUb3AgPSB0aGlzLiRyZWZzLmNvbnRhaW5lci5zY3JvbGxUb3BcbiAgICAgIHRoaXMudXBkYXRlKHNjcm9sbFRvcClcbiAgICB9LFxuICAgIGdldERhdGEoKSB7XG4gICAgICAvL+WIm+W7uuaooeaLn+aVsOaNrlxuICAgICAgY29uc3QgZGF0YSA9IFtdXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwMDAwMDA7IGkrKykge1xuICAgICAgICBkYXRhLnB1c2goYOesrCAke2l9IOS4quaVsOaNrmApXG4gICAgICB9XG4gICAgICB0aGlzLmRhdGEgPSBbLi4uZGF0YV1cbiAgICB9LFxuICB9LFxufVxuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwibGVzc1wiIHNjb3BlZD5cbi5saXN0LXZpZXcge1xuICB3aWR0aDogNDAwcHg7XG4gIGhlaWdodDogNDAwcHg7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMWMxYzE7XG4gIGJveC1zaGFkb3c6IDNweCAzcHggNXB4ICNjY2M7XG59XG5cbi5saXN0LXZpZXctcGhhbnRvbSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogLTE7XG59XG5cbi5saXN0LXZpZXctY29udGVudCB7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmxpc3Qtdmlldy1pdGVtIHtcbiAgcGFkZGluZzogNnB4O1xuICBjb2xvcjogIzk5OTtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG59XG48L3N0eWxlPlxuIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi92aXJ0dWFsU2Nyb2xsLWRlbW8udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWFiMTUyZjcyJnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL3ZpcnR1YWxTY3JvbGwtZGVtby52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL3ZpcnR1YWxTY3JvbGwtZGVtby52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vdmlydHVhbFNjcm9sbC1kZW1vLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWFiMTUyZjcyJnByb2QmbGFuZz1sZXNzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCJhYjE1MmY3MlwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vdmlydHVhbFNjcm9sbC1kZW1vLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWFiMTUyZjcyJnByb2QmbGFuZz1sZXNzJnNjb3BlZD10cnVlJlwiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi92aXJ0dWFsU2Nyb2xsLWRlbW8udnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9YWIxNTJmNzImcHJvZCZsYW5nPWxlc3Mmc2NvcGVkPXRydWUmXCIiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmxpc3Qtdmlld1tkYXRhLXYtYWIxNTJmNzJdIHtcXG4gIHdpZHRoOiA0MDBweDtcXG4gIGhlaWdodDogNDAwcHg7XFxuICBvdmVyZmxvdzogYXV0bztcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMWMxYzE7XFxuICBib3gtc2hhZG93OiAzcHggM3B4IDVweCAjY2NjO1xcbn1cXG4ubGlzdC12aWV3LXBoYW50b21bZGF0YS12LWFiMTUyZjcyXSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBsZWZ0OiAwO1xcbiAgdG9wOiAwO1xcbiAgcmlnaHQ6IDA7XFxuICB6LWluZGV4OiAtMTtcXG59XFxuLmxpc3Qtdmlldy1jb250ZW50W2RhdGEtdi1hYjE1MmY3Ml0ge1xcbiAgbGVmdDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgdG9wOiAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG4ubGlzdC12aWV3LWl0ZW1bZGF0YS12LWFiMTUyZjcyXSB7XFxuICBwYWRkaW5nOiA2cHg7XFxuICBjb2xvcjogIzk5OTtcXG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xcbn1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==