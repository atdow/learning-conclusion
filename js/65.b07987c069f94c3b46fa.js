(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{217:function(t,e,o){"use strict";o.r(e);o(23);var i={name:"ColorGridChartVirtualScroll",props:{data:{type:Array,default:function(){return[[]]},require:!0},itemHeight:{type:Number,default:50},itemWidth:{type:Number},maxHeight:{type:Number,default:300},showTooltip:{type:Boolean,default:!0},cursorStyle:{type:Object,default:function(){return{cursor:"auto"}}},startColor:{type:String,default:"#c1cae9"},endColor:{type:String,default:"#273C70"},boundaryValue:{type:Object}},data:()=>({maxValue:0,minValue:0,colors:[],renderData:[],virtualContentHeight:300,contentHeight:300,scrollHeight:300,scrollResolveTimer:null,tooltipPosition:{x:0,y:0},tooltipData:{},tooltipIsShow:!1}),components:{},watch:{data:{immediate:!0,handler:function(){const{max:t,min:e}=this.calDataBoundaryValue();this.maxValue=t,this.minValue=e;let o=0;o=0===this.minValue?0===this.maxValue?0:this.maxValue-this.minValue+1:this.maxValue-this.minValue;const i=this.gradientColors(this.startColor,this.endColor,o);this.colors=i,this.$nextTick(()=>{this.updateVirtualContentHeight(),this.updateContentHeight(),this.update(0)})}}},computed:{},created(){},mounted(){const t=this.$refs.geminiScrollbarRef.$el.childNodes[2];t.scrollTop=this.scrollTop,t.addEventListener("scroll",this.scrollResolve),this.$once("hook:beforeDestroy",()=>{t.removeEventListener("scroll",this.scrollResolve)})},methods:{gradientColors(t,e,o,i){var l,s,r,n,a=[],h=[];i=i||1;var c=function(t){return Math.pow(t/255,i)};for(t=this.parseColor(t).map(c),e=this.parseColor(e).map(c),l=0;l<o;l++){for(n=1-(r=l/(o-1)),s=0;s<3;s++)h[s]=this.pad(Math.round(255*Math.pow(t[s]*n+e[s]*r,1/i)).toString(16));a.push("#"+h.join(""))}return a},parseColor:t=>4===t.length?t.substr(1).split("").map((function(t){return 17*parseInt(t,16)})):[t.substr(1,2),t.substr(3,2),t.substr(5,2)].map((function(t){return parseInt(t,16)})),pad:t=>1===t.length?"0"+t:t,calDataBoundaryValue(){if(this.boundaryValue){const{max:t,min:e}=this.boundaryValue;return{min:e,max:t}}let t=0,e=0;return this.data.forEach(o=>{o&&o.forEach(o=>{o.value>t&&(t=o.value),o.value<e&&(e=o.value)})}),{max:t,min:e}},calItemStyle(t){const e={};return e.background=this.calItemColor(t.value).color,this.itemWidth?this.data.length>0&&(this.data[0].length*this.itemWidth>this.$el.clientWidth?(e.width=this.itemWidth+"px",e.flexShrink=0):e.flex=1):e.flex=1,e},calItemColor(t){let e="white",o=Math.ceil((this.colors.length-1)*t/(this.maxValue-this.minValue));return o>this.colors.length-1&&(o=this.colors.length-1),e=this.colors[o],{color:e,colorsIndex:o}},scrollResolve(t){clearTimeout(this.scrollResolveTimer),this.scrollResolveTimer=setTimeout(()=>{this.geminiScrollbarScrollTop=t.target.scrollTop;const{scrollLeft:e,scrollTop:o}=t.target;this.$emit("scroll",{scrollLeft:e,scrollTop:o})},10),this.update(t.target.scrollTop)},update(t=0){this.$nextTick(()=>{const e=Math.ceil(this.$el.clientHeight/this.itemHeight),o=Math.floor(t/this.itemHeight);let i=o+e;i+1<=this.data.length-1&&(i+=1),this.renderData=this.data.slice(o,i),this.$nextTick(()=>{this.$refs.content&&(this.$refs.content.style.webkitTransform=`translate3d(0, ${o*this.itemHeight}px, 0)`)})})},updateGridHeight(){"double"==this.processTableMode?this.gridHeight=70:this.gridHeight=35},geminiScrollbarReset(){try{this.$refs.geminiScrollbarRef.$el.childNodes[2].scrollTop=0,this.$emit("scroll",0)}catch(t){}},updateVirtualContentHeight(){this.virtualContentHeight=this.data.length*this.itemHeight},updateContentHeight(){this.virtualContentHeight>this.maxHeight?this.contentHeight=this.maxHeight:this.contentHeight=this.virtualContentHeight},itemClick(t,e,o){this.$emit("itemClick",t,e,o)},itemMousemove(t){if(this.$emit("itemMouseMove",t),!1!==this.showTooltip){this.tooltipData=t;var e=window.event,o=e.x,i=e.y;this.tooltipPosition={x:o+20,y:i+20}}},contentMouseenter(){!1!==this.showTooltip&&(this.tooltipIsShow=!0)},contentMouseleave(){!1!==this.showTooltip&&(this.tooltipIsShow=!1)}},beforeDestroy(){}},l=(o(311),o(9)),s=Object(l.a)(i,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"color-grid-chart"},[e("GeminiScrollbar",{ref:"geminiScrollbarRef",staticClass:".pmd-scrollbar .mCustomScrollbar gm-scrollbar-color white",style:"height:"+(t.contentHeight+"px")},[e("div",{ref:"clientHeight",staticClass:"list-view-phantom",style:{height:t.virtualContentHeight+"px"}}),t._v(" "),e("div",{ref:"content",on:{mouseenter:t.contentMouseenter,mouseleave:t.contentMouseleave}},t._l(t.renderData,(function(o,i){return e("div",{key:i,staticClass:"color-grid-chart-row",style:{height:t.itemHeight+"px"}},t._l(o,(function(o,l){return e("div",{key:l,staticClass:"color-grid-chart-item",style:{...t.calItemStyle(o),...t.cursorStyle},on:{click:function(e){return t.itemClick(o,i,l)},mousemove:function(e){return t.itemMousemove(o)}}},[t.$scopedSlots.default?[t._t("default",null,{record:o})]:e("span",[t._v(" "+t._s(o.value))])],2)})),0)})),0)]),t._v(" "),e("div",{directives:[{name:"show",rawName:"v-show",value:t.tooltipIsShow,expression:"tooltipIsShow"}],staticClass:"color-grid-chart-tooltip",style:{left:t.tooltipPosition.x+"px",top:t.tooltipPosition.y+"px"}},[t.$scopedSlots.tooltipSlot?[t._t("tooltipSlot",null,{record:t.tooltipData})]:e("span",[t._v("请指定插槽内容")])],2)],1)}),[],!1,null,"e7325edc",null);e.default=s.exports},296:function(t,e,o){var i=o(2),l=o(312);"string"==typeof(l=l.__esModule?l.default:l)&&(l=[[t.i,l,""]]);var s={insert:"head",singleton:!1};i(l,s);t.exports=l.locals||{}},311:function(t,e,o){"use strict";o(296)},312:function(t,e,o){(e=o(3)(!1)).push([t.i,".color-grid-chart-row[data-v-e7325edc] {\n  display: flex;\n  width: 100%;\n}\n.color-grid-chart-item[data-v-e7325edc] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  box-sizing: border-box;\n  border: 1px solid white;\n}\n.color-grid-chart-item[data-v-e7325edc]:hover {\n  border-color: black;\n}\n.list-view-phantom[data-v-e7325edc] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  z-index: -1;\n}\n.color-grid-chart-tooltip[data-v-e7325edc] {\n  background: #fff;\n  opacity: 0.96;\n  border-radius: 6px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  padding: 12px;\n  color: #333333;\n  font-size: 13px;\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,