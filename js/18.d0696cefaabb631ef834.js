(window.webpackJsonp=window.webpackJsonp||[]).push([[18,60,70],{108:function(t,n,e){"use strict";e.r(n);var r=e(237),i={name:"dynamic-number",props:{},data:()=>({count:0}),components:{DynamicNumber:r.default},watch:{},computed:{},created(){},mounted(){let t=setInterval(()=>{this.count+=123},1e3);this.$once("hook:beforeDestroy",()=>{clearInterval(t)})},beforeDestroy(){}},o=e(9),s=Object(o.a)(i,(function(){var t=this;return(0,t._self._c)("DynamicNumber",{model:{value:t.count,callback:function(n){t.count=n},expression:"count"}})}),[],!1,null,"515fb40a",null).exports,a={name:"dynamic-number",props:{},data:()=>({count:0}),components:{DynamicNumber:r.default},watch:{},computed:{},created(){},mounted(){let t=setInterval(()=>{this.count+=12},1e3);this.$once("hook:beforeDestroy",()=>{clearInterval(t)})},beforeDestroy(){}},l=Object(o.a)(a,(function(){var t=this;return(0,t._self._c)("DynamicNumber",{attrs:{length:2},model:{value:t.count,callback:function(n){t.count=n},expression:"count"}})}),[],!1,null,"3ad6b4fe",null).exports,c={name:"dynamic-number",props:{},data:()=>({count:0}),components:{DynamicNumber:r.default},watch:{},computed:{},created(){},mounted(){let t=setInterval(()=>{this.count+=123},1e3);this.$once("hook:beforeDestroy",()=>{clearInterval(t)})},beforeDestroy(){}},u={name:"ComponentDoc",components:{Comt3b1jvlozsy8tmDemo0:s,Comt3b1jvlozsy8tmDemo1:l,Comt3b1jvlozsy8tmDemo2:Object(o.a)(c,(function(){var t=this;return(0,t._self._c)("DynamicNumber",{attrs:{isThousandSplit:!0},model:{value:t.count,callback:function(n){t.count=n},expression:"count"}})}),[],!1,null,"41ca56a4",null).exports}},m=Object(o.a)(u,(function(){var t=this,n=t._self._c;return n("div",{staticClass:"vue-demo-container"},[n("h4",[t._v("1. 基础用法")]),t._v(" "),n("div",{staticClass:"vue-demo-wrapper"},[n("Comt3b1jvlozsy8tmDemo0"),t._v(" "),t._m(0)],1),t._v(" "),n("h4",[t._v("2. 指定数字最大显示长度")]),t._v(" "),n("div",{staticClass:"vue-demo-wrapper"},[n("Comt3b1jvlozsy8tmDemo1"),t._v(" "),t._m(1)],1),t._v(" "),n("h4",[t._v("3. 使用千分分割")]),t._v(" "),n("div",{staticClass:"vue-demo-wrapper"},[n("Comt3b1jvlozsy8tmDemo2"),t._v(" "),t._m(2)],1),t._v(" "),n("h3",[t._v("API")]),t._v(" "),t._m(3)])}),[function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <DynamicNumber v-model="count"/>\n</template>\n\n<script>\nimport DynamicNumber from "@/packages/dynamic-number";\nexport default {\n  name: "dynamic-number",\n  props: {},\n  data() {\n    return {\n      count: 0,\n    };\n  },\n  components: {\n    DynamicNumber,\n  },\n  watch: {},\n  computed: {},\n  created() {},\n  mounted() {\n    let timer = setInterval(() => {\n      this.count += 123;\n    }, 1000);\n    this.$once("hook:beforeDestroy", () => {\n      clearInterval(timer);\n    });\n  },\n  beforeDestroy() {},\n};\n<\/script>\n\n<style lang="less" scoped></style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <DynamicNumber v-model="count" :length="2"/>\n</template>\n\n<script>\nimport DynamicNumber from "@/packages/dynamic-number";\nexport default {\n  name: "dynamic-number",\n  props: {},\n  data() {\n    return {\n      count: 0,\n    };\n  },\n  components: {\n    DynamicNumber,\n  },\n  watch: {},\n  computed: {},\n  created() {},\n  mounted() {\n    let timer = setInterval(() => {\n      this.count += 12;\n    }, 1000);\n    this.$once("hook:beforeDestroy", () => {\n      clearInterval(timer);\n    });\n  },\n  beforeDestroy() {},\n};\n<\/script>\n\n<style lang="less" scoped></style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <DynamicNumber v-model="count" :isThousandSplit="true"/>\n</template>\n\n<script>\nimport DynamicNumber from "@/packages/dynamic-number";\nexport default {\n  name: "dynamic-number",\n  props: {},\n  data() {\n    return {\n      count: 0,\n    };\n  },\n  components: {\n    DynamicNumber,\n  },\n  watch: {},\n  computed: {},\n  created() {},\n  mounted() {\n    let timer = setInterval(() => {\n      this.count += 123;\n    }, 1000);\n    this.$once("hook:beforeDestroy", () => {\n      clearInterval(timer);\n    });\n  },\n  beforeDestroy() {},\n};\n<\/script>\n\n<style lang="less" scoped></style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this,n=t._self._c;return n("table",[n("thead",[n("tr",[n("th",[t._v("属性")]),t._v(" "),n("th",[t._v("说明")]),t._v(" "),n("th",[t._v("类型")]),t._v(" "),n("th",[t._v("默认值")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("v-modal")]),t._v(" "),n("td",[t._v("绑定值")]),t._v(" "),n("td",[t._v("Number")]),t._v(" "),n("td",[t._v("0")])]),t._v(" "),n("tr",[n("td",[t._v("length")]),t._v(" "),n("td",[t._v("最大显示长度")]),t._v(" "),n("td",[t._v("Number")]),t._v(" "),n("td",[t._v("9")])]),t._v(" "),n("tr",[n("td",[t._v("isThousandSplit")]),t._v(" "),n("td",[t._v("是否使用千分分割")]),t._v(" "),n("td",[t._v("Boolean")]),t._v(" "),n("td",[t._v("false")])])])])}],!1,null,null,null);n.default=m.exports},237:function(t,n,e){"use strict";e.r(n);var r=e(241);r.default.install=function(t){t.component(r.default.name,r.default)},n.default=r.default},241:function(t,n,e){"use strict";e.r(n);e(24);var r={name:"ScrollNumber",model:{prop:"count",event:"setCount"},props:{count:{type:Number,default:0},isThousandSplit:{type:Boolean,default:!1},length:{type:Number,default:9}},data:()=>({initNumArray:["0"],displayNumArray:[]}),watch:{count:{immediate:!0,handler:function(){const t=this.count,n=this.numToArray(t);this.initNumArray=[],n.forEach(t=>{isNaN(t)?this.initNumArray.push(","):this.initNumArray.push("0")}),this.displayNumArray=n,this.$nextTick(()=>{const t=setTimeout(()=>{this.setNumberTransform(),clearTimeout(t)},0)})}}},mounted(){},methods:{numToArray(t){if(!0===this.isThousandSplit){if(this.length){let n="";for(let t=0;t<this.length;t++)n+="9";Number(n),0;let e="";if(String(t).length<=this.length){const n=this.length-String(t).length;e=String(t);for(let t=0;t<n;t++)e="0"+e}return this.thousandSplit(e).split("")}return this.thousandSplit(t).split("")}return String(t).split("")},thousandSplit:t=>(t+"").replace(/\d{1,3}(?=(\d{3})+$)/g,"$&,"),setNumberTransform(){this.displayNumArray.forEach((t,n)=>{if(!isNaN(t)){this.$refs.itemRef[n].children[0].children[0].style.transform=`translate(-50%, -${10*t}%)`}})}}},i=(e(345),e(9)),o=Object(i.a)(r,(function(){var t=this,n=t._self._c;return n("div",{staticClass:"s-scroll-number"},t._l(t.initNumArray,(function(e,r){return n("li",{key:r,ref:"itemRef",refInFor:!0,class:{"number-item":!isNaN(e),"mark-item":isNaN(e)}},[isNaN(e)?n("span",{staticClass:"comma"},[t._v(t._s(e))]):n("span",[n("i",[t._v("0123456789")])])])})),0)}),[],!1,null,"7038f128",null);n.default=o.exports},317:function(t,n,e){var r=e(2),i=e(346);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[t.i,i,""]]);var o={insert:"head",singleton:!1};r(i,o);t.exports=i.locals||{}},345:function(t,n,e){"use strict";e(317)},346:function(t,n,e){(n=e(3)(!1)).push([t.i,"/*总量滚动数字设置*/\n.s-scroll-number[data-v-7038f128] {\n  position: relative;\n  height: 100px;\n  font-size: 54px;\n  line-height: 41px;\n  text-align: center;\n  list-style: none;\n  color: #2d7cff;\n  writing-mode: vertical-lr;\n  text-orientation: upright;\n  /*文字禁止编辑*/\n  -moz-user-select: none;\n  /*火狐*/\n  -webkit-user-select: none;\n  /*webkit浏览器*/\n  /*IE10*/\n  /*早期浏览器*/\n  user-select: none;\n  /* overflow: hidden; */\n}\n/* 默认逗号设置 */\n.mark-item[data-v-7038f128] {\n  width: 10px;\n  height: 100px;\n  margin-right: 5px;\n  line-height: 10px;\n  font-size: 48px;\n  position: relative;\n}\n.mark-item > span[data-v-7038f128] {\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  writing-mode: vertical-rl;\n  text-orientation: upright;\n}\n/*滚动数字设置*/\n.number-item[data-v-7038f128] {\n  width: 41px;\n  height: 75px;\n  background: #ccc;\n  list-style: none;\n  margin-right: 5px;\n  background: #fafafa;\n  border-radius: 4px;\n  border: 1px solid #dddddd;\n}\n.number-item > span[data-v-7038f128] {\n  position: relative;\n  display: inline-block;\n  margin-right: 10px;\n  width: 100%;\n  height: 100%;\n  writing-mode: vertical-rl;\n  text-orientation: upright;\n  overflow: hidden;\n}\n.number-item > span > i[data-v-7038f128] {\n  font-style: normal;\n  position: absolute;\n  top: 11px;\n  left: 50%;\n  transform: translate(-50%, 0);\n  transition: transform 0.7s ease-in-out;\n  letter-spacing: 10px;\n}\n.number-item[data-v-7038f128]:last-child {\n  margin-right: 0;\n}\n",""]),t.exports=n}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzLWV4YW1wbGVzL2R5bmFtaWMtbnVtYmVyLm1kP2I1YWEiLCJ3ZWJwYWNrOi8vL3NyYy9wYWNrYWdlcy1leGFtcGxlcy9keW5hbWljLW51bWJlci5tZCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/YmRkOSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/NGQxOCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/YmJkMyIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/ODg4ZiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/YmIxOSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/N2EyNCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/MmI5OSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvZHluYW1pYy1udW1iZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL2R5bmFtaWMtbnVtYmVyL3NyYy9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL2R5bmFtaWMtbnVtYmVyL3NyYy9pbmRleC52dWU/YjRiMSIsIndlYnBhY2s6Ly8vc3JjL3BhY2thZ2VzL2R5bmFtaWMtbnVtYmVyL3NyYy9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL2R5bmFtaWMtbnVtYmVyL3NyYy9pbmRleC52dWU/NDU0NiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvZHluYW1pYy1udW1iZXIvc3JjL2luZGV4LnZ1ZT9hNzE3Iiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy9keW5hbWljLW51bWJlci9zcmMvaW5kZXgudnVlPzY1YjciLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL2R5bmFtaWMtbnVtYmVyL3NyYy9pbmRleC52dWU/NjlmYiJdLCJuYW1lcyI6WyJuYW1lIiwicHJvcHMiLCJkYXRhIiwiY291bnQiLCJjb21wb25lbnRzIiwiRHluYW1pY051bWJlciIsIndhdGNoIiwiY29tcHV0ZWQiLCJjcmVhdGVkIiwibW91bnRlZCIsInRpbWVyIiwic2V0SW50ZXJ2YWwiLCIkb25jZSIsImNsZWFySW50ZXJ2YWwiLCJiZWZvcmVEZXN0cm95IiwiX3ZtIiwidGhpcyIsIl9jIiwiX3NlbGYiLCJtb2RlbCIsInZhbHVlIiwiY2FsbGJhY2siLCIkJHYiLCJleHByZXNzaW9uIiwiYXR0cnMiLCJDb210M2IxanZsb3pzeTh0bURlbW8wIiwiQ29tdDNiMWp2bG96c3k4dG1EZW1vMSIsInN0YXRpY0NsYXNzIiwiX3YiLCJfbSIsInByZSIsIlNjcm9sbE51bWJlciIsImluc3RhbGwiLCJWdWUiLCJjb21wb25lbnQiLCJwcm9wIiwiZXZlbnQiLCJ0eXBlIiwiTnVtYmVyIiwiZGVmYXVsdCIsImlzVGhvdXNhbmRTcGxpdCIsIkJvb2xlYW4iLCJsZW5ndGgiLCJpbml0TnVtQXJyYXkiLCJkaXNwbGF5TnVtQXJyYXkiLCJpbW1lZGlhdGUiLCJoYW5kbGVyIiwibnVtIiwibnVtQXJyYXkiLCJudW1Ub0FycmF5IiwiZm9yRWFjaCIsIm9yZGVyTnVtSXRlbSIsImlzTmFOIiwicHVzaCIsIiRuZXh0VGljayIsInNldFRpbWVvdXQiLCJzZXROdW1iZXJUcmFuc2Zvcm0iLCJjbGVhclRpbWVvdXQiLCJtZXRob2RzIiwibWF4TnVtU3RyIiwiaSIsImZvcm1hdE51bSIsIlN0cmluZyIsInN1Ykxlbmd0aCIsInRob3VzYW5kU3BsaXQiLCJzcGxpdCIsInJlcGxhY2UiLCJkaXNwbGF5TnVtQXJyYXlJdGVtIiwiaW5kZXgiLCIkcmVmcyIsIml0ZW1SZWYiLCJjaGlsZHJlbiIsInN0eWxlIiwidHJhbnNmb3JtIiwiX2wiLCJpdGVtIiwia2V5IiwicmVmIiwicmVmSW5Gb3IiLCJjbGFzcyIsIl9zIiwiYXBpIiwiY29udGVudCIsIl9fZXNNb2R1bGUiLCJtb2R1bGUiLCJvcHRpb25zIiwiZXhwb3J0cyIsImxvY2FscyIsIl9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyJdLCJtYXBwaW5ncyI6IndHQUFBLEksU0NBK1AsRUNNaFAsQ0FDZkEsS0FBQSxpQkFDQUMsTUFBQSxHQUNBQyxVQUNBLENBQ0FDLE1BQUEsSUFHQUMsV0FBQSxDQUNBQyx5QkFFQUMsTUFBQSxHQUNBQyxTQUFBLEdBQ0FDLFlBQ0FDLFVBQ0EsSUFBQUMsRUFBQUMsWUFBQSxLQUNBLEtBQUFSLE9BQUEsS0FDQSxLQUNBLEtBQUFTLE1BQUEsMEJBQ0FDLGNBQUFILE1BR0FJLG1CLE9DVmUsRUFYQyxZQUNkLEdIUlcsV0FBa0IsSUFBSUMsRUFBSUMsS0FBcUIsT0FBT0MsRUFBcEJGLEVBQUlHLE1BQU1ELElBQWEsZ0JBQWdCLENBQUNFLE1BQU0sQ0FBQ0MsTUFBT0wsRUFBSVosTUFBT2tCLFNBQVMsU0FBVUMsR0FBTVAsRUFBSVosTUFBTW1CLEdBQUtDLFdBQVcsYUFFN0ksSUdTcEIsRUFDQSxLQUNBLFdBQ0EsTSxRQ2Q2UCxFRk1oUCxDQUNmdkIsS0FBQSxpQkFDQUMsTUFBQSxHQUNBQyxVQUNBLENBQ0FDLE1BQUEsSUFHQUMsV0FBQSxDQUNBQyx5QkFFQUMsTUFBQSxHQUNBQyxTQUFBLEdBQ0FDLFlBQ0FDLFVBQ0EsSUFBQUMsRUFBQUMsWUFBQSxLQUNBLEtBQUFSLE9BQUEsSUFDQSxLQUNBLEtBQUFTLE1BQUEsMEJBQ0FDLGNBQUFILE1BR0FJLG1CR1ZlLEVBWEMsWUFDZCxHTFJXLFdBQWtCLElBQUlDLEVBQUlDLEtBQXFCLE9BQU9DLEVBQXBCRixFQUFJRyxNQUFNRCxJQUFh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RSxHQUFHTCxNQUEzRjFELEVBQUcsT0FBTyxDQUFDQSxFQUFHLElBQUksQ0FBQ0YsRUFBSWEsR0FBRyx1QkFBOEUsS0FFcFgsSUdVcEIsRUFDQSxLQUNBLFdBQ0EsTUFJYSxVQUFBTSxFLDZCQ25CZixJQUFJK0MsRUFBTSxFQUFRLEdBQ0ZDLEVBQVUsRUFBUSxLQUlDLGlCQUZ2QkEsRUFBVUEsRUFBUUMsV0FBYUQsRUFBUTNDLFFBQVUyQyxLQUcvQ0EsRUFBVSxDQUFDLENBQUNFLEVBQU94QixFQUFJc0IsRUFBUyxNQUc5QyxJQUFJRyxFQUFVLENBRWQsT0FBaUIsT0FDakIsV0FBb0IsR0FFUEosRUFBSUMsRUFBU0csR0FJMUJELEVBQU9FLFFBQVVKLEVBQVFLLFFBQVUsSSxpQ0NsQm5DLFEscUJDRUFELEVBRGtDLEVBQVEsRUFDaENFLEVBQTRCLElBRTlCbkMsS0FBSyxDQUFDK0IsRUFBT3hCLEVBQUksMjlDQUE0OUMsS0FFci9Dd0IsRUFBT0UsUUFBVUEiLCJmaWxlIjoianMvMTguZDA2OTZjZWZhYWJiNjMxZWY4MzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCl7dmFyIF92bT10aGlzLF9jPV92bS5fc2VsZi5fYztyZXR1cm4gX2MoJ0R5bmFtaWNOdW1iZXInLHthdHRyczp7XCJpc1Rob3VzYW5kU3BsaXRcIjp0cnVlfSxtb2RlbDp7dmFsdWU6KF92bS5jb3VudCksY2FsbGJhY2s6ZnVuY3Rpb24gKCQkdikge192bS5jb3VudD0kJHZ9LGV4cHJlc3Npb246XCJjb3VudFwifX0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL21hcmtkb3duLXZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMSEuL2R5bmFtaWMtbnVtYmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTBcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbWFya2Rvd24tdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0xIS4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MFwiIiwibW9kdWxlLmV4cG9ydHMgPSBcbiAgICAgICAgPHRlbXBsYXRlPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxoND4xLiDln7rnoYDnlKjms5U8L2g0PlxuPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLXdyYXBwZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxDb210M2IxanZsb3pzeTh0bURlbW8wPjwvQ29tdDNiMWp2bG96c3k4dG1EZW1vMD5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidnVlLWRlbW8taGlnaGxpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidnVlLWRlbW8taGlnaGxpZ2h0LWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8cHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiIHYtcHJlID4mbHQ7dGVtcGxhdGUmZ3Q7XG4gICZsdDtEeW5hbWljTnVtYmVyIHYtbW9kZWw9JnF1b3Q7Y291bnQmcXVvdDsvJmd0O1xuJmx0Oy90ZW1wbGF0ZSZndDtcblxuJmx0O3NjcmlwdCZndDtcbmltcG9ydCBEeW5hbWljTnVtYmVyIGZyb20gJnF1b3Q7QC9wYWNrYWdlcy9keW5hbWljLW51bWJlciZxdW90OztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJnF1b3Q7ZHluYW1pYy1udW1iZXImcXVvdDssXG4gIHByb3BzOiB7fSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY291bnQ6IDAsXG4gICAgfTtcbiAgfSxcbiAgY29tcG9uZW50czoge1xuICAgIER5bmFtaWNOdW1iZXIsXG4gIH0sXG4gIHdhdGNoOiB7fSxcbiAgY29tcHV0ZWQ6IHt9LFxuICBjcmVhdGVkKCkge30sXG4gIG1vdW50ZWQoKSB7XG4gICAgbGV0IHRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPSZndDsge1xuICAgICAgdGhpcy5jb3VudCArPSAxMjM7XG4gICAgfSwgMTAwMCk7XG4gICAgdGhpcy4kb25jZSgmcXVvdDtob29rOmJlZm9yZURlc3Ryb3kmcXVvdDssICgpID0mZ3Q7IHtcbiAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpO1xuICAgIH0pO1xuICB9LFxuICBiZWZvcmVEZXN0cm95KCkge30sXG59O1xuJmx0Oy9zY3JpcHQmZ3Q7XG5cbiZsdDtzdHlsZSBsYW5nPSZxdW90O2xlc3MmcXVvdDsgc2NvcGVkJmd0OyZsdDsvc3R5bGUmZ3Q7XG48L2NvZGU+PC9wcmU+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvZGUtZm9sZGVyXCI+5pi+56S65Luj56CBPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuPGg0PjIuIOaMh+WumuaVsOWtl+acgOWkp+aYvuekuumVv+W6pjwvaDQ+XG48ZGl2IGNsYXNzPVwidnVlLWRlbW8td3JhcHBlclwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPENvbXQzYjFqdmxvenN5OHRtRGVtbzE+PC9Db210M2IxanZsb3pzeTh0bURlbW8xPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2dWUtZGVtby1oaWdobGlnaHRcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2dWUtZGVtby1oaWdobGlnaHQtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxwcmU+PGNvZGUgY2xhc3M9XCJodG1sXCIgdi1wcmUgPiZsdDt0ZW1wbGF0ZSZndDtcbiAgJmx0O0R5bmFtaWNOdW1iZXIgdi1tb2RlbD0mcXVvdDtjb3VudCZxdW90OyA6bGVuZ3RoPSZxdW90OzImcXVvdDsvJmd0O1xuJmx0Oy90ZW1wbGF0ZSZndDtcblxuJmx0O3NjcmlwdCZndDtcbmltcG9ydCBEeW5hbWljTnVtYmVyIGZyb20gJnF1b3Q7QC9wYWNrYWdlcy9keW5hbWljLW51bWJlciZxdW90OztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJnF1b3Q7ZHluYW1pYy1udW1iZXImcXVvdDssXG4gIHByb3BzOiB7fSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY291bnQ6IDAsXG4gICAgfTtcbiAgfSxcbiAgY29tcG9uZW50czoge1xuICAgIER5bmFtaWNOdW1iZXIsXG4gIH0sXG4gIHdhdGNoOiB7fSxcbiAgY29tcHV0ZWQ6IHt9LFxuICBjcmVhdGVkKCkge30sXG4gIG1vdW50ZWQoKSB7XG4gICAgbGV0IHRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPSZndDsge1xuICAgICAgdGhpcy5jb3VudCArPSAxMjtcbiAgICB9LCAxMDAwKTtcbiAgICB0aGlzLiRvbmNlKCZxdW90O2hvb2s6YmVmb3JlRGVzdHJveSZxdW90OywgKCkgPSZndDsge1xuICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7XG4gICAgfSk7XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3koKSB7fSxcbn07XG4mbHQ7L3NjcmlwdCZndDtcblxuJmx0O3N0eWxlIGxhbmc9JnF1b3Q7bGVzcyZxdW90OyBzY29wZWQmZ3Q7Jmx0Oy9zdHlsZSZndDtcbjwvY29kZT48L3ByZT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29kZS1mb2xkZXJcIj7mmL7npLrku6PnoIE8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPC9kaXY+XG48aDQ+My4g5L2/55So5Y2D5YiG5YiG5YmyPC9oND5cbjxkaXYgY2xhc3M9XCJ2dWUtZGVtby13cmFwcGVyXCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8Q29tdDNiMWp2bG96c3k4dG1EZW1vMj48L0NvbXQzYjFqdmxvenN5OHRtRGVtbzI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLWhpZ2hsaWdodFwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLWhpZ2hsaWdodC1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHByZT48Y29kZSBjbGFzcz1cImh0bWxcIiB2LXByZSA+Jmx0O3RlbXBsYXRlJmd0O1xuICAmbHQ7RHluYW1pY051bWJlciB2LW1vZGVsPSZxdW90O2NvdW50JnF1b3Q7IDppc1Rob3VzYW5kU3BsaXQ9JnF1b3Q7dHJ1ZSZxdW90Oy8mZ3Q7XG4mbHQ7L3RlbXBsYXRlJmd0O1xuXG4mbHQ7c2NyaXB0Jmd0O1xuaW1wb3J0IER5bmFtaWNOdW1iZXIgZnJvbSAmcXVvdDtAL3BhY2thZ2VzL2R5bmFtaWMtbnVtYmVyJnF1b3Q7O1xuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAmcXVvdDtkeW5hbWljLW51bWJlciZxdW90OyxcbiAgcHJvcHM6IHt9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjb3VudDogMCxcbiAgICB9O1xuICB9LFxuICBjb21wb25lbnRzOiB7XG4gICAgRHluYW1pY051bWJlcixcbiAgfSxcbiAgd2F0Y2g6IHt9LFxuICBjb21wdXRlZDoge30sXG4gIGNyZWF0ZWQoKSB7fSxcbiAgbW91bnRlZCgpIHtcbiAgICBsZXQgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9Jmd0OyB7XG4gICAgICB0aGlzLmNvdW50ICs9IDEyMztcbiAgICB9LCAxMDAwKTtcbiAgICB0aGlzLiRvbmNlKCZxdW90O2hvb2s6YmVmb3JlRGVzdHJveSZxdW90OywgKCkgPSZndDsge1xuICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7XG4gICAgfSk7XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3koKSB7fSxcbn07XG4mbHQ7L3NjcmlwdCZndDtcblxuJmx0O3N0eWxlIGxhbmc9JnF1b3Q7bGVzcyZxdW90OyBzY29wZWQmZ3Q7Jmx0Oy9zdHlsZSZndDtcbjwvY29kZT48L3ByZT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29kZS1mb2xkZXJcIj7mmL7npLrku6PnoIE8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPC9kaXY+XG48aDM+QVBJPC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD7lsZ7mgKc8L3RoPlxuPHRoPuivtOaYjjwvdGg+XG48dGg+57G75Z6LPC90aD5cbjx0aD7pu5jorqTlgLw8L3RoPlxuPC90cj5cbjwvdGhlYWQ+XG48dGJvZHk+XG48dHI+XG48dGQ+di1tb2RhbDwvdGQ+XG48dGQ+57uR5a6a5YC8PC90ZD5cbjx0ZD5OdW1iZXI8L3RkPlxuPHRkPjA8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5sZW5ndGg8L3RkPlxuPHRkPuacgOWkp+aYvuekuumVv+W6pjwvdGQ+XG48dGQ+TnVtYmVyPC90ZD5cbjx0ZD45PC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+aXNUaG91c2FuZFNwbGl0PC90ZD5cbjx0ZD7mmK/lkKbkvb/nlKjljYPliIbliIblibI8L3RkPlxuPHRkPkJvb2xlYW48L3RkPlxuPHRkPmZhbHNlPC90ZD5cbjwvdHI+XG48L3Rib2R5PlxuPC90YWJsZT5cblxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvdGVtcGxhdGU+XG5cbiAgICAgICAgPHNjcmlwdD5cbiAgICAgICAgICAgIGltcG9ydCBDb210M2IxanZsb3pzeTh0bURlbW8wIGZyb20gXCIuL2R5bmFtaWMtbnVtYmVyLm1kP2ZlbmNlJmNvbXBvbmVudEluZGV4PTBcIjtpbXBvcnQgQ29tdDNiMWp2bG96c3k4dG1EZW1vMSBmcm9tIFwiLi9keW5hbWljLW51bWJlci5tZD9mZW5jZSZjb21wb25lbnRJbmRleD0xXCI7aW1wb3J0IENvbXQzYjFqdmxvenN5OHRtRGVtbzIgZnJvbSBcIi4vZHluYW1pYy1udW1iZXIubWQ/ZmVuY2UmY29tcG9uZW50SW5kZXg9MlwiO1xuICAgICAgICAgICAgZXhwb3J0IGRlZmF1bHQge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdDb21wb25lbnREb2MnLFxuICAgICAgICAgICAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgICAgICAgICAgICAgJ0NvbXQzYjFqdmxvenN5OHRtRGVtbzAnOiBDb210M2IxanZsb3pzeTh0bURlbW8wLCdDb210M2IxanZsb3pzeTh0bURlbW8xJzogQ29tdDNiMWp2bG96c3k4dG1EZW1vMSwnQ29tdDNiMWp2bG96c3k4dG1EZW1vMic6IENvbXQzYjFqdmxvenN5OHRtRGVtbzJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICA8L3NjcmlwdD5cbiAgICAiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2R5bmFtaWMtbnVtYmVyLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTUxNWZiNDBhJnNjb3BlZD10cnVlJmZlbmNlJmNvbXBvbmVudEluZGV4PTBcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0wXCJcbmV4cG9ydCAqIGZyb20gXCIuL2R5bmFtaWMtbnVtYmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTBcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiNTE1ZmI0MGFcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP2NhY2hlRGlyZWN0b3J5IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9tYXJrZG93bi12dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTEhLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0xXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL21hcmtkb3duLXZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMSEuL2R5bmFtaWMtbnVtYmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTFcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9M2FkNmI0ZmUmc2NvcGVkPXRydWUmZmVuY2UmY29tcG9uZW50SW5kZXg9MVwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2R5bmFtaWMtbnVtYmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTFcIlxuZXhwb3J0ICogZnJvbSBcIi4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MVwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCIzYWQ2YjRmZVwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL21hcmtkb3duLXZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMSEuL2R5bmFtaWMtbnVtYmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTJcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbWFya2Rvd24tdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0xIS4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MlwiIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbWFya2Rvd24tdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0xIS4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbWFya2Rvd24tdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0xIS4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDFjYTU2YTQmc2NvcGVkPXRydWUmZmVuY2UmY29tcG9uZW50SW5kZXg9MlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2R5bmFtaWMtbnVtYmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTJcIlxuZXhwb3J0ICogZnJvbSBcIi4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI0MWNhNTZhNFwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MmU2NWMxODRcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCIvKlxuICogQEF1dGhvcjogYXRkb3dcbiAqIEBEYXRlOiAyMDIxLTA2LTE3IDEwOjM5OjQyXG4gKiBATGFzdEVkaXRvcnM6IG51bGxcbiAqIEBMYXN0RWRpdFRpbWU6IDIwMjEtMDYtMTcgMTY6MTU6NTZcbiAqIEBEZXNjcmlwdGlvbjogZmlsZSBkZXNjcmlwdGlvblxuICovXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5pbXBvcnQgU2Nyb2xsTnVtYmVyIGZyb20gJy4vc3JjL2luZGV4J1xuU2Nyb2xsTnVtYmVyLmluc3RhbGwgPSBmdW5jdGlvbihWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChTY3JvbGxOdW1iZXIubmFtZSwgU2Nyb2xsTnVtYmVyKVxufVxuXG5leHBvcnQgZGVmYXVsdCBTY3JvbGxOdW1iZXJcbiIsInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKXt2YXIgX3ZtPXRoaXMsX2M9X3ZtLl9zZWxmLl9jO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJzLXNjcm9sbC1udW1iZXJcIn0sX3ZtLl9sKChfdm0uaW5pdE51bUFycmF5KSxmdW5jdGlvbihpdGVtLGluZGV4KXtyZXR1cm4gX2MoJ2xpJyx7a2V5OmluZGV4LHJlZjpcIml0ZW1SZWZcIixyZWZJbkZvcjp0cnVlLGNsYXNzOnsgJ251bWJlci1pdGVtJzogIWlzTmFOKGl0ZW0pLCAnbWFyay1pdGVtJzogaXNOYU4oaXRlbSkgfX0sWyghaXNOYU4oaXRlbSkpP19jKCdzcGFuJyxbX2MoJ2knLFtfdm0uX3YoXCIwMTIzNDU2Nzg5XCIpXSldKTpfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiY29tbWFcIn0sW192bS5fdihfdm0uX3MoaXRlbSkpXSldKX0pLDApXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIiwiPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwicy1zY3JvbGwtbnVtYmVyXCI+XG4gICAgPGxpXG4gICAgICA6Y2xhc3M9XCJ7ICdudW1iZXItaXRlbSc6ICFpc05hTihpdGVtKSwgJ21hcmstaXRlbSc6IGlzTmFOKGl0ZW0pIH1cIlxuICAgICAgdi1mb3I9XCIoaXRlbSwgaW5kZXgpIGluIGluaXROdW1BcnJheVwiXG4gICAgICA6a2V5PVwiaW5kZXhcIlxuICAgICAgcmVmPVwiaXRlbVJlZlwiXG4gICAgPlxuICAgICAgPHNwYW4gdi1pZj1cIiFpc05hTihpdGVtKVwiPlxuICAgICAgICA8aT4wMTIzNDU2Nzg5PC9pPlxuICAgICAgPC9zcGFuPlxuICAgICAgPHNwYW4gY2xhc3M9XCJjb21tYVwiIHYtZWxzZT57eyBpdGVtIH19PC9zcGFuPlxuICAgIDwvbGk+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdTY3JvbGxOdW1iZXInLFxuICBtb2RlbDoge1xuICAgIHByb3A6ICdjb3VudCcsXG4gICAgZXZlbnQ6ICdzZXRDb3VudCcsXG4gIH0sXG4gIHByb3BzOiB7XG4gICAgY291bnQ6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDAsXG4gICAgfSxcbiAgICBpc1Rob3VzYW5kU3BsaXQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZSxcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIOacgOWkp+mZkOWItuiMg+WbtFxuICAgICAqIOWmguaenOWwj+S6juacgOWkp+mZkOWItu+8jOWImeWJjemdouS8muihpTBcbiAgICAgKi9cbiAgICBsZW5ndGg6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDksXG4gICAgfSxcbiAgfSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5pdE51bUFycmF5OiBbJzAnXSwgLy8g5Yid5aeL5YyW5pi+56S655SoXG4gICAgICBkaXNwbGF5TnVtQXJyYXk6IFtdLCAvLyDnnJ/mraPmmL7npLrnmoTmlbDmja5cbiAgICB9XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgY291bnQ6IHtcbiAgICAgIGltbWVkaWF0ZTogdHJ1ZSxcbiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc3QgbnVtID0gdGhpcy5jb3VudFxuICAgICAgICBjb25zdCBudW1BcnJheSA9IHRoaXMubnVtVG9BcnJheShudW0pXG4gICAgICAgIHRoaXMuaW5pdE51bUFycmF5ID0gW11cbiAgICAgICAgbnVtQXJyYXkuZm9yRWFjaCgob3JkZXJOdW1JdGVtKSA9PiB7XG4gICAgICAgICAgaWYgKGlzTmFOKG9yZGVyTnVtSXRlbSkpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdE51bUFycmF5LnB1c2goJywnKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmluaXROdW1BcnJheS5wdXNoKCcwJylcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMuZGlzcGxheU51bUFycmF5ID0gbnVtQXJyYXlcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldE51bWJlclRyYW5zZm9ybSgpXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpXG4gICAgICAgICAgfSwgMClcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbiAgbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgbnVtVG9BcnJheShudW0pIHtcbiAgICAgIGlmICh0aGlzLmlzVGhvdXNhbmRTcGxpdCA9PT0gdHJ1ZSkge1xuICAgICAgICBpZiAodGhpcy5sZW5ndGgpIHtcbiAgICAgICAgICAvLyAtLS0tLeacgOWkp+mZkOWItuiMg+WbtOWIpOaWrXN0YXJ0LS0tLS1cbiAgICAgICAgICBsZXQgbWF4TnVtU3RyID0gJydcbiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIG1heE51bVN0ciArPSAnOSdcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKE51bWJlcihtYXhOdW1TdHIpIDwgbnVtICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ+i2heWHuuS6huacgOWkp+mZkOWItuiMg+WbtCcpXG4gICAgICAgICAgICByZXR1cm4gdGhpcy50aG91c2FuZFNwbGl0KG1heE51bVN0cikuc3BsaXQoJycpXG4gICAgICAgICAgICAvLyByZXR1cm4gW107XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIC0tLS0t5pyA5aSn6ZmQ5Yi26IyD5Zu05Yik5patZW5kLS0tLS1cbiAgICAgICAgICAvLyAtLS0tLeihpTBzdGFydC0tLS0tXG4gICAgICAgICAgbGV0IGZvcm1hdE51bSA9ICcnXG4gICAgICAgICAgaWYgKFN0cmluZyhudW0pLmxlbmd0aCA8PSB0aGlzLmxlbmd0aCkge1xuICAgICAgICAgICAgY29uc3Qgc3ViTGVuZ3RoID0gdGhpcy5sZW5ndGggLSBTdHJpbmcobnVtKS5sZW5ndGhcbiAgICAgICAgICAgIGZvcm1hdE51bSA9IFN0cmluZyhudW0pXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN1Ykxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIGZvcm1hdE51bSA9ICcwJyArIGZvcm1hdE51bVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICAvLyAtLS0tLeihpTBlbmQtLS0tLVxuICAgICAgICAgIHJldHVybiB0aGlzLnRob3VzYW5kU3BsaXQoZm9ybWF0TnVtKS5zcGxpdCgnJylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy50aG91c2FuZFNwbGl0KG51bSkuc3BsaXQoJycpXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBTdHJpbmcobnVtKS5zcGxpdCgnJylcbiAgICAgIH1cbiAgICB9LFxuICAgIC8vIOWNg+S9jeWIhuWJslxuICAgIHRob3VzYW5kU3BsaXQobnVtKSB7XG4gICAgICB2YXIgcmVnID0gL1xcZHsxLDN9KD89KFxcZHszfSkrJCkvZ1xuICAgICAgcmV0dXJuIChudW0gKyAnJykucmVwbGFjZShyZWcsICckJiwnKVxuICAgIH0sXG4gICAgLy8g5paH5a2X5rua5YqoXG4gICAgc2V0TnVtYmVyVHJhbnNmb3JtKCkge1xuICAgICAgdGhpcy5kaXNwbGF5TnVtQXJyYXkuZm9yRWFjaCgoZGlzcGxheU51bUFycmF5SXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgaWYgKCFpc05hTihkaXNwbGF5TnVtQXJyYXlJdGVtKSkge1xuICAgICAgICAgIGNvbnN0IGVsZW0gPSB0aGlzLiRyZWZzLml0ZW1SZWZbaW5kZXhdLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzBdXG4gICAgICAgICAgZWxlbS5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlKC01MCUsIC0ke2Rpc3BsYXlOdW1BcnJheUl0ZW0gKiAxMH0lKWBcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9LFxuICB9LFxufVxuPC9zY3JpcHQ+XG48c3R5bGUgc2NvcGVkIGxhbmc9XCJsZXNzXCI+XG4vKuaAu+mHj+a7muWKqOaVsOWtl+iuvue9riovXG4ucy1zY3JvbGwtbnVtYmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDEwMHB4O1xuICBmb250LXNpemU6IDU0cHg7XG4gIGxpbmUtaGVpZ2h0OiA0MXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIGNvbG9yOiAjMmQ3Y2ZmO1xuICB3cml0aW5nLW1vZGU6IHZlcnRpY2FsLWxyO1xuICB0ZXh0LW9yaWVudGF0aW9uOiB1cHJpZ2h0O1xuICAvKuaWh+Wtl+emgeatoue8lui+kSovXG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7IC8q54Gr54uQKi9cbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsgLyp3ZWJraXTmtY/op4jlmagqL1xuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7IC8qSUUxMCovXG4gIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTsgLyrml6nmnJ/mtY/op4jlmagqL1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgLyogb3ZlcmZsb3c6IGhpZGRlbjsgKi9cbn1cbi8qIOm7mOiupOmAl+WPt+iuvue9riAqL1xuLm1hcmstaXRlbSB7XG4gIHdpZHRoOiAxMHB4O1xuICBoZWlnaHQ6IDEwMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgbGluZS1oZWlnaHQ6IDEwcHg7XG4gIGZvbnQtc2l6ZTogNDhweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAmID4gc3BhbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvdHRvbTogMDtcbiAgICB3cml0aW5nLW1vZGU6IHZlcnRpY2FsLXJsO1xuICAgIHRleHQtb3JpZW50YXRpb246IHVwcmlnaHQ7XG4gIH1cbn1cbi8q5rua5Yqo5pWw5a2X6K6+572uKi9cbi5udW1iZXItaXRlbSB7XG4gIHdpZHRoOiA0MXB4O1xuICBoZWlnaHQ6IDc1cHg7XG4gIGJhY2tncm91bmQ6ICNjY2M7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1MCwgMjUwLCAyNTAsIDEpO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjIxLCAyMjEsIDIyMSwgMSk7XG4gICYgPiBzcGFuIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd3JpdGluZy1tb2RlOiB2ZXJ0aWNhbC1ybDtcbiAgICB0ZXh0LW9yaWVudGF0aW9uOiB1cHJpZ2h0O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgJiA+IGkge1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAxMXB4O1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAxMHB4O1xuICAgIH1cbiAgfVxufVxuLm51bWJlci1pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG59XG48L3N0eWxlPlxuIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NzAzOGYxMjgmc2NvcGVkPXRydWVcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NzAzOGYxMjgmcHJvZCZzY29wZWQ9dHJ1ZSZsYW5nPWxlc3NcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiNzAzOGYxMjhcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTcwMzhmMTI4JnByb2Qmc2NvcGVkPXRydWUmbGFuZz1sZXNzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTcwMzhmMTI4JnByb2Qmc2NvcGVkPXRydWUmbGFuZz1sZXNzXCIiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLyrmgLvph4/mu5rliqjmlbDlrZforr7nva4qL1xcbi5zLXNjcm9sbC1udW1iZXJbZGF0YS12LTcwMzhmMTI4XSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBoZWlnaHQ6IDEwMHB4O1xcbiAgZm9udC1zaXplOiA1NHB4O1xcbiAgbGluZS1oZWlnaHQ6IDQxcHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbiAgY29sb3I6ICMyZDdjZmY7XFxuICB3cml0aW5nLW1vZGU6IHZlcnRpY2FsLWxyO1xcbiAgdGV4dC1vcmllbnRhdGlvbjogdXByaWdodDtcXG4gIC8q5paH5a2X56aB5q2i57yW6L6RKi9cXG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAvKueBq+eLkCovXFxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xcbiAgLyp3ZWJraXTmtY/op4jlmagqL1xcbiAgLypJRTEwKi9cXG4gIC8q5pep5pyf5rWP6KeI5ZmoKi9cXG4gIHVzZXItc2VsZWN0OiBub25lO1xcbiAgLyogb3ZlcmZsb3c6IGhpZGRlbjsgKi9cXG59XFxuLyog6buY6K6k6YCX5Y+36K6+572uICovXFxuLm1hcmstaXRlbVtkYXRhLXYtNzAzOGYxMjhdIHtcXG4gIHdpZHRoOiAxMHB4O1xcbiAgaGVpZ2h0OiAxMDBweDtcXG4gIG1hcmdpbi1yaWdodDogNXB4O1xcbiAgbGluZS1oZWlnaHQ6IDEwcHg7XFxuICBmb250LXNpemU6IDQ4cHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcbi5tYXJrLWl0ZW0gPiBzcGFuW2RhdGEtdi03MDM4ZjEyOF0ge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBib3R0b206IDA7XFxuICB3cml0aW5nLW1vZGU6IHZlcnRpY2FsLXJsO1xcbiAgdGV4dC1vcmllbnRhdGlvbjogdXByaWdodDtcXG59XFxuLyrmu5rliqjmlbDlrZforr7nva4qL1xcbi5udW1iZXItaXRlbVtkYXRhLXYtNzAzOGYxMjhdIHtcXG4gIHdpZHRoOiA0MXB4O1xcbiAgaGVpZ2h0OiA3NXB4O1xcbiAgYmFja2dyb3VuZDogI2NjYztcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICBtYXJnaW4tcmlnaHQ6IDVweDtcXG4gIGJhY2tncm91bmQ6ICNmYWZhZmE7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjZGRkZGRkO1xcbn1cXG4ubnVtYmVyLWl0ZW0gPiBzcGFuW2RhdGEtdi03MDM4ZjEyOF0ge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB3cml0aW5nLW1vZGU6IHZlcnRpY2FsLXJsO1xcbiAgdGV4dC1vcmllbnRhdGlvbjogdXByaWdodDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcbi5udW1iZXItaXRlbSA+IHNwYW4gPiBpW2RhdGEtdi03MDM4ZjEyOF0ge1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAxMXB4O1xcbiAgbGVmdDogNTAlO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcXG4gIGxldHRlci1zcGFjaW5nOiAxMHB4O1xcbn1cXG4ubnVtYmVyLWl0ZW1bZGF0YS12LTcwMzhmMTI4XTpsYXN0LWNoaWxkIHtcXG4gIG1hcmdpbi1yaWdodDogMDtcXG59XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiJdLCJzb3VyY2VSb290IjoiIn0=