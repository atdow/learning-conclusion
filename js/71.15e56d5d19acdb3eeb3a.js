(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{224:function(t,e,i){"use strict";i.r(e);var n={name:"SProgress",props:{percent:{type:Number,default:0},direction:{type:String,default:"left",validator:function(t){return-1!==["left","right"].indexOf(t)}},strokeColor:{type:String,default:"green"},background:{type:String,default:"#ebeef5"},height:{type:Number,default:20},strokeRadius:{type:Boolean,default:!0},containerRadius:{type:Boolean,default:!0},minWidth:{type:Number,default:0},resizeDebounce:{type:Number,default:0}},data:()=>({progressContentWidth:"0%"}),components:{},watch:{percent:{immediate:!0,handler:function(){this.minWidth?this.calProgressHasMinWidthContentWidth():this.progressContentWidth=this.percent+"%"}}},computed:{},created(){},mounted(){this.minWidth&&(window.addEventListener("resize",this.calProgressHasMinWidthContentWidth,this.resizeDebounce),this.$once("hook:beforeDestroy",()=>{window.removeEventListener("resize",this.calProgressHasMinWidthContentWidth)}))},methods:{calProgressHasMinWidthContentWidth(){this.$nextTick(()=>{const{progressContainerRef:t}=this.$refs,e=t.getBoundingClientRect().width-this.minWidth||0;this.progressContentWidth=this.minWidth+this.percent/100*e+"px"})}},beforeDestroy(){}},r=(i(322),i(9)),s=Object(r.a)(n,(function(){var t=this,e=t._self._c;return t.percent,e("div",{ref:"progressContainerRef",staticClass:"s-progress",style:{width:"calc(100%)",height:t.height+"px",background:t.background,"line-height":t.height+"px","justify-content":"left"===t.direction?"flex-start":"flex-end","border-radius":!0===t.containerRadius?t.height/2+"px":"0px"}},[e("div",{staticClass:"s-progress-content",style:{background:t.strokeColor,width:t.progressContentWidth,"text-align":"right"===t.direction?"left":"right","border-radius":!0===t.strokeRadius?t.height/2+"px":"0px"}},[t.$slots.default?[e("div",{style:{"margin-right":"left"===t.direction?"10px":0,"margin-left":"right"===t.direction?"10px":0}},[t._t("default")],2)]:[e("div",{style:{"margin-right":"left"===t.direction?"10px":0,"margin-left":"right"===t.direction?"10px":0}},[t._v("\n        "+t._s(t.percent)+"%\n      ")])]],2)])}),[],!1,null,"0cf3d02d",null);e.default=s.exports},305:function(t,e,i){var n=i(2),r=i(323);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[t.i,r,""]]);var s={insert:"head",singleton:!1};n(r,s);t.exports=r.locals||{}},322:function(t,e,i){"use strict";i(305)},323:function(t,e,i){(e=i(3)(!1)).push([t.i,".s-progress[data-v-0cf3d02d] {\n  display: flex;\n  width: 100%;\n  font-size: 12px;\n  color: white;\n  overflow: hidden;\n  position: relative;\n}\n.s-progress-content[data-v-0cf3d02d] {\n  flex-shrink: 0;\n  box-sizing: border-box;\n  overflow: hidden;\n}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,