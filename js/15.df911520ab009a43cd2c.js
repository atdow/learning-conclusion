(window.webpackJsonp=window.webpackJsonp||[]).push([[15,54,63,115],{110:function(t,e,i){"use strict";i.r(e);var s=i(246),n={data:()=>({text:"2.文字"}),components:{EllipsisTooltip:s.default},methods:{decText(){this.text=this.text.slice(0,this.text.length-5)},addText(){this.text+="添加的文字"}}},l=i(9),o=Object(l.a)(n,(function(){var t=this,e=t._self._c;return e("div",[e("ellipsis-tooltip",{attrs:{text:"单行省略"}},[t._v("\n   1.单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略\n ")]),t._v(" "),e("br"),t._v(" "),e("ellipsis-tooltip",{attrs:{text:t.text}},[t._v(t._s(t.text))]),t._v(" "),e("br"),t._v(" "),e("button",{on:{click:t.decText}},[t._v("减少文字")]),t._v(" "),e("button",{on:{click:t.addText}},[t._v("添加文字")])],1)}),[],!1,null,"248bb67e",null).exports,r={data:()=>({text:"2.文字"}),components:{EllipsisTooltip:s.default},methods:{decText(){this.text=this.text.slice(0,this.text.length-5)},addText(){this.text+="添加的文字"}}},c={name:"ComponentDoc",components:{Comt3b1jvlozsy8tmDemo0:o,Comt3b1jvlozsy8tmDemo1:Object(l.a)(r,(function(){var t=this,e=t._self._c;return e("div",[e("ellipsis-tooltip",{staticStyle:{"line-height":"20px"},attrs:{lines:2,text:"多行省略"}},[t._v("\n   1.多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略\n ")]),t._v(" "),e("br"),t._v(" "),e("ellipsis-tooltip",{staticStyle:{"line-height":"20px"},attrs:{lines:2,text:t.text}},[t._v(t._s(t.text))]),t._v(" "),e("br"),t._v(" "),e("button",{on:{click:t.decText}},[t._v("减少文字")]),t._v(" "),e("button",{on:{click:t.addText}},[t._v("添加文字")])],1)}),[],!1,null,"00c1d92e",null).exports}},a=Object(l.a)(c,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"vue-demo-container"},[t._m(0),t._v(" "),t._m(1),t._v(" "),e("h4",[t._v("1. 单行省略")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Comt3b1jvlozsy8tmDemo0"),t._v(" "),t._m(2)],1),t._v(" "),e("h4",[t._v("2. 多行省略")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Comt3b1jvlozsy8tmDemo1"),t._v(" "),t._m(3)],1),t._v(" "),e("h3",[t._v("API")]),t._v(" "),t._m(4)])}),[function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("当指定 "),t("code",[this._v("多行省略")]),this._v(" 时，如果计算错误，请给容器内的文字添加 "),t("code",[this._v("line-height")]),this._v(" 样式")])])},function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("组件使用 "),t("code",[this._v("el-tooltip")]),this._v(" 作为tooltip基础组件，如果使用其他ui组件，请手动替换代码的tooltip基础组件")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n   <div>\n    <ellipsis-tooltip text="单行省略">\n      1.单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略单行省略\n    </ellipsis-tooltip>\n    <br/>\n    <ellipsis-tooltip :text="text">{{ text }}</ellipsis-tooltip>\n    <br/>\n    <button @click="decText">减少文字</button>\n    <button @click="addText">添加文字</button>\n   </div>\n</template>\n\n<script>\nimport EllipsisTooltip from "@/packages/ellipsis-tooltip";\nexport default {\n  data() {\n    return {\n      text: \'2.文字\'\n    }\n  },\n  components: {\n    EllipsisTooltip,\n  },\n  methods: {\n    decText() {\n      this.text = this.text.slice(0, this.text.length - 5)\n    },\n    addText() {\n      this.text += \'添加的文字\'\n    }\n  }\n};\n<\/script>\n\n<style lang="less" scoped></style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n   <div>\n    <ellipsis-tooltip :lines="2" text="多行省略" style="line-height: 20px">\n      1.多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略多行省略\n    </ellipsis-tooltip>\n    <br/>\n    <ellipsis-tooltip :lines="2" :text="text" style="line-height: 20px">{{ text }}</ellipsis-tooltip>\n    <br/>\n    <button @click="decText">减少文字</button>\n    <button @click="addText">添加文字</button>\n   </div>\n</template>\n\n<script>\nimport EllipsisTooltip from "@/packages/ellipsis-tooltip";\nexport default {\n  data() {\n    return {\n      text: \'2.文字\'\n    }\n  },\n  components: {\n    EllipsisTooltip,\n  },\n  methods: {\n    decText() {\n      this.text = this.text.slice(0, this.text.length - 5)\n    },\n    addText() {\n      this.text += \'添加的文字\'\n    }\n  }\n};\n<\/script>\n\n<style lang="less" scoped></style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("属性")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认值")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("lines")]),t._v(" "),e("td",[t._v("省略行数")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("1")])]),t._v(" "),e("tr",[e("td",[t._v("text")]),t._v(" "),e("td",[t._v("容器内的文本( "),e("code",[t._v("用于监测容器内文本变化时触动计算")]),t._v(" )")]),t._v(" "),e("td",[t._v("String "),e("code",[t._v("required")])]),t._v(" "),e("td",[t._v("''")])])])])}],!1,null,null,null);e.default=a.exports},206:function(t,e,i){"use strict";i.r(e),i.d(e,"addResizeListener",(function(){return o})),i.d(e,"removeResizeListener",(function(){return r}));i(24);var s=i(300);const n="undefined"==typeof window,l=function(t){for(const e of t){const t=e.target.__resizeListeners__||[];t.length&&t.forEach(t=>{t()})}},o=function(t,e){n||(t.__resizeListeners__||(t.__resizeListeners__=[],t.__ro__=new s.default(l),t.__ro__.observe(t)),t.__resizeListeners__.push(e))},r=function(t,e){t&&t.__resizeListeners__&&(t.__resizeListeners__.splice(t.__resizeListeners__.indexOf(e),1),t.__resizeListeners__.length||t.__ro__.disconnect())}},242:function(t,e,i){"use strict";i.r(e);var s=i(206),n={name:"EllipsisTooltip",props:{lines:{type:Number,default:1},text:{type:String,require:!0}},data:()=>({isEllipsis:!1}),components:{},watch:{text:{handler:function(){this.$nextTick(()=>{this.calTooltip()})}}},computed:{},created(){},mounted(){Object(s.addResizeListener)(this.$refs.contentRef,this.resizeResolve)},methods:{resizeResolve(){this.calTooltip()},calTooltip(){this.setIsEllipsis(!1),this.$nextTick(()=>{if(this.lines>1){const t=this.$refs.slotMultiContainerRef;if(!t)return;const e=window.getComputedStyle(t,null),i=e.fontSize.replace("px",""),s="normal"===e.lineHeight?i:e.lineHeight.replace("px",""),n=Math.round(e.height.replace("px","")/s);this.setIsEllipsis(n>this.lines)}else{const t=this.$refs.slotSingleContainerRef2;if(!t)return;const e=this.isSingleOverEllipsis(t);this.setIsEllipsis(e)}})},setIsEllipsis(t){this.isEllipsis=t},isSingleOverEllipsis(t){const e=t,i=e.getBoundingClientRect().width,s=document.createRange();s.setStart(e,0),s.setEnd(e,e.childNodes.length);const n=s.getBoundingClientRect().width;return s.detach(),n>i}},beforeDestroy(){Object(s.removeResizeListener)(this.$refs.contentRef,this.resizeResolve)}},l=(i(347),i(9)),o=Object(l.a)(n,(function(){var t=this,e=t._self._c;return e("div",{ref:"contentRef",staticClass:"ellipsis"},[t.lines>1?e("div",{ref:"slotMultiContainerRef"},[t.isEllipsis?e("div",{staticClass:"over-ellipsis-n",style:{"-webkit-line-clamp":t.lines}},[e("el-tooltip",{staticClass:"box-item",attrs:{effect:"dark",placement:"top"},scopedSlots:t._u([{key:"content",fn:function(){return[t._t("default")]},proxy:!0}],null,!0)},[t._v(" "),e("div",[t._t("default")],2)])],1):t._t("default")],2):e("div",{ref:"slotSingleContainerRef2",staticStyle:{"white-space":"nowrap"}},[t.isEllipsis?e("div",{staticClass:"over-ellipsis-n",style:{"-webkit-line-clamp":t.lines}},[e("el-tooltip",{staticClass:"box-item",attrs:{effect:"dark",placement:"top"},scopedSlots:t._u([{key:"content",fn:function(){return[t._t("default")]},proxy:!0}],null,!0)},[t._v(" "),e("div",{staticClass:"single-over-ellipsis"},[t._t("default")],2)])],1):t._t("default")],2)])}),[],!1,null,"524c2ab4",null);e.default=o.exports},246:function(t,e,i){"use strict";i.r(e);var s=i(242);s.default.install=function(t){t.component(s.default.name,s.default)},e.default=s.default},318:function(t,e,i){var s=i(2),n=i(348);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[t.i,n,""]]);var l={insert:"head",singleton:!1};s(n,l);t.exports=n.locals||{}},347:function(t,e,i){"use strict";i(318)},348:function(t,e,i){(e=i(3)(!1)).push([t.i,".over-ellipsis-n[data-v-524c2ab4] {\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 1;\n  overflow: hidden;\n}\n.single-over-ellipsis[data-v-524c2ab4] {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-bottom: 0;\n}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,