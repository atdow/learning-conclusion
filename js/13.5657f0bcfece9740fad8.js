(window.webpackJsonp=window.webpackJsonp||[]).push([[13,72],{107:function(t,n,e){"use strict";e.r(n);var i=e(210),o={name:"dynamic-number",props:{},data:()=>({menuWidth:400}),components:{WidthDrag:i.default},watch:{},computed:{},created(){},mounted(){},methods:{widthChange(t){this.menuWidth=t}},beforeDestroy(){}},d=(e(642),e(9)),a=Object(d.a)(o,(function(){var t=this._self._c;return t("div",{staticClass:"width-drag-demo"},[t("div",{staticClass:"content",style:{width:this.menuWidth+"px"}},[t("width-drag",{staticClass:"width-drag",attrs:{width:this.menuWidth,"min-width":200,"max-width":600},on:{widthChange:this.widthChange}})],1)])}),[],!1,null,"0fcd1d00",null).exports,s={name:"dynamic-number",props:{},data:()=>({menuWidth:400}),components:{WidthDrag:i.default},watch:{},computed:{},created(){},mounted(){},methods:{widthChange(t){this.menuWidth=t}},beforeDestroy(){}},r=(e(644),{name:"ComponentDoc",components:{Com3puant1h5lncx1zziDemo0:a,Com3puant1h5lncx1zziDemo1:Object(d.a)(s,(function(){var t=this._self._c;return t("div",{staticClass:"width-drag-demo2"},[t("div",{staticClass:"content",style:{width:this.menuWidth+"px"}},[t("width-drag",{staticClass:"width-drag",attrs:{width:this.menuWidth,"min-width":200,"max-width":600,positionType:"left"},on:{widthChange:this.widthChange}})],1)])}),[],!1,null,"6655818e",null).exports}}),h=Object(d.a)(r,(function(){var t=this,n=t._self._c;return n("div",{staticClass:"vue-demo-container"},[n("h4",[t._v("1. 基础用法")]),t._v(" "),n("div",{staticClass:"vue-demo-wrapper"},[n("Com3puant1h5lncx1zziDemo0"),t._v(" "),t._m(0)],1),t._v(" "),n("h4",[t._v("2. 指定左侧拖拽")]),t._v(" "),n("div",{staticClass:"vue-demo-wrapper"},[n("Com3puant1h5lncx1zziDemo1"),t._v(" "),t._m(1)],1),t._v(" "),n("h3",[t._v("API")]),t._v(" "),t._m(2)])}),[function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <div class="width-drag-demo">\n    <div class="content" :style="{ width: menuWidth + \'px\' }">\n      <width-drag class="width-drag" :width="menuWidth" :min-width="200" :max-width="600" @widthChange="widthChange" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport WidthDrag from "@/packages/width-drag";\nexport default {\n  name: "dynamic-number",\n  props: {},\n  data() {\n    return {\n      menuWidth: 400,\n    };\n  },\n  components: {\n    WidthDrag,\n  },\n  watch: {},\n  computed: {},\n  created() {},\n  mounted() {}, \n  methods: {\n    widthChange(value) {\n      this.menuWidth = value\n    },\n  },\n  beforeDestroy() {},\n};\n<\/script>\n\n<style lang="less" scoped>\n.width-drag-demo {\n  .content {\n    width: 400px;\n    height: 200px;\n    border: 1px solid #ccc;\n    position: relative;\n    .width-drag {\n      position: absolute;\n      top: 0;\n      right: -1px;\n      bottom: 0;\n    }\n  }\n}\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <div class="width-drag-demo2">\n    <div class="content" :style="{ width: menuWidth + \'px\' }">\n      <width-drag class="width-drag" :width="menuWidth" :min-width="200" :max-width="600" positionType="left" @widthChange="widthChange" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport WidthDrag from "@/packages/width-drag";\nexport default {\n  name: "dynamic-number",\n  props: {},\n  data() {\n    return {\n      menuWidth: 400,\n    };\n  },\n  components: {\n    WidthDrag,\n  },\n  watch: {},\n  computed: {},\n  created() {},\n  mounted() {}, \n  methods: {\n    widthChange(value) {\n      this.menuWidth = value\n    },\n  },\n  beforeDestroy() {},\n};\n<\/script>\n\n<style lang="less" scoped>\n.width-drag-demo2 {\n  display: flex;\n  justify-content: flex-end;\n  .content {\n    width: 400px;\n    height: 200px;\n    border: 1px solid #ccc;\n    position: relative;\n    .width-drag {\n      position: absolute;\n      top: 0;\n      left: -1px;\n      bottom: 0;\n    }\n  }\n}\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this,n=t._self._c;return n("table",[n("thead",[n("tr",[n("th",[t._v("属性")]),t._v(" "),n("th",[t._v("说明")]),t._v(" "),n("th",[t._v("类型")]),t._v(" "),n("th",[t._v("默认值")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("width")]),t._v(" "),n("td",[t._v("当前宽度")]),t._v(" "),n("td",[t._v("Number "),n("code",[t._v("required")])]),t._v(" "),n("td",[t._v("-")])]),t._v(" "),n("tr",[n("td",[t._v("minWidth")]),t._v(" "),n("td",[t._v("最小宽度")]),t._v(" "),n("td",[t._v("Number "),n("code",[t._v("required")])]),t._v(" "),n("td",[t._v("-")])]),t._v(" "),n("tr",[n("td",[t._v("maxWidth")]),t._v(" "),n("td",[t._v("最大宽度")]),t._v(" "),n("td",[t._v("Number "),n("code",[t._v("required")])]),t._v(" "),n("td",[t._v("-")])]),t._v(" "),n("tr",[n("td",[t._v("positionType")]),t._v(" "),n("td",[t._v("拖拽方向")]),t._v(" "),n("td",[t._v("String "),n("code",[t._v("right/left")])]),t._v(" "),n("td",[t._v("right")])])])])}],!1,null,null,null);n.default=h.exports},210:function(t,n,e){"use strict";e.r(n);var i={name:"HorizontalDrag",props:{width:{type:Number,require:!0},minWidth:{type:Number,require:!0},maxWidth:{type:Number,require:!0},positionType:{type:String,validator:t=>-1!==["left","right"].indexOf(t),default:"right"}},data:()=>({showDragDom:!1,startPosition:{x:0,y:0},dragDomX:0,ragDomHeight:0}),components:{},watch:{},computed:{positionRate:function(){return"right"===this.positionType?1:-1}},created(){},mounted(){},methods:{getDragDomStyle(){return{left:this.startPosition.x+"px",height:this.dragDomHeight+"px",transform:`translateX(${this.dragDomX}px)`}},handleMouseDown(t){if(!t.target.classList.contains("horizontal-drag"))return;const{height:n,width:e,left:i,top:o}=this.$refs.horizontalDragDom.getBoundingClientRect();this.startPosition={x:i,y:o},this.dragDomX=0,this.dragDomHeight=n,this.showDragDom=!0,this.setGlobalCursor("col-resize"),document.addEventListener("mousemove",this.handleMouseMove),document.addEventListener("mouseup",this.handleMouseUp),"right"===this.positionType&&this.$nextTick(()=>{this.startPosition={x:i+e-this.$refs.dragDomRef.getBoundingClientRect().width,y:o}})},handleMouseMove(t){const n=t.clientX;this.updateDragDomX(n,n-this.startPosition.x),t.preventDefault()},updateDragDomX(t,n){this.dragDomX=t-this.startPosition.x;const e=this.width+this.dragDomX*this.positionRate;e>this.maxWidth?this.dragDomX=(this.maxWidth-this.width)*this.positionRate:e<this.minWidth&&(this.dragDomX=(this.minWidth-this.width)*this.positionRate)},handleMouseUp(){this.showDragDom=!1,this.$emit("widthChange",this.width+this.dragDomX*this.positionRate),this.setGlobalCursor("auto"),document.removeEventListener("mousemove",this.handleMouseMove),document.removeEventListener("mouseup",this.handleMouseUp)},setGlobalCursor(t){document.body.style.cursor=t},disableGlobalSelect(){document.body.style.userSelect="none"},removeDisableGlobalSelect(){document.body.style.userSelect="auto"}},beforeDestroy(){}},o=(e(300),e(9)),d=Object(o.a)(i,(function(){var t=this._self._c;return t("div",{ref:"horizontalDragDom",class:["horizontal-drag",{"horizontal-drag__left":"left"===this.positionType,"horizontal-drag__hidden":this.showDragDom}],on:{mousedown:this.handleMouseDown}},[this.showDragDom?t("div",{ref:"dragDomRef",staticClass:"drag-dom",style:this.getDragDomStyle()}):this._e()])}),[],!1,null,"49f4da2a",null);n.default=d.exports},294:function(t,n,e){var i=e(2),o=e(301);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var d={insert:"head",singleton:!1};i(o,d);t.exports=o.locals||{}},300:function(t,n,e){"use strict";e(294)},301:function(t,n,e){(n=e(3)(!1)).push([t.i,".horizontal-drag[data-v-49f4da2a] {\n  position: relative;\n  width: 6px;\n  background: transparent;\n  cursor: col-resize;\n}\n.horizontal-drag[data-v-49f4da2a]:not(.horizontal-drag__left) {\n  border-right: 2px solid transparent;\n}\n.horizontal-drag[data-v-49f4da2a]:not(.horizontal-drag__left):hover {\n  border-right: 2px solid green;\n}\n.horizontal-drag.horizontal-drag__left[data-v-49f4da2a] {\n  border-left: 2px solid transparent;\n}\n.horizontal-drag.horizontal-drag__left[data-v-49f4da2a]:hover {\n  border-left: 2px solid green;\n}\n.horizontal-drag.horizontal-drag__hidden[data-v-49f4da2a] {\n  border: none !important;\n}\n.horizontal-drag .drag-dom[data-v-49f4da2a] {\n  position: fixed;\n  width: 2px;\n  background: green;\n  cursor: col-resize;\n}\n",""]),t.exports=n},388:function(t,n,e){var i=e(2),o=e(643);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var d={insert:"head",singleton:!1};i(o,d);t.exports=o.locals||{}},389:function(t,n,e){var i=e(2),o=e(645);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var d={insert:"head",singleton:!1};i(o,d);t.exports=o.locals||{}},642:function(t,n,e){"use strict";e(388)},643:function(t,n,e){(n=e(3)(!1)).push([t.i,".width-drag-demo .content[data-v-0fcd1d00] {\n  width: 400px;\n  height: 200px;\n  border: 1px solid #ccc;\n  position: relative;\n}\n.width-drag-demo .content .width-drag[data-v-0fcd1d00] {\n  position: absolute;\n  top: 0;\n  right: -1px;\n  bottom: 0;\n}\n",""]),t.exports=n},644:function(t,n,e){"use strict";e(389)},645:function(t,n,e){(n=e(3)(!1)).push([t.i,".width-drag-demo2[data-v-6655818e] {\n  display: flex;\n  justify-content: flex-end;\n}\n.width-drag-demo2 .content[data-v-6655818e] {\n  width: 400px;\n  height: 200px;\n  border: 1px solid #ccc;\n  position: relative;\n}\n.width-drag-demo2 .content .width-drag[data-v-6655818e] {\n  position: absolute;\n  top: 0;\n  left: -1px;\n  bottom: 0;\n}\n",""]),t.exports=n}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,