(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{296:function(t,i,e){"use strict";e.r(i);e(24);var n={name:"ListView",computed:{contentHeight(){return this.data.length*this.itemHeight}},mounted(){this.getData(),this.update()},data:()=>({data:[],itemHeight:30,list:[]}),methods:{update(t=0){const i=Math.ceil(this.$el.clientHeight/this.itemHeight),e=Math.floor(t/this.itemHeight),n=e+i;this.list=this.data.slice(e,n),this.$refs.content.style.webkitTransform=`translate3d(0, ${e*this.itemHeight}px, 0)`},handleScroll(t){const i=this.$refs.container.scrollTop;this.update(i)},getData(){const t=[];for(let i=0;i<1e6;i++)t.push(`第 ${i} 个数据`);this.data=[...t]}}},s=(e(627),e(9)),a=Object(s.a)(n,(function(){var t=this,i=t._self._c;return i("div",{staticClass:"test-component"},[i("div",[i("div",{ref:"container",staticClass:"list-view",on:{scroll:t.handleScroll}},[i("div",{ref:"clientHeight",staticClass:"list-view-phantom",style:{height:t.contentHeight+"px"}}),t._v(" "),i("ul",{ref:"content",staticClass:"list-view-content"},t._l(t.list,(function(e,n){return i("li",{key:n,staticClass:"list-view-item",style:{height:t.itemHeight+"px"}},[t._v("\n          "+t._s(e)+"\n        ")])})),0)])])])}),[],!1,null,"ab152f72",null);i.default=a.exports},390:function(t,i,e){var n=e(2),s=e(628);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[t.i,s,""]]);var a={insert:"head",singleton:!1};n(s,a);t.exports=s.locals||{}},627:function(t,i,e){"use strict";e(390)},628:function(t,i,e){(i=e(3)(!1)).push([t.i,".list-view[data-v-ab152f72] {\n  width: 400px;\n  height: 400px;\n  overflow: auto;\n  position: relative;\n  border: 1px solid #c1c1c1;\n  box-shadow: 3px 3px 5px #ccc;\n}\n.list-view-phantom[data-v-ab152f72] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  z-index: -1;\n}\n.list-view-content[data-v-ab152f72] {\n  left: 0;\n  right: 0;\n  top: 0;\n  position: relative;\n}\n.list-view-item[data-v-ab152f72] {\n  padding: 6px;\n  color: #999;\n  line-height: 30px;\n}\n",""]),t.exports=i}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,