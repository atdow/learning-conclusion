(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{119:function(t,e,s){"use strict";s.r(e);var a={name:"ComponentDoc",components:{}},n=s(9),l=Object(n.a)(a,(function(){this._self._c;return this._m(0)}),[function(){var t=this,e=t._self._c;return e("div",{staticClass:"vue-demo-container"},[e("h2",[t._v("1. 修改git账号")]),t._v(" "),e("pre",[e("code",{staticClass:"language-shell"},[t._v('git config--global user.name "yourGitUserName"\ngit config--global user.email "youGitEmail"\n')])]),t._v(" "),e("h2",[t._v("2. 删除分支")]),t._v(" "),e("pre",[e("code",{staticClass:"language-shell"},[t._v("# 删除本地分支\ngit branch -D branch_name\n# 删除远程分支\ngit push origin branch_name --delete\n")])]),t._v(" "),e("h2",[t._v("3. git配置用户名和邮箱")]),t._v(" "),e("pre",[e("code",{staticClass:"language-shell"},[t._v("git config --global user.name <yourUserName>\ngit config --global user.email <xxx@xx.com>\n\ngit config --global user.name xxx\ngit config --global user.email xxx@xxx.com\n")])]),t._v(" "),e("h2",[t._v("4. github代理")]),t._v(" "),e("p",[t._v("如果代理类型是socks5进行如下设置即可")]),t._v(" "),e("pre",[e("code",{staticClass:"language-shell"},[t._v("git config --global http.proxy socks5://127.0.0.1:1086\ngit config --global https.proxy socks5://127.0.0.1:1086\n")])]),t._v(" "),e("p",[t._v("如果是普通的http/https进行如下设置即可")]),t._v(" "),e("pre",[e("code",{staticClass:"language-shell"},[t._v("git config --global https.proxy http://127.0.0.1:1087\ngit config --global https.proxy https://127.0.0.1:1087\n")])]),t._v(" "),e("p",[t._v("取消代理设置")]),t._v(" "),e("pre",[e("code",{staticClass:"language-shell"},[t._v("git config --global --unset http.proxy \ngit config --global --unset https.proxy\n")])]),t._v(" "),e("p",[t._v("查看代理设置")]),t._v(" "),e("pre",[e("code",{staticClass:"language-shell"},[t._v("git config -l --global\n")])]),t._v(" "),e("p",[t._v("mac git配置文件位置")]),t._v(" "),e("pre",[e("code",{staticClass:"language-text"},[t._v("/Users/a/.gitconfig\n")])]),t._v(" "),e("h2",[t._v("5. 更新本地列表")]),t._v(" "),e("pre",[e("code",{staticClass:"language-text"},[t._v("git remote update\n")])]),t._v(" "),e("h2",[t._v("5. https和ssh切换")]),t._v(" "),e("h3",[t._v("5.1 https切换ssh")]),t._v(" "),e("pre",[e("code",{staticClass:"language-shell"},[t._v("# ssh地址：git@github.com:atdow/xxx.git\n# git remote set-url origin '重新设置的url'\ngit remote set-url origin git@github.com:atdow/xxx.git\n")])])])}],!1,null,null,null);e.default=l.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,