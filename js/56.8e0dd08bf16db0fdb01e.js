(window.webpackJsonp=window.webpackJsonp||[]).push([[56,65],{233:function(t,a,e){"use strict";e.r(a);e(23);var r={name:"ColorGridChart",props:{data:{type:Array,default:function(){return[[]]}},itemHeight:{type:Number,default:50}},data:()=>({maxValue:0,minValue:0,colors:[],startColor:"#eceff9",endColor:"#273C70"}),components:{},watch:{data:{immediate:!0,handler:function(){const{max:t,min:a}=this.calDataBoundaryValue();this.maxValue=t,this.minValue=a;let e=0;e=0===this.minValue?0===this.maxValue?0:this.maxValue-this.minValue+1:this.maxValue-this.minValue;const r=this.gradientColors(this.startColor,this.endColor,e);this.colors=r}}},computed:{},created(){},mounted(){},methods:{gradientColors(t,a,e,r){var o,n,l,i,s=[],c=[];r=r||1;var u=function(t){return Math.pow(t/255,r)};for(t=this.parseColor(t).map(u),a=this.parseColor(a).map(u),o=0;o<e;o++){for(i=1-(l=o/(e-1)),n=0;n<3;n++)c[n]=this.pad(Math.round(255*Math.pow(t[n]*i+a[n]*l,1/r)).toString(16));s.push("#"+c.join(""))}return s},parseColor:t=>4===t.length?t.substr(1).split("").map((function(t){return 17*parseInt(t,16)})):[t.substr(1,2),t.substr(3,2),t.substr(5,2)].map((function(t){return parseInt(t,16)})),pad:t=>1===t.length?"0"+t:t,calDataBoundaryValue(){let t=0,a=0;return this.data.forEach(e=>{e&&e.forEach(e=>{e.value>t&&(t=e.value),e.value<a&&(a=e.value)})}),{max:t,min:a}},calItemColor(t){let a="white",e=Math.ceil((this.colors.length-1)*t/(this.maxValue-this.minValue));return e>this.colors.length-1&&(e=this.colors.length-1),a=this.colors[e],{color:a,colorsIndex:e}},itemClick(t){this.$emit("itemClick",t)}},beforeDestroy(){}},o=(e(333),e(9)),n=Object(o.a)(r,(function(){var t=this,a=t._self._c;return a("div",{staticClass:"color-grid-chart"},t._l(t.data,(function(e,r){return a("div",{key:r,staticClass:"color-grid-chart-row",style:{height:t.itemHeight+"px"}},t._l(e,(function(e,r){return a("div",{key:r,staticClass:"color-grid-chart-item",style:{background:t.calItemColor(e.value).color},on:{click:function(a){return t.itemClick(e)}}},[t.$scopedSlots.default?[t._t("default",null,{record:e})]:a("span",[t._v(" "+t._s(e.value))])],2)})),0)})),0)}),[],!1,null,"070ca96a",null);a.default=n.exports},237:function(t,a,e){"use strict";e.r(a);var r=e(233);r.default.install=function(t){t.component(r.default.name,r.default)},a.default=r.default},305:function(t,a,e){var r=e(2),o=e(334);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var n={insert:"head",singleton:!1};r(o,n);t.exports=o.locals||{}},333:function(t,a,e){"use strict";e(305)},334:function(t,a,e){(a=e(3)(!1)).push([t.i,".color-grid-chart-row[data-v-070ca96a] {\n  display: flex;\n  width: 100%;\n}\n.color-grid-chart-item[data-v-070ca96a] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  flex: 1;\n  border: 1px solid white;\n}\n.color-grid-chart-item[data-v-070ca96a]:hover {\n  border-color: black;\n}\n",""]),t.exports=a}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,