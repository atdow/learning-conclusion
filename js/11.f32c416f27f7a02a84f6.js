(window.webpackJsonp=window.webpackJsonp||[]).push([[11,38,39,44,48,77,84,103,104,110],{111:function(t,e,i){"use strict";i.r(e);i(23);var s={name:"ScrollbarExample",props:{},data:()=>({data:[]}),components:{VirtualList:i(247).default},watch:{},computed:{},created(){const t=[];for(let e=0;e<100;e++)t.push(e);this.data=t},mounted(){},methods:{scrollBottom(){console.log("scrollBottom")},scroll(t){console.log("data:",t)},scrollTopTest(){this.$refs.virtualListRef.resetToTop()}},beforeDestroy(){}},o=i(9),r={name:"ComponentDoc",components:{Comzzozf1hulnbo364zDemo0:Object(o.a)(s,(function(){var t=this,e=t._self._c;return e("div",[e("virtual-list",{ref:"virtualListRef",attrs:{data:t.data,maxHeight:300,itemHeight:30},on:{scroll:t.scroll,scrollBottom:t.scrollBottom},scopedSlots:t._u([{key:"default",fn:function({item:i,index:s}){return e("div",{},[t._v(t._s(i))])}}])}),t._v(" "),e("button",{staticStyle:{"margin-top":"10px"},on:{click:t.scrollTopTest}},[t._v("滚动到顶部")])],1)}),[],!1,null,"2885c87a",null).exports}},n=Object(o.a)(r,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"vue-demo-container"},[e("h3",[t._v("1. 基本使用")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Comzzozf1hulnbo364zDemo0"),t._v(" "),t._m(0)],1),t._v(" "),e("h3",[t._v("API")]),t._v(" "),t._m(1),t._v(" "),e("h3",[t._v("事件")]),t._v(" "),t._m(2),t._v(" "),e("h3",[t._v("方法")]),t._v(" "),t._m(3)])}),[function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <div>\n    <virtual-list \n      :data="data" \n      :maxHeight="300" \n      :itemHeight="30" \n      ref="virtualListRef"\n      @scroll="scroll"\n      @scrollBottom="scrollBottom"\n    >\n      <div slot-scope="{ item, index }">{{ item }}</div>\n    </virtual-list>\n    <button style="margin-top: 10px" @click="scrollTopTest">滚动到顶部</button>\n  </div>\n\n</template>\n<script>\nimport VirtualList from "@/packages/virtual-list";\nexport default {\n  name: "ScrollbarExample",\n  props: {},\n  data() {\n    return {\n      data: []\n    };\n  },\n  components: {\n    VirtualList,\n  },\n  watch: {},\n  computed: {},\n  created() {\n    const data = []\n    for(let i = 0;i < 100; i++){\n      data.push(i)\n    }\n    this.data = data\n  },\n  mounted() {},\n  methods: {\n    scrollBottom() {\n      console.log(\'scrollBottom\')\n    },\n    scroll(data) {\n      console.log(\'data:\', data)\n    },\n    scrollTopTest() {\n      this.$refs.virtualListRef.resetToTop()\n    }\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("属性")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认值")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("data")]),t._v(" "),e("td",[t._v("数据")]),t._v(" "),e("td",[t._v("Array")]),t._v(" "),e("td",[t._v("[]")])]),t._v(" "),e("tr",[e("td",[t._v("itemHeight")]),t._v(" "),e("td",[t._v("每一项的高度")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("30")])]),t._v(" "),e("tr",[e("td",[t._v("maxHeight")]),t._v(" "),e("td",[t._v("最大高度")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("200")])]),t._v(" "),e("tr",[e("td",[t._v("fixedHeight")]),t._v(" "),e("td",[t._v("是否固定高度")]),t._v(" "),e("td",[t._v("Boolean")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("defaultUpdateToTop")]),t._v(" "),e("td",[t._v("当data更新时，是否自动滚到到顶部")]),t._v(" "),e("td",[t._v("Boolean")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("bufferCount")]),t._v(" "),e("td",[t._v("预渲染数据")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("3")])])])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("回调参数")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("scroll")]),t._v(" "),e("td",[t._v("滚动事件")]),t._v(" "),e("td",[t._v("(data) => void")])]),t._v(" "),e("tr",[e("td",[t._v("scrollBottom")]),t._v(" "),e("td",[t._v("滚动到底部事件")]),t._v(" "),e("td",[t._v("-")])])])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("参数")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("resetToTop")]),t._v(" "),e("td",[t._v("滚动到顶部")]),t._v(" "),e("td",[t._v("-")])])])])}],!1,null,null,null);e.default=n.exports},197:function(t,e,i){"use strict";i.r(e),i.d(e,"BAR_MAP",(function(){return o})),i.d(e,"renderThumbStyle",(function(){return r})),i.d(e,"on",(function(){return n})),i.d(e,"off",(function(){return l})),i.d(e,"toObject",(function(){return c}));const s=i(0).default.prototype.$isServer,o={vertical:{offset:"offsetHeight",scroll:"scrollTop",scrollSize:"scrollHeight",size:"height",key:"vertical",axis:"Y",client:"clientY",direction:"top"},horizontal:{offset:"offsetWidth",scroll:"scrollLeft",scrollSize:"scrollWidth",size:"width",key:"horizontal",axis:"X",client:"clientX",direction:"left"}};function r({move:t,size:e,bar:i}){const s={},o=`translate${i.axis}(${t}%)`;return s[i.size]=e,s.transform=o,s.msTransform=o,s.webkitTransform=o,s}const n=!s&&document.addEventListener?function(t,e,i){t&&e&&i&&t.addEventListener(e,i,!1)}:function(t,e,i){t&&e&&i&&t.attachEvent("on"+e,i)},l=!s&&document.removeEventListener?function(t,e,i){t&&e&&t.removeEventListener(e,i,!1)}:function(t,e,i){t&&e&&t.detachEvent("on"+e,i)};function a(t,e){for(const i in e)t[i]=e[i];return t}function c(t){var e={};for(let i=0;i<t.length;i++)t[i]&&a(e,t[i]);return e}},198:function(t,e,i){"use strict";i.r(e),i.d(e,"addResizeListener",(function(){return n})),i.d(e,"removeResizeListener",(function(){return l}));i(23);var s=i(290);const o="undefined"==typeof window,r=function(t){for(const e of t){const t=e.target.__resizeListeners__||[];t.length&&t.forEach(t=>{t()})}},n=function(t,e){o||(t.__resizeListeners__||(t.__resizeListeners__=[],t.__ro__=new s.default(r),t.__ro__.observe(t)),t.__resizeListeners__.push(e))},l=function(t,e){t&&t.__resizeListeners__&&(t.__resizeListeners__.splice(t.__resizeListeners__.indexOf(e),1),t.__resizeListeners__.length||t.__ro__.disconnect())}},199:function(t,e,i){"use strict";i.r(e);var s=i(0);let o;e.default=function(){if(s.default.prototype.$isServer)return 0;if(void 0!==o)return o;const t=document.createElement("div");t.className="sino-scrollbar__wrap",t.style.visibility="hidden",t.style.width="100px",t.style.position="absolute",t.style.top="-9999px",document.body.appendChild(t);const e=t.offsetWidth;t.style.overflow="scroll";const i=document.createElement("div");i.style.width="100%",t.appendChild(i);const r=i.offsetWidth;return t.parentNode.removeChild(t),o=e-r,o}},200:function(t,e,i){"use strict";i.r(e);var s=i(197);e.default={name:"Bar",props:{vertical:Boolean,size:String,move:Number},computed:{bar(){return s.BAR_MAP[this.vertical?"vertical":"horizontal"]},wrap(){return this.$parent.wrap}},render(t){const{size:e,move:i,bar:o}=this;return t("div",{class:["sino-scrollbar__bar","is-"+o.key],on:{mousedown:this.clickTrackHandler}},[t("div",{ref:"thumb",class:"sino-scrollbar__thumb",on:{mousedown:this.clickThumbHandler},style:Object(s.renderThumbStyle)({size:e,move:i,bar:o})})])},methods:{clickThumbHandler(t){t.ctrlKey||2===t.button||(this.startDrag(t),this[this.bar.axis]=t.currentTarget[this.bar.offset]-(t[this.bar.client]-t.currentTarget.getBoundingClientRect()[this.bar.direction]))},clickTrackHandler(t){const e=100*(Math.abs(t.target.getBoundingClientRect()[this.bar.direction]-t[this.bar.client])-this.$refs.thumb[this.bar.offset]/2)/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=e*this.wrap[this.bar.scrollSize]/100},startDrag(t){t.stopImmediatePropagation(),this.cursorDown=!0,Object(s.on)(document,"mousemove",this.mouseMoveDocumentHandler),Object(s.on)(document,"mouseup",this.mouseUpDocumentHandler),document.onselectstart=()=>!1},mouseMoveDocumentHandler(t){if(!1===this.cursorDown)return;const e=this[this.bar.axis];if(!e)return;const i=100*(-1*(this.$el.getBoundingClientRect()[this.bar.direction]-t[this.bar.client])-(this.$refs.thumb[this.bar.offset]-e))/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=i*this.wrap[this.bar.scrollSize]/100},mouseUpDocumentHandler(t){this.cursorDown=!1,this[this.bar.axis]=0,Object(s.off)(document,"mousemove",this.mouseMoveDocumentHandler),document.onselectstart=null}},destroyed(){Object(s.off)(document,"mouseup",this.mouseUpDocumentHandler)}}},201:function(t,e,i){var s=i(2),o=i(289);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var r={insert:"head",singleton:!1};s(o,r);t.exports=o.locals||{}},202:function(t,e,i){"use strict";i.r(e);var s=i(203);s.default.install=function(t){t.component(s.default.name,s.default)},e.default=s.default},203:function(t,e,i){"use strict";i.r(e);i(23);var s=i(198),o=i(199),r=i(197),n=i(200);i(201),e.default={name:"SinoScrollbar",components:{Bar:n.default},props:{native:Boolean,wrapStyle:{},wrapClass:{},viewClass:{},viewStyle:{},showHorizontalBar:{type:Boolean,default:!0},showVerticalBar:{type:Boolean,default:!0},noresize:Boolean,tag:{type:String,default:"div"}},data:()=>({sizeWidth:"0",sizeHeight:"0",moveX:0,moveY:0}),computed:{wrap(){return this.$refs.wrap}},render(t){const e=Object(o.default)();let i=this.wrapStyle;if(e){const t=`-${e}px`,s=`margin-bottom: ${t}; margin-right: ${t};`;Array.isArray(this.wrapStyle)?(i=Object(r.toObject)(this.wrapStyle),i.marginRight=i.marginBottom=t):"string"==typeof this.wrapStyle?i+=s:i=s,i+=`width: calc(100% + ${e}px);height: calc(100% + ${e}px);`}else i+="width: 100%;height: 100%;";const s=t(this.tag,{class:["sino-scrollbar__view",this.viewClass],style:this.viewStyle,ref:"resize"},this.$slots.default),l=t("div",{ref:"wrap",style:i,on:{scroll:this.handleScroll},class:[this.wrapClass,"sino-scrollbar__wrap",e?"":"sino-scrollbar__wrap--hidden-default"]},[[s]]);let a;return this.native?a=[t("div",{ref:"wrap",class:[this.wrapClass,"sino-scrollbar__wrap"],style:i},[[s]])]:(a=[l],this.showHorizontalBar&&a.push(t(n.default,{attrs:{move:this.moveX,size:this.sizeWidth}})),this.showVerticalBar&&a.push(t(n.default,{attrs:{vertical:!0,move:this.moveY,size:this.sizeHeight}}))),t("div",{class:"sino-scrollbar"},a)},methods:{handleScroll(t){const e=this.wrap;this.moveY=100*e.scrollTop/e.clientHeight,this.moveX=100*e.scrollLeft/e.clientWidth,this.$emit("scroll",{scrollTop:t.target.scrollTop,scrollLeft:t.target.scrollLeft,e:t}),t.target.scrollTop+t.target.offsetHeight>=t.target.scrollHeight&&(clearTimeout(this.timer),this.timer=setTimeout(()=>{this.$emit("scrollBottom")},100))},update(){let t="",e="";const i=this.wrap;i&&(t=100*i.clientHeight/i.scrollHeight,e=100*i.clientWidth/i.scrollWidth,this.sizeHeight=t<100?t+"%":"",this.sizeWidth=e<100?e+"%":"")},resetToTop(){this.wrap.scrollTop=0},scrollToTop(t){this.wrap.scrollTop=t}},mounted(){this.native||(this.$nextTick(this.update),!this.noresize&&Object(s.addResizeListener)(this.$refs.resize,this.update))},beforeDestroy(){this.native||!this.noresize&&Object(s.removeResizeListener)(this.$refs.resize,this.update)}}},234:function(t,e,i){"use strict";i.r(e);var s=i(202),o={name:"VirtualList",props:{data:{type:Array,default:function(){return[]}},loading:{type:Boolean,default:!1},itemHeight:{type:Number,default:30},maxHeight:{type:Number,default:200},fixedHeight:{type:Boolean,default:!1},defaultUpdateToTop:{type:Boolean,default:!0},bufferCount:{type:Number,default:3}},data:()=>({height:200,virtualContentHeight:0,virtualRenderData:[],currentScrollTop:0}),components:{SinoScrollbar:s.default},watch:{data:{immediate:!0,handler:function(){this.virtualRenderData=[],this.virtualContentHeight=this.itemHeight*this.data.length,this.$nextTick(()=>{this.calGeminiScrollbarHeight(),this.defaultUpdateToTop&&this.resetToTop(),this.update(this.currentScrollTop)})}}},computed:{},created(){},mounted(){},methods:{resetToTop(){this.currentScrollTop=0,this.$refs.scrollbarRef.resetToTop()},calGeminiScrollbarHeight(){const t=this.itemHeight*this.data.length;!0!==this.fixedHeight?t>this.maxHeight||0===t?this.height=this.maxHeight:this.height=t:this.height=this.maxHeight},update(t=0){this.$nextTick(()=>{const e=Math.ceil(this.height/this.itemHeight),i=Math.floor(t/this.itemHeight),s=i+e+this.bufferCount;this.virtualRenderData=this.data.slice(i,s),this.$refs.contentRef&&(this.$refs.contentRef.style.webkitTransform=`translate3d(0, ${i*this.itemHeight}px, 0)`)})},scrollResolve(t){const{scrollTop:e}=t;this.update(e),this.currentScrollTop=e,this.$emit("scroll",t)},resetToTopUpdate(){this.$nextTick(()=>{this.resetToTop(),this.update(0)})},scrollBottomResolve(){this.$emit("scrollBottom")}},beforeDestroy(){}},r=(i(336),i(9)),n=Object(r.a)(o,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"virtual-list"},[e("SinoScrollbar",{ref:"scrollbarRef",staticClass:"scrollbar",style:`height: ${t.height}px`,on:{scroll:t.scrollResolve,scrollBottom:t.scrollBottomResolve}},[e("div",{ref:"clientHeightRef",staticClass:"list-view-phantom",style:{height:t.virtualContentHeight+"px"}}),t._v(" "),t.data.length>0?e("ul",{ref:"contentRef",staticClass:"option-warp"},[t._l(t.virtualRenderData,(function(i,s){return e("li",{key:s,staticClass:"option",style:{height:t.itemHeight+"px"}},[t._t("default",null,{item:i,index:s})],2)})),t._v(" "),t._t("bottom")],2):e("no-data")],1)],1)}),[],!1,null,"3e5ae6f6",null);e.default=n.exports},247:function(t,e,i){"use strict";i.r(e);var s=i(234);s.default.install=function(t){t.component(s.default.name,s.default)},e.default=s.default},289:function(t,e,i){(e=i(3)(!1)).push([t.i,".sino-scrollbar__wrap {\n  overflow: scroll;\n  height: 100%;\n  width: 100%;\n}\n.sino-scrollbar {\n  overflow: hidden;\n  position: relative;\n}\n.sino-scrollbar__bar {\n  position: absolute;\n  right: 2px;\n  bottom: 2px;\n  z-index: 1;\n  border-radius: 4px;\n  opacity: 1;\n  transition: opacity 0.12s ease-out;\n}\n.sino-scrollbar__bar.is-horizontal {\n  height: 6px;\n  left: 2px;\n}\n.sino-scrollbar__bar.is-horizontal > div {\n  height: 100%;\n}\n.sino-scrollbar__bar.is-vertical {\n  width: 6px;\n  top: 2px;\n}\n.sino-scrollbar__bar.is-vertical > div {\n  width: 100%;\n}\n.sino-scrollbar__thumb {\n  position: relative;\n  display: block;\n  width: 0;\n  height: 0;\n  cursor: pointer;\n  border-radius: inherit;\n  background-color: rgba(180, 185, 210, 0.4);\n  transition: background-color 0.3s;\n}\n",""]),t.exports=e},304:function(t,e,i){var s=i(2),o=i(337);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var r={insert:"head",singleton:!1};s(o,r);t.exports=o.locals||{}},336:function(t,e,i){"use strict";i(304)},337:function(t,e,i){(e=i(3)(!1)).push([t.i,".virtual-list[data-v-3e5ae6f6] .sino-scrollbar__view {\n  position: relative;\n}\n.virtual-list .list-view-phantom[data-v-3e5ae6f6] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  z-index: -1;\n}\n.virtual-list .option-warp[data-v-3e5ae6f6] {\n  margin-bottom: 0;\n}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvdmlydHVhbC1saXN0Lm1kIiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy1leGFtcGxlcy92aXJ0dWFsLWxpc3QubWQ/MTk2MyIsIndlYnBhY2s6Ly8vc3JjL3BhY2thZ2VzLWV4YW1wbGVzL3ZpcnR1YWwtbGlzdC5tZCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvdmlydHVhbC1saXN0Lm1kPzk4M2EiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzLWV4YW1wbGVzL3ZpcnR1YWwtbGlzdC5tZD80MjkxIiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy1leGFtcGxlcy92aXJ0dWFsLWxpc3QubWQ/NzVkNSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvc2Nyb2xsYmFyL3NyYy91dGlsLmpzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9yZXNpemUtZXZlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL3Njcm9sbGJhci9zcmMvc2Nyb2xsYmFyLXdpZHRoLmpzIiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy9zY3JvbGxiYXIvc3JjL2Jhci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvc2Nyb2xsYmFyL3NyYy9zdHlsZXMubGVzcz85YzA2Iiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy9zY3JvbGxiYXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL3Njcm9sbGJhci9zcmMvc2Nyb2xsYmFyLmpzIiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy92aXJ0dWFsLWxpc3Qvc3JjL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvdmlydHVhbC1saXN0L3NyYy9pbmRleC52dWU/NmQ3ZSIsIndlYnBhY2s6Ly8vc3JjL3BhY2thZ2VzL3ZpcnR1YWwtbGlzdC9zcmMvaW5kZXgudnVlIiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy92aXJ0dWFsLWxpc3Qvc3JjL2luZGV4LnZ1ZT9kMTA0Iiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy92aXJ0dWFsLWxpc3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL3Njcm9sbGJhci9zcmMvc3R5bGVzLmxlc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL3ZpcnR1YWwtbGlzdC9zcmMvaW5kZXgudnVlPzY2N2YiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL3ZpcnR1YWwtbGlzdC9zcmMvaW5kZXgudnVlPzAzZDciLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL3ZpcnR1YWwtbGlzdC9zcmMvaW5kZXgudnVlPzdkM2IiXSwibmFtZXMiOlsibmFtZSIsInByb3BzIiwiZGF0YSIsImNvbXBvbmVudHMiLCJWaXJ0dWFsTGlzdCIsIndhdGNoIiwiY29tcHV0ZWQiLCJjcmVhdGVkIiwiaSIsInB1c2giLCJtb3VudGVkIiwibWV0aG9kcyIsInNjcm9sbEJvdHRvbSIsImNvbnNvbGUiLCJsb2ciLCJzY3JvbGwiLCJzY3JvbGxUb3BUZXN0IiwiJHJlZnMiLCJ2aXJ0dWFsTGlzdFJlZiIsInJlc2V0VG9Ub3AiLCJiZWZvcmVEZXN0cm95IiwiX3ZtIiwidGhpcyIsIl9jIiwiX3NlbGYiLCJyZWYiLCJhdHRycyIsIm9uIiwic2NvcGVkU2xvdHMiLCJfdSIsImtleSIsImZuIiwiaXRlbSIsImluZGV4IiwiX3YiLCJfcyIsInN0YXRpY1N0eWxlIiwic3RhdGljQ2xhc3MiLCJfbSIsInByZSIsImlzU2VydmVyIiwiVnVlIiwicHJvdG90eXBlIiwiJGlzU2VydmVyIiwiQkFSX01BUCIsInZlcnRpY2FsIiwib2Zmc2V0Iiwic2Nyb2xsU2l6ZSIsInNpemUiLCJheGlzIiwiY2xpZW50IiwiZGlyZWN0aW9uIiwiaG9yaXpvbnRhbCIsInJlbmRlclRodW1iU3R5bGUiLCJtb3ZlIiwiYmFyIiwic3R5bGUiLCJ0cmFuc2xhdGUiLCJ0cmFuc2Zvcm0iLCJtc1RyYW5zZm9ybSIsIndlYmtpdFRyYW5zZm9ybSIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImVsZW1lbnQiLCJldmVudCIsImhhbmRsZXIiLCJhdHRhY2hFdmVudCIsIm9mZiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkZXRhY2hFdmVudCIsImV4dGVuZCIsInRvIiwiX2Zyb20iLCJ0b09iamVjdCIsImFyciIsInJlcyIsImxlbmd0aCIsIndpbmRvdyIsInJlc2l6ZUhhbmRsZXIiLCJlbnRyaWVzIiwiZW50cnkiLCJsaXN0ZW5lcnMiLCJ0YXJnZXQiLCJfX3Jlc2l6ZUxpc3RlbmVyc19fIiwiZm9yRWFjaCIsImFkZFJlc2l6ZUxpc3RlbmVyIiwiX19yb19fIiwiUmVzaXplT2JzZXJ2ZXIiLCJvYnNlcnZlIiwicmVtb3ZlUmVzaXplTGlzdGVuZXIiLCJzcGxpY2UiLCJpbmRleE9mIiwiZGlzY29ubmVjdCIsInNjcm9sbEJhcldpZHRoIiwidW5kZWZpbmVkIiwib3V0ZXIiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwidmlzaWJpbGl0eSIsIndpZHRoIiwicG9zaXRpb24iLCJ0b3AiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJ3aWR0aE5vU2Nyb2xsIiwib2Zmc2V0V2lkdGgiLCJvdmVyZmxvdyIsImlubmVyIiwid2lkdGhXaXRoU2Nyb2xsIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiQm9vbGVhbiIsIlN0cmluZyIsIk51bWJlciIsIndyYXAiLCIkcGFyZW50IiwicmVuZGVyIiwiaCIsImNsaWNrVHJhY2tIYW5kbGVyIiwiY2xpY2tUaHVtYkhhbmRsZXIiLCJlIiwiY3RybEtleSIsImJ1dHRvbiIsInN0YXJ0RHJhZyIsImN1cnJlbnRUYXJnZXQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ0aHVtYlBvc2l0aW9uUGVyY2VudGFnZSIsIk1hdGgiLCJhYnMiLCJ0aHVtYiIsIiRlbCIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsImN1cnNvckRvd24iLCJtb3VzZU1vdmVEb2N1bWVudEhhbmRsZXIiLCJtb3VzZVVwRG9jdW1lbnRIYW5kbGVyIiwib25zZWxlY3RzdGFydCIsInByZXZQYWdlIiwiZGVzdHJveWVkIiwiYXBpIiwiY29udGVudCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwibW9kdWxlIiwib3B0aW9ucyIsImV4cG9ydHMiLCJsb2NhbHMiLCJTaW5vU2Nyb2xsYmFyIiwiaW5zdGFsbCIsImNvbXBvbmVudCIsInJlcXVpcmUiLCJCYXIiLCJuYXRpdmUiLCJ3cmFwU3R5bGUiLCJ3cmFwQ2xhc3MiLCJ2aWV3Q2xhc3MiLCJ2aWV3U3R5bGUiLCJzaG93SG9yaXpvbnRhbEJhciIsInR5cGUiLCJzaG93VmVydGljYWxCYXIiLCJub3Jlc2l6ZSIsInRhZyIsInNpemVXaWR0aCIsInNpemVIZWlnaHQiLCJtb3ZlWCIsIm1vdmVZIiwiZ3V0dGVyIiwic2Nyb2xsYmFyV2lkdGgiLCJndXR0ZXJXaXRoIiwiZ3V0dGVyU3R5bGUiLCJBcnJheSIsImlzQXJyYXkiLCJtYXJnaW5SaWdodCIsIm1hcmdpbkJvdHRvbSIsInZpZXciLCJjbGFzcyIsIiRzbG90cyIsImhhbmRsZVNjcm9sbCIsIm5vZGVzIiwic2Nyb2xsVG9wIiwiY2xpZW50SGVpZ2h0Iiwic2Nyb2xsTGVmdCIsImNsaWVudFdpZHRoIiwiJGVtaXQiLCJvZmZzZXRIZWlnaHQiLCJzY3JvbGxIZWlnaHQiLCJjbGVhclRpbWVvdXQiLCJ0aW1lciIsInNldFRpbWVvdXQiLCJ1cGRhdGUiLCJoZWlnaHRQZXJjZW50YWdlIiwid2lkdGhQZXJjZW50YWdlIiwic2Nyb2xsV2lkdGgiLCJzY3JvbGxUb1RvcCIsIiRuZXh0VGljayIsInJlc2l6ZSIsImxvYWRpbmciLCJpdGVtSGVpZ2h0IiwibWF4SGVpZ2h0IiwiZml4ZWRIZWlnaHQiLCJkZWZhdWx0VXBkYXRlVG9Ub3AiLCJidWZmZXJDb3VudCIsImhlaWdodCIsInZpcnR1YWxDb250ZW50SGVpZ2h0IiwidmlydHVhbFJlbmRlckRhdGEiLCJjdXJyZW50U2Nyb2xsVG9wIiwiaW1tZWRpYXRlIiwiY2FsR2VtaW5pU2Nyb2xsYmFySGVpZ2h0Iiwic2Nyb2xsYmFyUmVmIiwiY291bnQiLCJjZWlsIiwic3RhcnQiLCJmbG9vciIsImVuZCIsInNsaWNlIiwiY29udGVudFJlZiIsInNjcm9sbFJlc29sdmUiLCJyZXNldFRvVG9wVXBkYXRlIiwic2Nyb2xsQm90dG9tUmVzb2x2ZSIsIl9sIiwiX3QiLCJfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18iXSwibWFwcGluZ3MiOiJzSUFBQSxJQ0E2UCxFQ2tCOU8sQ0FDZkEsS0FBQSxtQkFDQUMsTUFBQSxHQUNBQyxVQUNBLENBQ0FBLEtBQUEsS0FHQUMsV0FBQSxDQUNBQyxZLE9BQUFBLFNBRUFDLE1BQUEsR0FDQUMsU0FBQSxHQUNBQyxVQUNBLE1BQUFMLEVBQUEsR0FDQSxRQUFBTSxFQUFBLEVBQUFBLEVBQUEsSUFBQUEsSUFDQU4sRUFBQU8sS0FBQUQsR0FFQSxLQUFBTixRQUVBUSxZQUNBQyxRQUFBLENBQ0FDLGVBQ0FDLFFBQUFDLElBQUEsaUJBRUFDLE9BQUFiLEdBQ0FXLFFBQUFDLElBQUEsUUFBQVosSUFFQWMsZ0JBQ0EsS0FBQUMsTUFBQUMsZUFBQUMsZUFHQUMsbUIsT0NsRHVPLEVEMEt2TyxDQUNBcEIsS0FBQSxlQUNBRyxXQUFBLENBQ0EseUJFdEtnQixZQUNkLEdKUlcsV0FBa0IsSUFBSWtCLEVBQUlDLEtBQUtDLEVBQUdGLEVBQUlHLE1BQU1ELEdBQUcsT0FBT0EsRUFBRyxNQUFNLENBQUNBLEVBQUcsZUFBZSxDQUFDRSxJQUFJLGlCQUFpQkMsTUFBTSxDQUFDLEtBQU9MLEVBQUluQixLQUFLLFVBQVksSUFBSSxXQUFhLElBQUl5QixHQUFHLENBQUMsT0FBU04sRUFBSU4sT0FBTyxhQUFlTSxFQUFJVCxjQUFjZ0IsWUFBWVAsRUFBSVEsR0FBRyxDQUFDLENBQUNDLElBQUksVUFBVUMsR0FBRyxVQUFTLEtBQUVDLEVBQUksTUFBRUMsSUFBUyxPQUFPVixFQUFHLE1BQU0sR0FBRyxDQUFDRixFQUFJYSxHQUFHYixFQUFJYyxHQUFHSCxZQUFlWCxFQUFJYSxHQUFHLEtBQUtYLEVBQUcsU0FBUyxDQUFDYSxZQUFZLENBQUMsYUFBYSxRQUFRVCxHQUFHLENBQUMsTUFBUU4sRUFBSUwsZ0JBQWdCLENBQUNLLEVBQUlhLEdBQUcsWUFBWSxLQUVoYixJSVNwQixFQUNBLEtBQ0EsV0FDQSxNLFVDUEUsRUFBWSxZQUNkLEdMUlcsV0FBa0IsSUFBSWIsRUFBSUMsS0FBS0MsRUFBR0YsRUFBSUcsTUFBTUQsR0FBRyxPQUFPQSxFQUFHLE1BQU0sQ0FBQ2MsWUFBWSxzQkFBc0IsQ0FBQ2QsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsYUFBYWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLE1BQU0sQ0FBQ2MsWUFBWSxvQkFBb0IsQ0FBQ2QsRUFBRyw0QkFBNEJGLEVBQUlhLEdBQUcsS0FBS2IsRUFBSWlCLEdBQUcsSUFBSSxHQUFHakIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxTQUFTYixFQUFJYSxHQUFHLEtBQUtiLEVBQUlpQixHQUFHLEdBQUdqQixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLFFBQVFiLEVBQUlhLEdBQUcsS0FBS2IsRUFBSWlCLEdBQUcsR0FBR2pCLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsUUFBUWIsRUFBSWEsR0FBRyxLQUFLYixFQUFJaUIsR0FBRyxPQUVuWixDQUFDLFdBQVksSUFBYWYsRUFBTCxLQUFZQyxNQUFNRCxHQUFHLE9BQU9BLEVBQUcsTUFBTSxDQUFDYyxZQUFZLHNCQUFzQixDQUFDZCxFQUFHLE1BQU0sQ0FBQ2MsWUFBWSw4QkFBOEIsQ0FBQ2QsRUFBRyxNQUFNLENBQUNBLEVBQUcsT0FBTyxDQUFDZ0IsS0FBSSxFQUFLYixNQUFNLENBQUMsTUFBUSxTQUFTLENBQXBMLEtBQXlMUSxHQUFHLHNrQ0FBNUwsS0FBeXhDQSxHQUFHLEtBQUtYLEVBQUcsTUFBTSxDQUFDYyxZQUFZLGVBQWUsQ0FBdDBDLEtBQTIwQ0gsR0FBRyxhQUN2M0MsV0FBWSxJQUFJYixFQUFJLEtBQUtFLEVBQUdGLEVBQUlHLE1BQU1ELEdBQUcsT0FBT0EsRUFBRyxRQUFRLENBQUNBLEVBQUcsUUFBUSxDQUFDQSxFQUFHLEtBQUssQ0FBQ0EsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsUUFBUWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxRQUFRYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLFFBQVFiLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsYUFBYWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLFFBQVEsQ0FBQ0EsRUFBRyxLQUFLLENBQUNBLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLFVBQVViLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsUUFBUWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxXQUFXYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLFVBQVViLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNBLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLGdCQUFnQmIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxZQUFZYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLFlBQVliLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsVUFBVWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0EsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsZUFBZWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxVQUFVYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLFlBQVliLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsV0FBV2IsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0EsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsaUJBQWlCYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLFlBQVliLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsYUFBYWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxhQUFhYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDQSxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyx3QkFBd0JiLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsd0JBQXdCYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLGFBQWFiLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsWUFBWWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0EsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsaUJBQWlCYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLFdBQVdiLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsWUFBWWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxjQUM3dUMsV0FBWSxJQUFJYixFQUFJLEtBQUtFLEVBQUdGLEVBQUlHLE1BQU1ELEdBQUcsT0FBT0EsRUFBRyxRQUFRLENBQUNBLEVBQUcsUUFBUSxDQUFDQSxFQUFHLEtBQUssQ0FBQ0EsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsVUFBVWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FB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QWFELEVBQVFFLFFBQVVGLEtBRy9DQSxFQUFVLENBQUMsQ0FBQ0csRUFBT3RJLEVBQUltSSxFQUFTLE1BRzlDLElBQUlJLEVBQVUsQ0FFZCxPQUFpQixPQUNqQixXQUFvQixHQUVQTCxFQUFJQyxFQUFTSSxHQUkxQkQsRUFBT0UsUUFBVUwsRUFBUU0sUUFBVSxJLGlDQ2xCbkMsUSxxQkNFQUQsRUFEa0MsRUFBUSxFQUNoQzRFLEVBQTRCLElBRTlCbk4sS0FBSyxDQUFDcUksRUFBT3RJLEVBQUksK1JBQWdTLEtBRXpUc0ksRUFBT0UsUUFBVUEiLCJmaWxlIjoianMvMTEuZjMyYzQxNmYyN2Y3YTAyYTg0ZjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCl7dmFyIF92bT10aGlzLF9jPV92bS5fc2VsZi5fYztyZXR1cm4gX2MoJ2RpdicsW19jKCd2aXJ0dWFsLWxpc3QnLHtyZWY6XCJ2aXJ0dWFsTGlzdFJlZlwiLGF0dHJzOntcImRhdGFcIjpfdm0uZGF0YSxcIm1heEhlaWdodFwiOjMwMCxcIml0ZW1IZWlnaHRcIjozMH0sb246e1wic2Nyb2xsXCI6X3ZtLnNjcm9sbCxcInNjcm9sbEJvdHRvbVwiOl92bS5zY3JvbGxCb3R0b219LHNjb3BlZFNsb3RzOl92bS5fdShbe2tleTpcImRlZmF1bHRcIixmbjpmdW5jdGlvbih7IGl0ZW0sIGluZGV4IH0pe3JldHVybiBfYygnZGl2Jyx7fSxbX3ZtLl92KF92bS5fcyhpdGVtKSldKX19XSl9KSxfdm0uX3YoXCIgXCIpLF9jKCdidXR0b24nLHtzdGF0aWNTdHlsZTp7XCJtYXJnaW4tdG9wXCI6XCIxMHB4XCJ9LG9uOntcImNsaWNrXCI6X3ZtLnNjcm9sbFRvcFRlc3R9fSxbX3ZtLl92KFwi5rua5Yqo5Yiw6aG26YOoXCIpXSldLDEpXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL21hcmtkb3duLXZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMSEuL3ZpcnR1YWwtbGlzdC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0wXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL21hcmtkb3duLXZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMSEuL3ZpcnR1YWwtbGlzdC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0wXCIiLCJtb2R1bGUuZXhwb3J0cyA9IFxuICAgICAgICA8dGVtcGxhdGU+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidnVlLWRlbW8tY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPGgzPjEuIOWfuuacrOS9v+eUqDwvaDM+XG48ZGl2IGNsYXNzPVwidnVlLWRlbW8td3JhcHBlclwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPENvbXp6b3pmMWh1bG5ibzM2NHpEZW1vMD48L0NvbXp6b3pmMWh1bG5ibzM2NHpEZW1vMD5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidnVlLWRlbW8taGlnaGxpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidnVlLWRlbW8taGlnaGxpZ2h0LWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8cHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiIHYtcHJlID4mbHQ7dGVtcGxhdGUmZ3Q7XG4gICZsdDtkaXYmZ3Q7XG4gICAgJmx0O3ZpcnR1YWwtbGlzdCBcbiAgICAgIDpkYXRhPSZxdW90O2RhdGEmcXVvdDsgXG4gICAgICA6bWF4SGVpZ2h0PSZxdW90OzMwMCZxdW90OyBcbiAgICAgIDppdGVtSGVpZ2h0PSZxdW90OzMwJnF1b3Q7IFxuICAgICAgcmVmPSZxdW90O3ZpcnR1YWxMaXN0UmVmJnF1b3Q7XG4gICAgICBAc2Nyb2xsPSZxdW90O3Njcm9sbCZxdW90O1xuICAgICAgQHNjcm9sbEJvdHRvbT0mcXVvdDtzY3JvbGxCb3R0b20mcXVvdDtcbiAgICAmZ3Q7XG4gICAgICAmbHQ7ZGl2IHNsb3Qtc2NvcGU9JnF1b3Q7eyBpdGVtLCBpbmRleCB9JnF1b3Q7Jmd0O3t7IGl0ZW0gfX0mbHQ7L2RpdiZndDtcbiAgICAmbHQ7L3ZpcnR1YWwtbGlzdCZndDtcbiAgICAmbHQ7YnV0dG9uIHN0eWxlPSZxdW90O21hcmdpbi10b3A6IDEwcHgmcXVvdDsgQGNsaWNrPSZxdW90O3Njcm9sbFRvcFRlc3QmcXVvdDsmZ3Q75rua5Yqo5Yiw6aG26YOoJmx0Oy9idXR0b24mZ3Q7XG4gICZsdDsvZGl2Jmd0O1xuXG4mbHQ7L3RlbXBsYXRlJmd0O1xuJmx0O3NjcmlwdCZndDtcbmltcG9ydCBWaXJ0dWFsTGlzdCBmcm9tICZxdW90O0AvcGFja2FnZXMvdmlydHVhbC1saXN0JnF1b3Q7O1xuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAmcXVvdDtTY3JvbGxiYXJFeGFtcGxlJnF1b3Q7LFxuICBwcm9wczoge30sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRhdGE6IFtdXG4gICAgfTtcbiAgfSxcbiAgY29tcG9uZW50czoge1xuICAgIFZpcnR1YWxMaXN0LFxuICB9LFxuICB3YXRjaDoge30sXG4gIGNvbXB1dGVkOiB7fSxcbiAgY3JlYXRlZCgpIHtcbiAgICBjb25zdCBkYXRhID0gW11cbiAgICBmb3IobGV0IGkgPSAwO2kgJmx0OyAxMDA7IGkrKyl7XG4gICAgICBkYXRhLnB1c2goaSlcbiAgICB9XG4gICAgdGhpcy5kYXRhID0gZGF0YVxuICB9LFxuICBtb3VudGVkKCkge30sXG4gIG1ldGhvZHM6IHtcbiAgICBzY3JvbGxCb3R0b20oKSB7XG4gICAgICBjb25zb2xlLmxvZygnc2Nyb2xsQm90dG9tJylcbiAgICB9LFxuICAgIHNjcm9sbChkYXRhKSB7XG4gICAgICBjb25zb2xlLmxvZygnZGF0YTonLCBkYXRhKVxuICAgIH0sXG4gICAgc2Nyb2xsVG9wVGVzdCgpIHtcbiAgICAgIHRoaXMuJHJlZnMudmlydHVhbExpc3RSZWYucmVzZXRUb1RvcCgpXG4gICAgfVxuICB9LFxuICBiZWZvcmVEZXN0cm95KCkge30sXG59O1xuJmx0Oy9zY3JpcHQmZ3Q7XG4mbHQ7c3R5bGUgbGFuZz0mcXVvdDtsZXNzJnF1b3Q7IHNjb3BlZCZndDtcbiZsdDsvc3R5bGUmZ3Q7XG48L2NvZGU+PC9wcmU+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvZGUtZm9sZGVyXCI+5pi+56S65Luj56CBPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuPGgzPkFQSTwvaDM+XG48dGFibGU+XG48dGhlYWQ+XG48dHI+XG48dGg+5bGe5oCnPC90aD5cbjx0aD7or7TmmI48L3RoPlxuPHRoPuexu+WeizwvdGg+XG48dGg+6buY6K6k5YC8PC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPmRhdGE8L3RkPlxuPHRkPuaVsOaNrjwvdGQ+XG48dGQ+QXJyYXk8L3RkPlxuPHRkPltdPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+aXRlbUhlaWdodDwvdGQ+XG48dGQ+5q+P5LiA6aG555qE6auY5bqmPC90ZD5cbjx0ZD5OdW1iZXI8L3RkPlxuPHRkPjMwPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+bWF4SGVpZ2h0PC90ZD5cbjx0ZD7mnIDlpKfpq5jluqY8L3RkPlxuPHRkPk51bWJlcjwvdGQ+XG48dGQ+MjAwPC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+Zml4ZWRIZWlnaHQ8L3RkPlxuPHRkPuaYr+WQpuWbuuWumumrmOW6pjwvdGQ+XG48dGQ+Qm9vbGVhbjwvdGQ+XG48dGQ+ZmFsc2U8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5kZWZhdWx0VXBkYXRlVG9Ub3A8L3RkPlxuPHRkPuW9k2RhdGHmm7TmlrDml7bvvIzmmK/lkKboh6rliqjmu5rliLDliLDpobbpg6g8L3RkPlxuPHRkPkJvb2xlYW48L3RkPlxuPHRkPnRydWU8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5idWZmZXJDb3VudDwvdGQ+XG48dGQ+6aKE5riy5p+T5pWw5o2uPC90ZD5cbjx0ZD5OdW1iZXI8L3RkPlxuPHRkPjM8L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGgzPuS6i+S7tjwvaDM+XG48dGFibGU+XG48dGhlYWQ+XG48dHI+XG48dGg+5LqL5Lu25ZCN56ewPC90aD5cbjx0aD7or7TmmI48L3RoPlxuPHRoPuWbnuiwg+WPguaVsDwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0cj5cbjx0ZD5zY3JvbGw8L3RkPlxuPHRkPua7muWKqOS6i+S7tjwvdGQ+XG48dGQ+KGRhdGEpID0mZ3Q7IHZvaWQ8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5zY3JvbGxCb3R0b208L3RkPlxuPHRkPua7muWKqOWIsOW6lemDqOS6i+S7tjwvdGQ+XG48dGQ+LTwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG48aDM+5pa55rOVPC9oMz5cbjx0YWJsZT5cbjx0aGVhZD5cbjx0cj5cbjx0aD7kuovku7blkI3np7A8L3RoPlxuPHRoPuivtOaYjjwvdGg+XG48dGg+5Y+C5pWwPC90aD5cbjwvdHI+XG48L3RoZWFkPlxuPHRib2R5PlxuPHRyPlxuPHRkPnJlc2V0VG9Ub3A8L3RkPlxuPHRkPua7muWKqOWIsOmhtumDqDwvdGQ+XG48dGQ+LTwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L3RlbXBsYXRlPlxuXG4gICAgICAgIDxzY3JpcHQ+XG4gICAgICAgICAgICBpbXBvcnQgQ29tenpvemYxaHVsbmJvMzY0ekRlbW8wIGZyb20gXCIuL3ZpcnR1YWwtbGlzdC5tZD9mZW5jZSZjb21wb25lbnRJbmRleD0wXCI7XG4gICAgICAgICAgICBleHBvcnQgZGVmYXVsdCB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ0NvbXBvbmVudERvYycsXG4gICAgICAgICAgICAgICAgY29tcG9uZW50czoge1xuICAgICAgICAgICAgICAgICAgICAnQ29tenpvemYxaHVsbmJvMzY0ekRlbW8wJzogQ29tenpvemYxaHVsbmJvMzY0ekRlbW8wXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgPC9zY3JpcHQ+XG4gICAgIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbWFya2Rvd24tdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0xIS4vdmlydHVhbC1saXN0Lm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP2NhY2hlRGlyZWN0b3J5IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9tYXJrZG93bi12dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTEhLi92aXJ0dWFsLWxpc3QubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL3ZpcnR1YWwtbGlzdC5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yODg1Yzg3YSZzY29wZWQ9dHJ1ZSZmZW5jZSZjb21wb25lbnRJbmRleD0wXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdmlydHVhbC1saXN0Lm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTBcIlxuZXhwb3J0ICogZnJvbSBcIi4vdmlydHVhbC1saXN0Lm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTBcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiMjg4NWM4N2FcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL3ZpcnR1YWwtbGlzdC5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD1hODM5NTkwYyZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi92aXJ0dWFsLWxpc3QubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL3ZpcnR1YWwtbGlzdC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiLypcbiAqIEBBdXRob3I6IGF0ZG93XG4gKiBARGF0ZTogMjAyMy0wMi0xNCAxMDoxOToyN1xuICogQExhc3RFZGl0b3JzOiBudWxsXG4gKiBATGFzdEVkaXRUaW1lOiAyMDIzLTAyLTE0IDExOjE2OjQ2XG4gKiBARGVzY3JpcHRpb246IGZpbGUgZGVzY3JpcHRpb25cbiAqL1xuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG5jb25zdCBpc1NlcnZlciA9IFZ1ZS5wcm90b3R5cGUuJGlzU2VydmVyXG5cbmV4cG9ydCBjb25zdCBCQVJfTUFQID0ge1xuICB2ZXJ0aWNhbDoge1xuICAgIG9mZnNldDogJ29mZnNldEhlaWdodCcsXG4gICAgc2Nyb2xsOiAnc2Nyb2xsVG9wJyxcbiAgICBzY3JvbGxTaXplOiAnc2Nyb2xsSGVpZ2h0JyxcbiAgICBzaXplOiAnaGVpZ2h0JyxcbiAgICBrZXk6ICd2ZXJ0aWNhbCcsXG4gICAgYXhpczogJ1knLFxuICAgIGNsaWVudDogJ2NsaWVudFknLFxuICAgIGRpcmVjdGlvbjogJ3RvcCdcbiAgfSxcbiAgaG9yaXpvbnRhbDoge1xuICAgIG9mZnNldDogJ29mZnNldFdpZHRoJyxcbiAgICBzY3JvbGw6ICdzY3JvbGxMZWZ0JyxcbiAgICBzY3JvbGxTaXplOiAnc2Nyb2xsV2lkdGgnLFxuICAgIHNpemU6ICd3aWR0aCcsXG4gICAga2V5OiAnaG9yaXpvbnRhbCcsXG4gICAgYXhpczogJ1gnLFxuICAgIGNsaWVudDogJ2NsaWVudFgnLFxuICAgIGRpcmVjdGlvbjogJ2xlZnQnXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclRodW1iU3R5bGUoeyBtb3ZlLCBzaXplLCBiYXIgfSkge1xuICBjb25zdCBzdHlsZSA9IHt9XG4gIGNvbnN0IHRyYW5zbGF0ZSA9IGB0cmFuc2xhdGUke2Jhci5heGlzfSgke21vdmV9JSlgXG4gIC8vIGNvbnNvbGUubG9nKCdzaXplOicsIHNpemUpXG5cbiAgc3R5bGVbYmFyLnNpemVdID0gc2l6ZVxuICBzdHlsZS50cmFuc2Zvcm0gPSB0cmFuc2xhdGVcbiAgc3R5bGUubXNUcmFuc2Zvcm0gPSB0cmFuc2xhdGVcbiAgc3R5bGUud2Via2l0VHJhbnNmb3JtID0gdHJhbnNsYXRlXG5cbiAgcmV0dXJuIHN0eWxlXG59O1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5leHBvcnQgY29uc3Qgb24gPSAoZnVuY3Rpb24gKCkge1xuICBpZiAoIWlzU2VydmVyICYmIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQsIGV2ZW50LCBoYW5kbGVyKSB7XG4gICAgICBpZiAoZWxlbWVudCAmJiBldmVudCAmJiBoYW5kbGVyKSB7XG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgZmFsc2UpXG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBmdW5jdGlvbiAoZWxlbWVudCwgZXZlbnQsIGhhbmRsZXIpIHtcbiAgICAgIGlmIChlbGVtZW50ICYmIGV2ZW50ICYmIGhhbmRsZXIpIHtcbiAgICAgICAgZWxlbWVudC5hdHRhY2hFdmVudCgnb24nICsgZXZlbnQsIGhhbmRsZXIpXG4gICAgICB9XG4gICAgfVxuICB9XG59KSgpXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5leHBvcnQgY29uc3Qgb2ZmID0gKGZ1bmN0aW9uICgpIHtcbiAgaWYgKCFpc1NlcnZlciAmJiBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50LCBldmVudCwgaGFuZGxlcikge1xuICAgICAgaWYgKGVsZW1lbnQgJiYgZXZlbnQpIHtcbiAgICAgICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVyLCBmYWxzZSlcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50LCBldmVudCwgaGFuZGxlcikge1xuICAgICAgaWYgKGVsZW1lbnQgJiYgZXZlbnQpIHtcbiAgICAgICAgZWxlbWVudC5kZXRhY2hFdmVudCgnb24nICsgZXZlbnQsIGhhbmRsZXIpXG4gICAgICB9XG4gICAgfVxuICB9XG59KSgpXG5cblxuZnVuY3Rpb24gZXh0ZW5kKHRvLCBfZnJvbSkge1xuICBmb3IgKGNvbnN0IGtleSBpbiBfZnJvbSkge1xuICAgIHRvW2tleV0gPSBfZnJvbVtrZXldXG4gIH1cbiAgcmV0dXJuIHRvXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gdG9PYmplY3QoYXJyKSB7XG4gIHZhciByZXMgPSB7fVxuICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgIGlmIChhcnJbaV0pIHtcbiAgICAgIGV4dGVuZChyZXMsIGFycltpXSlcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc1xufTtcblxuIiwiaW1wb3J0IFJlc2l6ZU9ic2VydmVyIGZyb20gJ3Jlc2l6ZS1vYnNlcnZlci1wb2x5ZmlsbCdcblxuY29uc3QgaXNTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJ1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuY29uc3QgcmVzaXplSGFuZGxlciA9IGZ1bmN0aW9uIChlbnRyaWVzKSB7XG4gICAgZm9yIChjb25zdCBlbnRyeSBvZiBlbnRyaWVzKSB7XG4gICAgICAgIGNvbnN0IGxpc3RlbmVycyA9IGVudHJ5LnRhcmdldC5fX3Jlc2l6ZUxpc3RlbmVyc19fIHx8IFtdXG4gICAgICAgIGlmIChsaXN0ZW5lcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICBsaXN0ZW5lcnMuZm9yRWFjaChmbiA9PiB7XG4gICAgICAgICAgICAgICAgZm4oKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmV4cG9ydCBjb25zdCBhZGRSZXNpemVMaXN0ZW5lciA9IGZ1bmN0aW9uIChlbGVtZW50LCBmbikge1xuICAgIGlmIChpc1NlcnZlcikgcmV0dXJuXG4gICAgaWYgKCFlbGVtZW50Ll9fcmVzaXplTGlzdGVuZXJzX18pIHtcbiAgICAgICAgZWxlbWVudC5fX3Jlc2l6ZUxpc3RlbmVyc19fID0gW11cbiAgICAgICAgZWxlbWVudC5fX3JvX18gPSBuZXcgUmVzaXplT2JzZXJ2ZXIocmVzaXplSGFuZGxlcilcbiAgICAgICAgZWxlbWVudC5fX3JvX18ub2JzZXJ2ZShlbGVtZW50KVxuICAgIH1cbiAgICBlbGVtZW50Ll9fcmVzaXplTGlzdGVuZXJzX18ucHVzaChmbilcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmV4cG9ydCBjb25zdCByZW1vdmVSZXNpemVMaXN0ZW5lciA9IGZ1bmN0aW9uIChlbGVtZW50LCBmbikge1xuICAgIGlmICghZWxlbWVudCB8fCAhZWxlbWVudC5fX3Jlc2l6ZUxpc3RlbmVyc19fKSByZXR1cm5cbiAgICBlbGVtZW50Ll9fcmVzaXplTGlzdGVuZXJzX18uc3BsaWNlKGVsZW1lbnQuX19yZXNpemVMaXN0ZW5lcnNfXy5pbmRleE9mKGZuKSwgMSlcbiAgICBpZiAoIWVsZW1lbnQuX19yZXNpemVMaXN0ZW5lcnNfXy5sZW5ndGgpIHtcbiAgICAgICAgZWxlbWVudC5fX3JvX18uZGlzY29ubmVjdCgpXG4gICAgfVxufVxuIiwiLypcbiAqIEBBdXRob3I6IGF0ZG93XG4gKiBARGF0ZTogMjAyMy0wMi0xNCAxMDoyMTo1OVxuICogQExhc3RFZGl0b3JzOiBudWxsXG4gKiBATGFzdEVkaXRUaW1lOiAyMDIzLTAyLTE0IDE1OjM2OjMxXG4gKiBARGVzY3JpcHRpb246IGZpbGUgZGVzY3JpcHRpb25cbiAqL1xuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG5cbmxldCBzY3JvbGxCYXJXaWR0aFxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoKSB7XG4gIGlmIChWdWUucHJvdG90eXBlLiRpc1NlcnZlcikgcmV0dXJuIDBcbiAgaWYgKHNjcm9sbEJhcldpZHRoICE9PSB1bmRlZmluZWQpIHJldHVybiBzY3JvbGxCYXJXaWR0aFxuXG4gIGNvbnN0IG91dGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgb3V0ZXIuY2xhc3NOYW1lID0gJ3Npbm8tc2Nyb2xsYmFyX193cmFwJ1xuICBvdXRlci5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbidcbiAgb3V0ZXIuc3R5bGUud2lkdGggPSAnMTAwcHgnXG4gIG91dGVyLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJ1xuICBvdXRlci5zdHlsZS50b3AgPSAnLTk5OTlweCdcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChvdXRlcilcblxuICBjb25zdCB3aWR0aE5vU2Nyb2xsID0gb3V0ZXIub2Zmc2V0V2lkdGhcbiAgb3V0ZXIuc3R5bGUub3ZlcmZsb3cgPSAnc2Nyb2xsJ1xuXG4gIGNvbnN0IGlubmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgaW5uZXIuc3R5bGUud2lkdGggPSAnMTAwJSdcbiAgb3V0ZXIuYXBwZW5kQ2hpbGQoaW5uZXIpXG5cbiAgY29uc3Qgd2lkdGhXaXRoU2Nyb2xsID0gaW5uZXIub2Zmc2V0V2lkdGhcbiAgb3V0ZXIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvdXRlcilcbiAgc2Nyb2xsQmFyV2lkdGggPSB3aWR0aE5vU2Nyb2xsIC0gd2lkdGhXaXRoU2Nyb2xsXG5cbiAgcmV0dXJuIHNjcm9sbEJhcldpZHRoXG59O1xuIiwiLypcbiAqIEBBdXRob3I6IGF0ZG93XG4gKiBARGF0ZTogMjAyMy0wMi0yMCAyMToyOTowMFxuICogQExhc3RFZGl0b3JzOiBudWxsXG4gKiBATGFzdEVkaXRUaW1lOiAyMDIzLTAyLTIwIDIxOjI5OjAxXG4gKiBARGVzY3JpcHRpb246IGZpbGUgZGVzY3JpcHRpb25cbiAqL1xuaW1wb3J0IHsgb24sIG9mZiB9IGZyb20gJy4vdXRpbCdcbmltcG9ydCB7IHJlbmRlclRodW1iU3R5bGUsIEJBUl9NQVAgfSBmcm9tICcuL3V0aWwnXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdCYXInLFxuXG4gIHByb3BzOiB7XG4gICAgdmVydGljYWw6IEJvb2xlYW4sXG4gICAgc2l6ZTogU3RyaW5nLFxuICAgIG1vdmU6IE51bWJlclxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgYmFyKCkge1xuICAgICAgcmV0dXJuIEJBUl9NQVBbdGhpcy52ZXJ0aWNhbCA/ICd2ZXJ0aWNhbCcgOiAnaG9yaXpvbnRhbCddXG4gICAgfSxcblxuICAgIHdyYXAoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kcGFyZW50LndyYXBcbiAgICB9XG4gIH0sXG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gIHJlbmRlcihoKSB7XG4gICAgY29uc3QgeyBzaXplLCBtb3ZlLCBiYXIgfSA9IHRoaXNcbiAgICAvLyBjb25zb2xlLmxvZygnYmFyOicsIGJhcilcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICBjbGFzcz17WydzaW5vLXNjcm9sbGJhcl9fYmFyJywgJ2lzLScgKyBiYXIua2V5XX1cbiAgICAgICAgb25Nb3VzZWRvd249e3RoaXMuY2xpY2tUcmFja0hhbmRsZXJ9ID5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIHJlZj1cInRodW1iXCJcbiAgICAgICAgICBjbGFzcz1cInNpbm8tc2Nyb2xsYmFyX190aHVtYlwiXG4gICAgICAgICAgb25Nb3VzZWRvd249e3RoaXMuY2xpY2tUaHVtYkhhbmRsZXJ9XG4gICAgICAgICAgc3R5bGU9e3JlbmRlclRodW1iU3R5bGUoeyBzaXplLCBtb3ZlLCBiYXIgfSl9PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgY2xpY2tUaHVtYkhhbmRsZXIoZSkge1xuICAgICAgLy8gcHJldmVudCBjbGljayBldmVudCBvZiByaWdodCBidXR0b25cbiAgICAgIGlmIChlLmN0cmxLZXkgfHwgZS5idXR0b24gPT09IDIpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICB0aGlzLnN0YXJ0RHJhZyhlKVxuICAgICAgdGhpc1t0aGlzLmJhci5heGlzXSA9IChlLmN1cnJlbnRUYXJnZXRbdGhpcy5iYXIub2Zmc2V0XSAtIChlW3RoaXMuYmFyLmNsaWVudF0gLSBlLmN1cnJlbnRUYXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClbdGhpcy5iYXIuZGlyZWN0aW9uXSkpXG4gICAgfSxcblxuICAgIGNsaWNrVHJhY2tIYW5kbGVyKGUpIHtcbiAgICAgIGNvbnN0IG9mZnNldCA9IE1hdGguYWJzKGUudGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpW3RoaXMuYmFyLmRpcmVjdGlvbl0gLSBlW3RoaXMuYmFyLmNsaWVudF0pXG4gICAgICBjb25zdCB0aHVtYkhhbGYgPSAodGhpcy4kcmVmcy50aHVtYlt0aGlzLmJhci5vZmZzZXRdIC8gMilcbiAgICAgIGNvbnN0IHRodW1iUG9zaXRpb25QZXJjZW50YWdlID0gKChvZmZzZXQgLSB0aHVtYkhhbGYpICogMTAwIC8gdGhpcy4kZWxbdGhpcy5iYXIub2Zmc2V0XSlcblxuICAgICAgdGhpcy53cmFwW3RoaXMuYmFyLnNjcm9sbF0gPSAodGh1bWJQb3NpdGlvblBlcmNlbnRhZ2UgKiB0aGlzLndyYXBbdGhpcy5iYXIuc2Nyb2xsU2l6ZV0gLyAxMDApXG4gICAgfSxcblxuICAgIHN0YXJ0RHJhZyhlKSB7XG4gICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpXG4gICAgICB0aGlzLmN1cnNvckRvd24gPSB0cnVlXG5cbiAgICAgIG9uKGRvY3VtZW50LCAnbW91c2Vtb3ZlJywgdGhpcy5tb3VzZU1vdmVEb2N1bWVudEhhbmRsZXIpXG4gICAgICBvbihkb2N1bWVudCwgJ21vdXNldXAnLCB0aGlzLm1vdXNlVXBEb2N1bWVudEhhbmRsZXIpXG4gICAgICBkb2N1bWVudC5vbnNlbGVjdHN0YXJ0ID0gKCkgPT4gZmFsc2VcbiAgICB9LFxuXG4gICAgbW91c2VNb3ZlRG9jdW1lbnRIYW5kbGVyKGUpIHtcbiAgICAgIGlmICh0aGlzLmN1cnNvckRvd24gPT09IGZhbHNlKSByZXR1cm5cbiAgICAgIGNvbnN0IHByZXZQYWdlID0gdGhpc1t0aGlzLmJhci5heGlzXVxuXG4gICAgICBpZiAoIXByZXZQYWdlKSByZXR1cm5cblxuICAgICAgY29uc3Qgb2Zmc2V0ID0gKCh0aGlzLiRlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVt0aGlzLmJhci5kaXJlY3Rpb25dIC0gZVt0aGlzLmJhci5jbGllbnRdKSAqIC0xKVxuICAgICAgY29uc3QgdGh1bWJDbGlja1Bvc2l0aW9uID0gKHRoaXMuJHJlZnMudGh1bWJbdGhpcy5iYXIub2Zmc2V0XSAtIHByZXZQYWdlKVxuICAgICAgY29uc3QgdGh1bWJQb3NpdGlvblBlcmNlbnRhZ2UgPSAoKG9mZnNldCAtIHRodW1iQ2xpY2tQb3NpdGlvbikgKiAxMDAgLyB0aGlzLiRlbFt0aGlzLmJhci5vZmZzZXRdKVxuICAgICAgLy8gY29uc29sZS5sb2coJ3RodW1iQ2xpY2tQb3NpdGlvbjonLCAgKHRodW1iUG9zaXRpb25QZXJjZW50YWdlICogdGhpcy53cmFwW3RoaXMuYmFyLnNjcm9sbFNpemVdIC8gMTAwKSlcbiAgICAgIC8vIGNvbnNvbGUubG9nKCd0aGlzLiRwYXJlbnQud3JhcDonLCB0aGlzLiRwYXJlbnQud3JhcCwgdGhpcy5iYXIpXG4gICAgICB0aGlzLndyYXBbdGhpcy5iYXIuc2Nyb2xsXSA9ICh0aHVtYlBvc2l0aW9uUGVyY2VudGFnZSAqIHRoaXMud3JhcFt0aGlzLmJhci5zY3JvbGxTaXplXSAvIDEwMClcbiAgICB9LFxuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgbW91c2VVcERvY3VtZW50SGFuZGxlcihlKSB7XG4gICAgICB0aGlzLmN1cnNvckRvd24gPSBmYWxzZVxuICAgICAgdGhpc1t0aGlzLmJhci5heGlzXSA9IDBcbiAgICAgIG9mZihkb2N1bWVudCwgJ21vdXNlbW92ZScsIHRoaXMubW91c2VNb3ZlRG9jdW1lbnRIYW5kbGVyKVxuICAgICAgZG9jdW1lbnQub25zZWxlY3RzdGFydCA9IG51bGxcbiAgICB9XG4gIH0sXG5cbiAgZGVzdHJveWVkKCkge1xuICAgIG9mZihkb2N1bWVudCwgJ21vdXNldXAnLCB0aGlzLm1vdXNlVXBEb2N1bWVudEhhbmRsZXIpXG4gIH1cbn1cbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMubGVzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiLypcbiAqIEBBdXRob3I6IGF0ZG93XG4gKiBARGF0ZTogMjAyMy0wMi0yMCAyMToyODozNFxuICogQExhc3RFZGl0b3JzOiBudWxsXG4gKiBATGFzdEVkaXRUaW1lOiAyMDIzLTAyLTIwIDIxOjI4OjM3XG4gKiBARGVzY3JpcHRpb246IGZpbGUgZGVzY3JpcHRpb25cbiAqL1xuaW1wb3J0IFNpbm9TY3JvbGxiYXIgZnJvbSAnLi9zcmMvc2Nyb2xsYmFyJ1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuU2lub1Njcm9sbGJhci5pbnN0YWxsID0gZnVuY3Rpb24gKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KFNpbm9TY3JvbGxiYXIubmFtZSwgU2lub1Njcm9sbGJhcilcbn1cblxuZXhwb3J0IGRlZmF1bHQgU2lub1Njcm9sbGJhciIsImltcG9ydCB7IGFkZFJlc2l6ZUxpc3RlbmVyLCByZW1vdmVSZXNpemVMaXN0ZW5lciB9IGZyb20gJ0AvdXRpbHMvcmVzaXplLWV2ZW50J1xuaW1wb3J0IHNjcm9sbGJhcldpZHRoIGZyb20gJy4vc2Nyb2xsYmFyLXdpZHRoJ1xuaW1wb3J0IHsgdG9PYmplY3QgfSBmcm9tICcuL3V0aWwnXG5pbXBvcnQgQmFyIGZyb20gJy4vYmFyJ1xucmVxdWlyZSgnLi9zdHlsZXMubGVzcycpXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdTaW5vU2Nyb2xsYmFyJyxcblxuICBjb21wb25lbnRzOiB7IEJhciB9LFxuXG4gIHByb3BzOiB7XG4gICAgbmF0aXZlOiBCb29sZWFuLCAvLyDmmK/lkKbkvb/nlKjmu5rliqjmnaFcbiAgICB3cmFwU3R5bGU6IHt9LFxuICAgIHdyYXBDbGFzczoge30sXG4gICAgdmlld0NsYXNzOiB7fSxcbiAgICB2aWV3U3R5bGU6IHt9LFxuICAgIHNob3dIb3Jpem9udGFsQmFyOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICB9LFxuICAgIHNob3dWZXJ0aWNhbEJhcjoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgfSxcbiAgICBub3Jlc2l6ZTogQm9vbGVhbiwgLy8g5aaC5p6cIGNvbnRhaW5lciDlsLrlr7jkuI3kvJrlj5HnlJ/lj5jljJbvvIzmnIDlpb3orr7nva7lroPlj6/ku6XkvJjljJbmgKfog71cbiAgICB0YWc6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdkaXYnLFxuICAgIH0sXG4gIH0sXG5cbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2l6ZVdpZHRoOiAnMCcsXG4gICAgICBzaXplSGVpZ2h0OiAnMCcsXG4gICAgICBtb3ZlWDogMCxcbiAgICAgIG1vdmVZOiAwLFxuICAgIH1cbiAgfSxcblxuICBjb21wdXRlZDoge1xuICAgIHdyYXAoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kcmVmcy53cmFwXG4gICAgfSxcbiAgfSxcblxuICByZW5kZXIoaCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCduYXRpdmU6JywgdGhpcy5uYXRpdmUpXG4gICAgY29uc3QgZ3V0dGVyID0gc2Nyb2xsYmFyV2lkdGgoKSAvLyDljp/nlJ/mu5rliqjmnaHnmoTlrr3luqZcbiAgICBsZXQgc3R5bGUgPSB0aGlzLndyYXBTdHlsZVxuXG4gICAgLy8gbWFj55qE5piv5rKh5pyJZ3V0dGVy55qEXG4gICAgaWYgKGd1dHRlcikge1xuICAgICAgY29uc3QgZ3V0dGVyV2l0aCA9IGAtJHtndXR0ZXJ9cHhgXG4gICAgICBjb25zdCBndXR0ZXJTdHlsZSA9IGBtYXJnaW4tYm90dG9tOiAke2d1dHRlcldpdGh9OyBtYXJnaW4tcmlnaHQ6ICR7Z3V0dGVyV2l0aH07YFxuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLndyYXBTdHlsZSkpIHtcbiAgICAgICAgc3R5bGUgPSB0b09iamVjdCh0aGlzLndyYXBTdHlsZSlcbiAgICAgICAgc3R5bGUubWFyZ2luUmlnaHQgPSBzdHlsZS5tYXJnaW5Cb3R0b20gPSBndXR0ZXJXaXRoXG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiB0aGlzLndyYXBTdHlsZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgc3R5bGUgKz0gZ3V0dGVyU3R5bGVcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0eWxlID0gZ3V0dGVyU3R5bGVcbiAgICAgIH1cbiAgICAgIC8vIOaJi+WKqOWKoOS4iuWuvemrmO+8jOS4jeeEtuWuueaYk+WvvOiHtOWuueWZqOWuvemrmOS4jeWvuVxuICAgICAgc3R5bGUgKz0gYHdpZHRoOiBjYWxjKDEwMCUgKyAke2d1dHRlcn1weCk7aGVpZ2h0OiBjYWxjKDEwMCUgKyAke2d1dHRlcn1weCk7YFxuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZSArPSBgd2lkdGg6IDEwMCU7aGVpZ2h0OiAxMDAlO2BcbiAgICB9XG4gICAgY29uc3QgdmlldyA9IGgoXG4gICAgICB0aGlzLnRhZyxcbiAgICAgIHtcbiAgICAgICAgY2xhc3M6IFsnc2luby1zY3JvbGxiYXJfX3ZpZXcnLCB0aGlzLnZpZXdDbGFzc10sXG4gICAgICAgIHN0eWxlOiB0aGlzLnZpZXdTdHlsZSxcbiAgICAgICAgcmVmOiAncmVzaXplJyxcbiAgICAgIH0sXG4gICAgICB0aGlzLiRzbG90cy5kZWZhdWx0XG4gICAgKVxuICAgIGNvbnN0IHdyYXAgPSAoXG4gICAgICA8ZGl2XG4gICAgICAgIHJlZj1cIndyYXBcIlxuICAgICAgICBzdHlsZT17c3R5bGV9XG4gICAgICAgIG9uU2Nyb2xsPXt0aGlzLmhhbmRsZVNjcm9sbH1cbiAgICAgICAgY2xhc3M9e1t0aGlzLndyYXBDbGFzcywgJ3Npbm8tc2Nyb2xsYmFyX193cmFwJywgZ3V0dGVyID8gJycgOiAnc2luby1zY3JvbGxiYXJfX3dyYXAtLWhpZGRlbi1kZWZhdWx0J119XG4gICAgICA+XG4gICAgICAgIHtbdmlld119XG4gICAgICA8L2Rpdj5cbiAgICApXG4gICAgbGV0IG5vZGVzXG5cbiAgICBpZiAoIXRoaXMubmF0aXZlKSB7XG4gICAgICBub2RlcyA9IFt3cmFwXVxuICAgICAgaWYgKHRoaXMuc2hvd0hvcml6b250YWxCYXIpIHtcbiAgICAgICAgbm9kZXMucHVzaCg8QmFyIG1vdmU9e3RoaXMubW92ZVh9IHNpemU9e3RoaXMuc2l6ZVdpZHRofT48L0Jhcj4pXG4gICAgICB9XG4gICAgICBpZiAodGhpcy5zaG93VmVydGljYWxCYXIpIHtcbiAgICAgICAgbm9kZXMucHVzaCg8QmFyIHZlcnRpY2FsIG1vdmU9e3RoaXMubW92ZVl9IHNpemU9e3RoaXMuc2l6ZUhlaWdodH0+PC9CYXI+KVxuICAgICAgfVxuICAgICAgLy8gbm9kZXMgPSAoW1xuICAgICAgLy8gICB3cmFwLFxuICAgICAgLy8gICA8QmFyXG4gICAgICAvLyAgICAgbW92ZT17dGhpcy5tb3ZlWH1cbiAgICAgIC8vICAgICBzaXplPXt0aGlzLnNpemVXaWR0aH0+PC9CYXI+LFxuICAgICAgLy8gICA8QmFyXG4gICAgICAvLyAgICAgdmVydGljYWxcbiAgICAgIC8vICAgICBtb3ZlPXt0aGlzLm1vdmVZfVxuICAgICAgLy8gICAgIHNpemU9e3RoaXMuc2l6ZUhlaWdodH0+PC9CYXI+XG4gICAgICAvLyBdKVxuICAgIH0gZWxzZSB7XG4gICAgICBub2RlcyA9IFtcbiAgICAgICAgPGRpdiByZWY9XCJ3cmFwXCIgY2xhc3M9e1t0aGlzLndyYXBDbGFzcywgJ3Npbm8tc2Nyb2xsYmFyX193cmFwJ119IHN0eWxlPXtzdHlsZX0+XG4gICAgICAgICAge1t2aWV3XX1cbiAgICAgICAgPC9kaXY+LFxuICAgICAgXVxuICAgIH1cbiAgICByZXR1cm4gaCgnZGl2JywgeyBjbGFzczogJ3Npbm8tc2Nyb2xsYmFyJyB9LCBub2RlcylcbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgaGFuZGxlU2Nyb2xsKGUpIHtcbiAgICAgIGNvbnN0IHdyYXAgPSB0aGlzLndyYXBcblxuICAgICAgdGhpcy5tb3ZlWSA9ICh3cmFwLnNjcm9sbFRvcCAqIDEwMCkgLyB3cmFwLmNsaWVudEhlaWdodFxuICAgICAgdGhpcy5tb3ZlWCA9ICh3cmFwLnNjcm9sbExlZnQgKiAxMDApIC8gd3JhcC5jbGllbnRXaWR0aFxuICAgICAgdGhpcy4kZW1pdCgnc2Nyb2xsJywgeyBzY3JvbGxUb3A6IGUudGFyZ2V0LnNjcm9sbFRvcCwgc2Nyb2xsTGVmdDogZS50YXJnZXQuc2Nyb2xsTGVmdCwgZSB9KVxuICAgICAgaWYgKGUudGFyZ2V0LnNjcm9sbFRvcCArIGUudGFyZ2V0Lm9mZnNldEhlaWdodCA+PSBlLnRhcmdldC5zY3JvbGxIZWlnaHQpIHtcbiAgICAgICAgLy8g6Ziy5oqWXG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKVxuICAgICAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy4kZW1pdCgnc2Nyb2xsQm90dG9tJylcbiAgICAgICAgfSwgMTAwKVxuICAgICAgfVxuICAgIH0sXG5cbiAgICB1cGRhdGUoKSB7XG4gICAgICBsZXQgaGVpZ2h0UGVyY2VudGFnZSA9ICcnXG4gICAgICBsZXQgd2lkdGhQZXJjZW50YWdlID0gJydcbiAgICAgIGNvbnN0IHdyYXAgPSB0aGlzLndyYXBcbiAgICAgIGlmICghd3JhcCkgcmV0dXJuXG5cbiAgICAgIGhlaWdodFBlcmNlbnRhZ2UgPSAod3JhcC5jbGllbnRIZWlnaHQgKiAxMDApIC8gd3JhcC5zY3JvbGxIZWlnaHRcbiAgICAgIHdpZHRoUGVyY2VudGFnZSA9ICh3cmFwLmNsaWVudFdpZHRoICogMTAwKSAvIHdyYXAuc2Nyb2xsV2lkdGhcblxuICAgICAgdGhpcy5zaXplSGVpZ2h0ID0gaGVpZ2h0UGVyY2VudGFnZSA8IDEwMCA/IGhlaWdodFBlcmNlbnRhZ2UgKyAnJScgOiAnJ1xuICAgICAgdGhpcy5zaXplV2lkdGggPSB3aWR0aFBlcmNlbnRhZ2UgPCAxMDAgPyB3aWR0aFBlcmNlbnRhZ2UgKyAnJScgOiAnJ1xuICAgIH0sXG4gICAgcmVzZXRUb1RvcCgpIHtcbiAgICAgIHRoaXMud3JhcC5zY3JvbGxUb3AgPSAwXG4gICAgfSxcbiAgICBzY3JvbGxUb1RvcCh0b3ApIHtcbiAgICAgIHRoaXMud3JhcC5zY3JvbGxUb3AgPSB0b3BcbiAgICB9LFxuICB9LFxuXG4gIG1vdW50ZWQoKSB7XG4gICAgaWYgKHRoaXMubmF0aXZlKSByZXR1cm5cbiAgICB0aGlzLiRuZXh0VGljayh0aGlzLnVwZGF0ZSlcbiAgICAhdGhpcy5ub3Jlc2l6ZSAmJiBhZGRSZXNpemVMaXN0ZW5lcih0aGlzLiRyZWZzLnJlc2l6ZSwgdGhpcy51cGRhdGUpXG4gIH0sXG5cbiAgYmVmb3JlRGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5uYXRpdmUpIHJldHVyblxuICAgICF0aGlzLm5vcmVzaXplICYmIHJlbW92ZVJlc2l6ZUxpc3RlbmVyKHRoaXMuJHJlZnMucmVzaXplLCB0aGlzLnVwZGF0ZSlcbiAgfSxcbn1cbiIsInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKXt2YXIgX3ZtPXRoaXMsX2M9X3ZtLl9zZWxmLl9jO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ2aXJ0dWFsLWxpc3RcIn0sW19jKCdTaW5vU2Nyb2xsYmFyJyx7cmVmOlwic2Nyb2xsYmFyUmVmXCIsc3RhdGljQ2xhc3M6XCJzY3JvbGxiYXJcIixzdHlsZTooYGhlaWdodDogJHtfdm0uaGVpZ2h0fXB4YCksb246e1wic2Nyb2xsXCI6X3ZtLnNjcm9sbFJlc29sdmUsXCJzY3JvbGxCb3R0b21cIjpfdm0uc2Nyb2xsQm90dG9tUmVzb2x2ZX19LFtfYygnZGl2Jyx7cmVmOlwiY2xpZW50SGVpZ2h0UmVmXCIsc3RhdGljQ2xhc3M6XCJsaXN0LXZpZXctcGhhbnRvbVwiLHN0eWxlOih7IGhlaWdodDogX3ZtLnZpcnR1YWxDb250ZW50SGVpZ2h0ICsgJ3B4JyB9KX0pLF92bS5fdihcIiBcIiksKF92bS5kYXRhLmxlbmd0aCA+IDApP19jKCd1bCcse3JlZjpcImNvbnRlbnRSZWZcIixzdGF0aWNDbGFzczpcIm9wdGlvbi13YXJwXCJ9LFtfdm0uX2woKF92bS52aXJ0dWFsUmVuZGVyRGF0YSksZnVuY3Rpb24oaXRlbSxpbmRleCl7cmV0dXJuIF9jKCdsaScse2tleTppbmRleCxzdGF0aWNDbGFzczpcIm9wdGlvblwiLHN0eWxlOih7IGhlaWdodDogX3ZtLml0ZW1IZWlnaHQgKyAncHgnIH0pfSxbX3ZtLl90KFwiZGVmYXVsdFwiLG51bGwse1wiaXRlbVwiOml0ZW0sXCJpbmRleFwiOmluZGV4fSldLDIpfSksX3ZtLl92KFwiIFwiKSxfdm0uX3QoXCJib3R0b21cIildLDIpOl9jKCduby1kYXRhJyldLDEpXSwxKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP2NhY2hlRGlyZWN0b3J5IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP2NhY2hlRGlyZWN0b3J5IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiPCEtLVxuICogQEF1dGhvcjogYXRkb3dcbiAqIEBEYXRlOiAyMDIyLTExLTE4IDEwOjQxOjM2XG4gKiBATGFzdEVkaXRvcnM6IG51bGxcbiAqIEBMYXN0RWRpdFRpbWU6IDIwMjMtMDItMjAgMjI6NTk6MTFcbiAqIEBEZXNjcmlwdGlvbjogZmlsZSBkZXNjcmlwdGlvblxuLS0+XG48dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJ2aXJ0dWFsLWxpc3RcIj5cbiAgICA8U2lub1Njcm9sbGJhclxuICAgICAgOnN0eWxlPVwiYGhlaWdodDogJHtoZWlnaHR9cHhgXCJcbiAgICAgIGNsYXNzPVwic2Nyb2xsYmFyXCJcbiAgICAgIEBzY3JvbGw9XCJzY3JvbGxSZXNvbHZlXCJcbiAgICAgIEBzY3JvbGxCb3R0b209XCJzY3JvbGxCb3R0b21SZXNvbHZlXCJcbiAgICAgIHJlZj1cInNjcm9sbGJhclJlZlwiXG4gICAgPlxuICAgICAgPCEtLSDov5nph4zmmK/nlKjkuo7mkpHlvIDpq5jluqbvvIzlh7rnjrDmu5rliqjmnaHnlKggLS0+XG4gICAgICA8ZGl2IGNsYXNzPVwibGlzdC12aWV3LXBoYW50b21cIiByZWY9XCJjbGllbnRIZWlnaHRSZWZcIiA6c3R5bGU9XCJ7IGhlaWdodDogdmlydHVhbENvbnRlbnRIZWlnaHQgKyAncHgnIH1cIj48L2Rpdj5cbiAgICAgIDx1bCB2LWlmPVwiZGF0YS5sZW5ndGggPiAwXCIgY2xhc3M9XCJvcHRpb24td2FycFwiIHJlZj1cImNvbnRlbnRSZWZcIj5cbiAgICAgICAgPGxpXG4gICAgICAgICAgOnN0eWxlPVwieyBoZWlnaHQ6IGl0ZW1IZWlnaHQgKyAncHgnIH1cIlxuICAgICAgICAgIGNsYXNzPVwib3B0aW9uXCJcbiAgICAgICAgICB2LWZvcj1cIihpdGVtLCBpbmRleCkgaW4gdmlydHVhbFJlbmRlckRhdGFcIlxuICAgICAgICAgIDprZXk9XCJpbmRleFwiXG4gICAgICAgID5cbiAgICAgICAgICA8c2xvdCA6aXRlbT1cIml0ZW1cIiA6aW5kZXg9XCJpbmRleFwiPjwvc2xvdD5cbiAgICAgICAgPC9saT5cbiAgICAgICAgPHNsb3QgbmFtZT1cImJvdHRvbVwiPjwvc2xvdD5cbiAgICAgIDwvdWw+XG4gICAgICA8bm8tZGF0YSB2LWVsc2UgLz5cbiAgICA8L1Npbm9TY3JvbGxiYXI+wqBcbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuwqBcbjxzY3JpcHQ+XG5pbXBvcnQgU2lub1Njcm9sbGJhciBmcm9tICdAL3BhY2thZ2VzL3Njcm9sbGJhcidcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ1ZpcnR1YWxMaXN0JyxcbiAgcHJvcHM6IHtcbiAgICBkYXRhOiB7XG4gICAgICB0eXBlOiBBcnJheSxcbiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFtdXG4gICAgICB9XG4gICAgfSxcbiAgICBsb2FkaW5nOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICB9LFxuICAgIGl0ZW1IZWlnaHQ6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDMwXG4gICAgfSxcbiAgICBtYXhIZWlnaHQ6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDIwMFxuICAgIH0sXG4gICAgZml4ZWRIZWlnaHQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH0sXG4gICAgLy8g5b2TZGF0YeabtOaWsOaXtu+8jOaYr+WQpuiHquWKqOa7muWIsOWIsOmhtumDqFxuICAgIGRlZmF1bHRVcGRhdGVUb1RvcDoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IHRydWVcbiAgICB9LFxuICAgIGJ1ZmZlckNvdW50OiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICBkZWZhdWx0OiAzXG4gICAgfVxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBoZWlnaHQ6IDIwMCxcbiAgICAgIHZpcnR1YWxDb250ZW50SGVpZ2h0OiAwLFxuICAgICAgdmlydHVhbFJlbmRlckRhdGE6IFtdLFxuICAgICAgY3VycmVudFNjcm9sbFRvcDogMFxuICAgIH1cbiAgfSxcbiAgY29tcG9uZW50czoge1xuICAgIFNpbm9TY3JvbGxiYXJcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBkYXRhOiB7XG4gICAgICBpbW1lZGlhdGU6IHRydWUsXG4gICAgICBoYW5kbGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIOa4heepuuaVsOaNruWSjOS9v+eUqCRuZXh0VGlja+S4uuS6huW8ueeql+enkuW8gOWSjOaVsOaNruWNoeatu1xuICAgICAgICB0aGlzLnZpcnR1YWxSZW5kZXJEYXRhID0gW11cbiAgICAgICAgdGhpcy52aXJ0dWFsQ29udGVudEhlaWdodCA9IHRoaXMuaXRlbUhlaWdodCAqIHRoaXMuZGF0YS5sZW5ndGhcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICAgIHRoaXMuY2FsR2VtaW5pU2Nyb2xsYmFySGVpZ2h0KClcbiAgICAgICAgICBpZiAodGhpcy5kZWZhdWx0VXBkYXRlVG9Ub3ApIHtcbiAgICAgICAgICAgIHRoaXMucmVzZXRUb1RvcCgpXG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMudXBkYXRlKHRoaXMuY3VycmVudFNjcm9sbFRvcClcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIGNvbXB1dGVkOiB7fSxcbiAgY3JlYXRlZCgpIHt9LFxuICBtb3VudGVkKCkge30sXG4gIG1ldGhvZHM6IHtcbiAgICByZXNldFRvVG9wKCkge1xuICAgICAgdGhpcy5jdXJyZW50U2Nyb2xsVG9wID0gMFxuICAgICAgdGhpcy4kcmVmcy5zY3JvbGxiYXJSZWYucmVzZXRUb1RvcCgpXG4gICAgfSxcbiAgICBjYWxHZW1pbmlTY3JvbGxiYXJIZWlnaHQoKSB7XG4gICAgICBjb25zdCBoZWlnaHQgPSB0aGlzLml0ZW1IZWlnaHQgKiB0aGlzLmRhdGEubGVuZ3RoXG4gICAgICBpZiAodGhpcy5maXhlZEhlaWdodCA9PT0gdHJ1ZSkge1xuICAgICAgICB0aGlzLmhlaWdodCA9IHRoaXMubWF4SGVpZ2h0XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgaWYgKGhlaWdodCA+IHRoaXMubWF4SGVpZ2h0IHx8IGhlaWdodCA9PT0gMCkge1xuICAgICAgICB0aGlzLmhlaWdodCA9IHRoaXMubWF4SGVpZ2h0XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmhlaWdodCA9IGhlaWdodFxuICAgICAgfVxuICAgIH0sXG4gICAgLy8g5pu05paw5pWw5o2uXG4gICAgdXBkYXRlKHNjcm9sbFRvcCA9IDApIHtcbiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgLy8g6I635Y+W5b2T5YmN5Y+v5bGV56S65pWw6YePXG4gICAgICAgIGNvbnN0IGNvdW50ID0gTWF0aC5jZWlsKHRoaXMuaGVpZ2h0IC8gdGhpcy5pdGVtSGVpZ2h0KVxuICAgICAgICBjb25zdCBzdGFydCA9IE1hdGguZmxvb3Ioc2Nyb2xsVG9wIC8gdGhpcy5pdGVtSGVpZ2h0KVxuICAgICAgICAvLyDlj5blvpflj6/op4HljLrln5/nmoTnu5PmnZ/mlbDmja7ntKLlvJVcbiAgICAgICAgY29uc3QgZW5kID0gc3RhcnQgKyBjb3VudCArIHRoaXMuYnVmZmVyQ291bnRcbiAgICAgICAgLy8g6K6h566X5Ye65Y+v6KeB5Yy65Z+f5a+55bqU55qE5pWw5o2u77yM6K6pIFZ1ZS5qcyDmm7TmlrBcbiAgICAgICAgdGhpcy52aXJ0dWFsUmVuZGVyRGF0YSA9IHRoaXMuZGF0YS5zbGljZShzdGFydCwgZW5kKVxuICAgICAgICAvLyDmiorlj6/op4HljLrln5/nmoQgdG9wIOiuvue9ruS4uui1t+Wni+WFg+e0oOWcqOaVtOS4quWIl+ihqOS4reeahOS9jee9ru+8iOS9v+eUqCB0cmFuc2Zvcm0g5piv5Li65LqG5pu05aW955qE5oCn6IO977yJXG4gICAgICAgIHRoaXMuJHJlZnMuY29udGVudFJlZiAmJlxuICAgICAgICAgICh0aGlzLiRyZWZzLmNvbnRlbnRSZWYuc3R5bGUud2Via2l0VHJhbnNmb3JtID0gYHRyYW5zbGF0ZTNkKDAsICR7c3RhcnQgKiB0aGlzLml0ZW1IZWlnaHR9cHgsIDApYClcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3RoaXMudmlydHVhbFJlbmRlckRhdGE6JywgdGhpcy52aXJ0dWFsUmVuZGVyRGF0YSlcbiAgICAgIH0pXG4gICAgfSxcbiAgICBzY3JvbGxSZXNvbHZlKGRhdGEpIHtcbiAgICAgIGNvbnN0IHtzY3JvbGxUb3B9ID0gZGF0YVxuICAgICAgdGhpcy51cGRhdGUoc2Nyb2xsVG9wKVxuICAgICAgdGhpcy5jdXJyZW50U2Nyb2xsVG9wID0gc2Nyb2xsVG9wXG4gICAgICB0aGlzLiRlbWl0KCdzY3JvbGwnLCBkYXRhKVxuICAgIH0sXG4gICAgcmVzZXRUb1RvcFVwZGF0ZSgpIHtcbiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgdGhpcy5yZXNldFRvVG9wKClcbiAgICAgICAgdGhpcy51cGRhdGUoMClcbiAgICAgIH0pXG4gICAgfSxcbiAgICBzY3JvbGxCb3R0b21SZXNvbHZlKCl7XG4gICAgICB0aGlzLiRlbWl0KCdzY3JvbGxCb3R0b20nKVxuICAgIH1cbiAgfSxcbiAgYmVmb3JlRGVzdHJveSgpIHt9XG59XG48L3NjcmlwdD5cbsKgXG48c3R5bGUgbGFuZz1cImxlc3NcIiBzY29wZWQ+XG4udmlydHVhbC1saXN0IHtcbiAgL2RlZXAvIC5zaW5vLXNjcm9sbGJhcl9fdmlld3tcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbiAgLmxpc3Qtdmlldy1waGFudG9tIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgei1pbmRleDogLTE7XG4gIH1cbiAgLm9wdGlvbi13YXJwIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG59XG48L3N0eWxlPiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTNlNWFlNmY2JnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTNlNWFlNmY2JnByb2QmbGFuZz1sZXNzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCIzZTVhZTZmNlwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsIi8qXG4gKiBAQXV0aG9yOiBhdGRvd1xuICogQERhdGU6IDIwMjItMTEtMTggMTA6NDE6MjlcbiAqIEBMYXN0RWRpdG9yczogbnVsbFxuICogQExhc3RFZGl0VGltZTogMjAyMi0xMS0xOCAxMDo0MjozOVxuICogQERlc2NyaXB0aW9uOiBmaWxlIGRlc2NyaXB0aW9uXG4gKi9cbmltcG9ydCBWaXJ0dWFsTGlzdCBmcm9tICcuL3NyYy9pbmRleC52dWUnXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5WaXJ0dWFsTGlzdC5pbnN0YWxsID0gZnVuY3Rpb24gKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KFZpcnR1YWxMaXN0Lm5hbWUsIFZpcnR1YWxMaXN0KVxufVxuXG5leHBvcnQgZGVmYXVsdCBWaXJ0dWFsTGlzdCIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuc2luby1zY3JvbGxiYXJfX3dyYXAge1xcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG4uc2luby1zY3JvbGxiYXIge1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuLnNpbm8tc2Nyb2xsYmFyX19iYXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDJweDtcXG4gIGJvdHRvbTogMnB4O1xcbiAgei1pbmRleDogMTtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIG9wYWNpdHk6IDE7XFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMTJzIGVhc2Utb3V0O1xcbn1cXG4uc2luby1zY3JvbGxiYXJfX2Jhci5pcy1ob3Jpem9udGFsIHtcXG4gIGhlaWdodDogNnB4O1xcbiAgbGVmdDogMnB4O1xcbn1cXG4uc2luby1zY3JvbGxiYXJfX2Jhci5pcy1ob3Jpem9udGFsID4gZGl2IHtcXG4gIGhlaWdodDogMTAwJTtcXG59XFxuLnNpbm8tc2Nyb2xsYmFyX19iYXIuaXMtdmVydGljYWwge1xcbiAgd2lkdGg6IDZweDtcXG4gIHRvcDogMnB4O1xcbn1cXG4uc2luby1zY3JvbGxiYXJfX2Jhci5pcy12ZXJ0aWNhbCA+IGRpdiB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuLnNpbm8tc2Nyb2xsYmFyX190aHVtYiB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHdpZHRoOiAwO1xcbiAgaGVpZ2h0OiAwO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTgwLCAxODUsIDIxMCwgMC40KTtcXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcztcXG59XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9M2U1YWU2ZjYmcHJvZCZsYW5nPWxlc3Mmc2NvcGVkPXRydWUmXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTNlNWFlNmY2JnByb2QmbGFuZz1sZXNzJnNjb3BlZD10cnVlJlwiIiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi52aXJ0dWFsLWxpc3RbZGF0YS12LTNlNWFlNmY2XSAuc2luby1zY3JvbGxiYXJfX3ZpZXcge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG4udmlydHVhbC1saXN0IC5saXN0LXZpZXctcGhhbnRvbVtkYXRhLXYtM2U1YWU2ZjZdIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDA7XFxuICB0b3A6IDA7XFxuICByaWdodDogMDtcXG4gIHotaW5kZXg6IC0xO1xcbn1cXG4udmlydHVhbC1saXN0IC5vcHRpb24td2FycFtkYXRhLXYtM2U1YWU2ZjZdIHtcXG4gIG1hcmdpbi1ib3R0b206IDA7XFxufVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iXSwic291cmNlUm9vdCI6IiJ9