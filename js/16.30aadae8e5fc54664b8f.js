(window.webpackJsonp=window.webpackJsonp||[]).push([[16,57,66],{105:function(t,n,e){"use strict";e.r(n);var r=e(230),i={name:"dynamic-number",props:{},data:()=>({count:0}),components:{DynamicNumber:r.default},watch:{},computed:{},created(){},mounted(){let t=setInterval(()=>{this.count+=123},1e3);this.$once("hook:beforeDestroy",()=>{clearInterval(t)})},beforeDestroy(){}},o=e(9),a=Object(o.a)(i,(function(){var t=this;return(0,t._self._c)("DynamicNumber",{model:{value:t.count,callback:function(n){t.count=n},expression:"count"}})}),[],!1,null,"515fb40a",null).exports,s={name:"dynamic-number",props:{},data:()=>({count:0}),components:{DynamicNumber:r.default},watch:{},computed:{},created(){},mounted(){let t=setInterval(()=>{this.count+=12},1e3);this.$once("hook:beforeDestroy",()=>{clearInterval(t)})},beforeDestroy(){}},l=Object(o.a)(s,(function(){var t=this;return(0,t._self._c)("DynamicNumber",{attrs:{length:2},model:{value:t.count,callback:function(n){t.count=n},expression:"count"}})}),[],!1,null,"3ad6b4fe",null).exports,c={name:"dynamic-number",props:{},data:()=>({count:0}),components:{DynamicNumber:r.default},watch:{},computed:{},created(){},mounted(){let t=setInterval(()=>{this.count+=123},1e3);this.$once("hook:beforeDestroy",()=>{clearInterval(t)})},beforeDestroy(){}},u={name:"ComponentDoc",components:{Comhck1p5lnco71klDemo0:a,Comhck1p5lnco71klDemo1:l,Comhck1p5lnco71klDemo2:Object(o.a)(c,(function(){var t=this;return(0,t._self._c)("DynamicNumber",{attrs:{isThousandSplit:!0},model:{value:t.count,callback:function(n){t.count=n},expression:"count"}})}),[],!1,null,"41ca56a4",null).exports}},m=Object(o.a)(u,(function(){var t=this,n=t._self._c;return n("div",{staticClass:"vue-demo-container"},[n("h4",[t._v("1. 基础用法")]),t._v(" "),n("div",{staticClass:"vue-demo-wrapper"},[n("Comhck1p5lnco71klDemo0"),t._v(" "),t._m(0)],1),t._v(" "),n("h4",[t._v("2. 指定数字最大显示长度")]),t._v(" "),n("div",{staticClass:"vue-demo-wrapper"},[n("Comhck1p5lnco71klDemo1"),t._v(" "),t._m(1)],1),t._v(" "),n("h4",[t._v("3. 使用千分分割")]),t._v(" "),n("div",{staticClass:"vue-demo-wrapper"},[n("Comhck1p5lnco71klDemo2"),t._v(" "),t._m(2)],1),t._v(" "),n("h3",[t._v("API")]),t._v(" "),t._m(3)])}),[function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <DynamicNumber v-model="count"/>\n</template>\n\n<script>\nimport DynamicNumber from "@/packages/dynamic-number";\nexport default {\n  name: "dynamic-number",\n  props: {},\n  data() {\n    return {\n      count: 0,\n    };\n  },\n  components: {\n    DynamicNumber,\n  },\n  watch: {},\n  computed: {},\n  created() {},\n  mounted() {\n    let timer = setInterval(() => {\n      this.count += 123;\n    }, 1000);\n    this.$once("hook:beforeDestroy", () => {\n      clearInterval(timer);\n    });\n  },\n  beforeDestroy() {},\n};\n<\/script>\n\n<style lang="less" scoped></style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <DynamicNumber v-model="count" :length="2"/>\n</template>\n\n<script>\nimport DynamicNumber from "@/packages/dynamic-number";\nexport default {\n  name: "dynamic-number",\n  props: {},\n  data() {\n    return {\n      count: 0,\n    };\n  },\n  components: {\n    DynamicNumber,\n  },\n  watch: {},\n  computed: {},\n  created() {},\n  mounted() {\n    let timer = setInterval(() => {\n      this.count += 12;\n    }, 1000);\n    this.$once("hook:beforeDestroy", () => {\n      clearInterval(timer);\n    });\n  },\n  beforeDestroy() {},\n};\n<\/script>\n\n<style lang="less" scoped></style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <DynamicNumber v-model="count" :isThousandSplit="true"/>\n</template>\n\n<script>\nimport DynamicNumber from "@/packages/dynamic-number";\nexport default {\n  name: "dynamic-number",\n  props: {},\n  data() {\n    return {\n      count: 0,\n    };\n  },\n  components: {\n    DynamicNumber,\n  },\n  watch: {},\n  computed: {},\n  created() {},\n  mounted() {\n    let timer = setInterval(() => {\n      this.count += 123;\n    }, 1000);\n    this.$once("hook:beforeDestroy", () => {\n      clearInterval(timer);\n    });\n  },\n  beforeDestroy() {},\n};\n<\/script>\n\n<style lang="less" scoped></style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this,n=t._self._c;return n("table",[n("thead",[n("tr",[n("th",[t._v("属性")]),t._v(" "),n("th",[t._v("说明")]),t._v(" "),n("th",[t._v("类型")]),t._v(" "),n("th",[t._v("默认值")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("v-modal")]),t._v(" "),n("td",[t._v("绑定值")]),t._v(" "),n("td",[t._v("Number")]),t._v(" "),n("td",[t._v("0")])]),t._v(" "),n("tr",[n("td",[t._v("length")]),t._v(" "),n("td",[t._v("最大显示长度")]),t._v(" "),n("td",[t._v("Number")]),t._v(" "),n("td",[t._v("9")])]),t._v(" "),n("tr",[n("td",[t._v("isThousandSplit")]),t._v(" "),n("td",[t._v("是否使用千分分割")]),t._v(" "),n("td",[t._v("Boolean")]),t._v(" "),n("td",[t._v("false")])])])])}],!1,null,null,null);n.default=m.exports},230:function(t,n,e){"use strict";e.r(n);var r=e(234);r.default.install=function(t){t.component(r.default.name,r.default)},n.default=r.default},234:function(t,n,e){"use strict";e.r(n);e(23);var r={name:"ScrollNumber",model:{prop:"count",event:"setCount"},props:{count:{type:Number,default:0},isThousandSplit:{type:Boolean,default:!1},length:{type:Number,default:9}},data:()=>({initNumArray:["0"],displayNumArray:[]}),watch:{count:{immediate:!0,handler:function(){const t=this.count,n=this.numToArray(t);this.initNumArray=[],n.forEach(t=>{isNaN(t)?this.initNumArray.push(","):this.initNumArray.push("0")}),this.displayNumArray=n,this.$nextTick(()=>{const t=setTimeout(()=>{this.setNumberTransform(),clearTimeout(t)},0)})}}},mounted(){},methods:{numToArray(t){if(!0===this.isThousandSplit){if(this.length){let n="";for(let t=0;t<this.length;t++)n+="9";Number(n),0;let e="";if(String(t).length<=this.length){const n=this.length-String(t).length;e=String(t);for(let t=0;t<n;t++)e="0"+e}return this.thousandSplit(e).split("")}return this.thousandSplit(t).split("")}return String(t).split("")},thousandSplit:t=>(t+"").replace(/\d{1,3}(?=(\d{3})+$)/g,"$&,"),setNumberTransform(){this.displayNumArray.forEach((t,n)=>{if(!isNaN(t)){this.$refs.itemRef[n].children[0].children[0].style.transform=`translate(-50%, -${10*t}%)`}})}}},i=(e(335),e(9)),o=Object(i.a)(r,(function(){var t=this,n=t._self._c;return n("div",{staticClass:"s-scroll-number"},t._l(t.initNumArray,(function(e,r){return n("li",{key:r,ref:"itemRef",refInFor:!0,class:{"number-item":!isNaN(e),"mark-item":isNaN(e)}},[isNaN(e)?n("span",{staticClass:"comma"},[t._v(t._s(e))]):n("span",[n("i",[t._v("0123456789")])])])})),0)}),[],!1,null,"7038f128",null);n.default=o.exports},306:function(t,n,e){var r=e(2),i=e(336);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[t.i,i,""]]);var o={insert:"head",singleton:!1};r(i,o);t.exports=i.locals||{}},335:function(t,n,e){"use strict";e(306)},336:function(t,n,e){(n=e(3)(!1)).push([t.i,"/*总量滚动数字设置*/\n.s-scroll-number[data-v-7038f128] {\n  position: relative;\n  height: 100px;\n  font-size: 54px;\n  line-height: 41px;\n  text-align: center;\n  list-style: none;\n  color: #2d7cff;\n  writing-mode: vertical-lr;\n  text-orientation: upright;\n  /*文字禁止编辑*/\n  -moz-user-select: none;\n  /*火狐*/\n  -webkit-user-select: none;\n  /*webkit浏览器*/\n  /*IE10*/\n  /*早期浏览器*/\n  user-select: none;\n  /* overflow: hidden; */\n}\n/* 默认逗号设置 */\n.mark-item[data-v-7038f128] {\n  width: 10px;\n  height: 100px;\n  margin-right: 5px;\n  line-height: 10px;\n  font-size: 48px;\n  position: relative;\n}\n.mark-item > span[data-v-7038f128] {\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  writing-mode: vertical-rl;\n  text-orientation: upright;\n}\n/*滚动数字设置*/\n.number-item[data-v-7038f128] {\n  width: 41px;\n  height: 75px;\n  background: #ccc;\n  list-style: none;\n  margin-right: 5px;\n  background: #fafafa;\n  border-radius: 4px;\n  border: 1px solid #dddddd;\n}\n.number-item > span[data-v-7038f128] {\n  position: relative;\n  display: inline-block;\n  margin-right: 10px;\n  width: 100%;\n  height: 100%;\n  writing-mode: vertical-rl;\n  text-orientation: upright;\n  overflow: hidden;\n}\n.number-item > span > i[data-v-7038f128] {\n  font-style: normal;\n  position: absolute;\n  top: 11px;\n  left: 50%;\n  transform: translate(-50%, 0);\n  transition: transform 0.7s ease-in-out;\n  letter-spacing: 10px;\n}\n.number-item[data-v-7038f128]:last-child {\n  margin-right: 0;\n}\n",""]),t.exports=n}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,