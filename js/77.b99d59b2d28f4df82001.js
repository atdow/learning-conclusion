(window.webpackJsonp=window.webpackJsonp||[]).push([[77,104],{197:function(t,e,r){"use strict";r.r(e),r.d(e,"BAR_MAP",(function(){return o})),r.d(e,"renderThumbStyle",(function(){return s})),r.d(e,"on",(function(){return i})),r.d(e,"off",(function(){return c})),r.d(e,"toObject",(function(){return l}));const n=r(0).default.prototype.$isServer,o={vertical:{offset:"offsetHeight",scroll:"scrollTop",scrollSize:"scrollHeight",size:"height",key:"vertical",axis:"Y",client:"clientY",direction:"top"},horizontal:{offset:"offsetWidth",scroll:"scrollLeft",scrollSize:"scrollWidth",size:"width",key:"horizontal",axis:"X",client:"clientX",direction:"left"}};function s({move:t,size:e,bar:r}){const n={},o=`translate${r.axis}(${t}%)`;return n[r.size]=e,n.transform=o,n.msTransform=o,n.webkitTransform=o,n}const i=!n&&document.addEventListener?function(t,e,r){t&&e&&r&&t.addEventListener(e,r,!1)}:function(t,e,r){t&&e&&r&&t.attachEvent("on"+e,r)},c=!n&&document.removeEventListener?function(t,e,r){t&&e&&t.removeEventListener(e,r,!1)}:function(t,e,r){t&&e&&t.detachEvent("on"+e,r)};function a(t,e){for(const r in e)t[r]=e[r];return t}function l(t){var e={};for(let r=0;r<t.length;r++)t[r]&&a(e,t[r]);return e}},200:function(t,e,r){"use strict";r.r(e);var n=r(197);e.default={name:"Bar",props:{vertical:Boolean,size:String,move:Number},computed:{bar(){return n.BAR_MAP[this.vertical?"vertical":"horizontal"]},wrap(){return this.$parent.wrap}},render(t){const{size:e,move:r,bar:o}=this;return t("div",{class:["sino-scrollbar__bar","is-"+o.key],on:{mousedown:this.clickTrackHandler}},[t("div",{ref:"thumb",class:"sino-scrollbar__thumb",on:{mousedown:this.clickThumbHandler},style:Object(n.renderThumbStyle)({size:e,move:r,bar:o})})])},methods:{clickThumbHandler(t){t.ctrlKey||2===t.button||(this.startDrag(t),this[this.bar.axis]=t.currentTarget[this.bar.offset]-(t[this.bar.client]-t.currentTarget.getBoundingClientRect()[this.bar.direction]))},clickTrackHandler(t){const e=100*(Math.abs(t.target.getBoundingClientRect()[this.bar.direction]-t[this.bar.client])-this.$refs.thumb[this.bar.offset]/2)/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=e*this.wrap[this.bar.scrollSize]/100},startDrag(t){t.stopImmediatePropagation(),this.cursorDown=!0,Object(n.on)(document,"mousemove",this.mouseMoveDocumentHandler),Object(n.on)(document,"mouseup",this.mouseUpDocumentHandler),document.onselectstart=()=>!1},mouseMoveDocumentHandler(t){if(!1===this.cursorDown)return;const e=this[this.bar.axis];if(!e)return;const r=100*(-1*(this.$el.getBoundingClientRect()[this.bar.direction]-t[this.bar.client])-(this.$refs.thumb[this.bar.offset]-e))/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=r*this.wrap[this.bar.scrollSize]/100},mouseUpDocumentHandler(t){this.cursorDown=!1,this[this.bar.axis]=0,Object(n.off)(document,"mousemove",this.mouseMoveDocumentHandler),document.onselectstart=null}},destroyed(){Object(n.off)(document,"mouseup",this.mouseUpDocumentHandler)}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,