(window.webpackJsonp=window.webpackJsonp||[]).push([[11,41,42,47,51,82,89,108,109,115],{111:function(t,e,i){"use strict";i.r(e);i(24);var s=i(247),n={name:"ScrollbarExample",props:{},data:()=>({data:[]}),components:{VirtualList:s.default},watch:{},computed:{},created(){const t=[];for(let e=0;e<100;e++)t.push(e);this.data=t},mounted(){},methods:{scrollBottom(){console.log("scrollBottom")},scroll(t){console.log("data:",t)},scrollTopTest(){this.$refs.virtualListRef.resetToTop()}},beforeDestroy(){}},o=i(9),r=Object(o.a)(n,(function(){var t=this,e=t._self._c;return e("div",[e("virtual-list",{ref:"virtualListRef",staticStyle:{height:"300px"},attrs:{data:t.data,itemHeight:30},on:{scroll:t.scroll,scrollBottom:t.scrollBottom},scopedSlots:t._u([{key:"default",fn:function({item:i,index:s}){return e("div",{},[t._v(t._s(i))])}}])}),t._v(" "),e("button",{staticStyle:{"margin-top":"10px"},on:{click:t.scrollTopTest}},[t._v("滚动到顶部")])],1)}),[],!1,null,"4e0e7ecb",null).exports,a={name:"ScrollbarExample",props:{},data:()=>({data:[]}),components:{VirtualList:s.default},watch:{},computed:{},created(){const t=[];for(let e=0;e<3;e++)t.push(e);this.data=t},mounted(){},methods:{handleChangeData(t){"add"===t?this.data.push(6,6,6):this.data=this.data.slice(0,this.data.length-2)}},beforeDestroy(){}},l={name:"ComponentDoc",components:{Comt3b1jvlozsy8tmDemo0:r,Comt3b1jvlozsy8tmDemo1:Object(o.a)(a,(function(){var t=this,e=t._self._c;return e("div",[e("virtual-list",{ref:"virtualListRef",attrs:{data:t.data,itemHeight:30,fixedHeight:!0,maxHeight:300},scopedSlots:t._u([{key:"default",fn:function({item:i,index:s}){return e("div",{},[t._v(t._s(i))])}}])}),t._v(" "),e("button",{staticStyle:{"margin-top":"10px"},on:{click:function(e){return t.handleChangeData("add")}}},[t._v("增加数据")]),t._v(" "),e("button",{staticStyle:{"margin-top":"10px"},on:{click:function(e){return t.handleChangeData("reduce")}}},[t._v("减少数据数据")])],1)}),[],!1,null,"03467ce0",null).exports}},c=Object(o.a)(l,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"vue-demo-container"},[e("h3",[t._v("1. 基本使用")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Comt3b1jvlozsy8tmDemo0"),t._v(" "),t._m(0)],1),t._v(" "),e("h3",[t._v("2. 内容高度小于maxHeight时取内容高度")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Comt3b1jvlozsy8tmDemo1"),t._v(" "),t._m(1)],1),t._v(" "),e("h3",[t._v("API")]),t._v(" "),t._m(2),t._v(" "),e("h3",[t._v("事件")]),t._v(" "),t._m(3),t._v(" "),e("h3",[t._v("方法")]),t._v(" "),t._m(4)])}),[function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <div>\n    <virtual-list \n      :data="data" \n      :itemHeight="30" \n      ref="virtualListRef"\n      style="height: 300px"\n      @scroll="scroll"\n      @scrollBottom="scrollBottom"\n    >\n      <div slot-scope="{ item, index }">{{ item }}</div>\n    </virtual-list>\n    <button style="margin-top: 10px" @click="scrollTopTest">滚动到顶部</button>\n  </div>\n\n</template>\n<script>\nimport VirtualList from "@/packages/virtual-list";\nexport default {\n  name: "ScrollbarExample",\n  props: {},\n  data() {\n    return {\n      data: []\n    };\n  },\n  components: {\n    VirtualList,\n  },\n  watch: {},\n  computed: {},\n  created() {\n    const data = []\n    for(let i = 0;i < 100; i++){\n      data.push(i)\n    }\n    this.data = data\n  },\n  mounted() {},\n  methods: {\n    scrollBottom() {\n      console.log(\'scrollBottom\')\n    },\n    scroll(data) {\n      console.log(\'data:\', data)\n    },\n    scrollTopTest() {\n      this.$refs.virtualListRef.resetToTop()\n    }\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <div>\n    <virtual-list \n      :data="data" \n      :itemHeight="30" \n      :fixedHeight="true"\n      :maxHeight="300"\n      ref="virtualListRef"\n    >\n      <div slot-scope="{ item, index }">{{ item }}</div>\n    </virtual-list>\n    <button style="margin-top: 10px" @click="handleChangeData(\'add\')">增加数据</button>\n    <button style="margin-top: 10px" @click="handleChangeData(\'reduce\')">减少数据数据</button>\n  </div>\n\n</template>\n<script>\nimport VirtualList from "@/packages/virtual-list";\nexport default {\n  name: "ScrollbarExample",\n  props: {},\n  data() {\n    return {\n      data: []\n    };\n  },\n  components: {\n    VirtualList,\n  },\n  watch: {},\n  computed: {},\n  created() {\n    const data = []\n    for(let i = 0;i < 3; i++){\n      data.push(i)\n    }\n    this.data = data\n  },\n  mounted() {},\n  methods: {\n    handleChangeData(type) {\n      if(type === \'add\') {\n        this.data.push(...[6,6,6])\n      } else {\n        this.data = this.data.slice(0, this.data.length - 2)\n      }\n    }\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("属性")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认值")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("data")]),t._v(" "),e("td",[t._v("数据")]),t._v(" "),e("td",[t._v("Array "),e("code",[t._v("required")])]),t._v(" "),e("td",[t._v("[]")])]),t._v(" "),e("tr",[e("td",[t._v("itemHeight")]),t._v(" "),e("td",[t._v("每一项的高度")]),t._v(" "),e("td",[t._v("Number "),e("code",[t._v("required")])]),t._v(" "),e("td",[t._v("30")])]),t._v(" "),e("tr",[e("td",[t._v("fixedHeight")]),t._v(" "),e("td",[t._v("是否固定高度")]),t._v(" "),e("td",[t._v("Boolean")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("maxHeight")]),t._v(" "),e("td",[t._v("最大高度")]),t._v(" "),e("td",[t._v("Number 当 "),e("code",[t._v("fixedHeight:true")]),t._v(" 时需要指定 "),e("code",[t._v("maxHeight")])]),t._v(" "),e("td",[t._v("200")])]),t._v(" "),e("tr",[e("td",[t._v("defaultUpdateToTop")]),t._v(" "),e("td",[t._v("当data更新时，是否自动滚到到顶部")]),t._v(" "),e("td",[t._v("Boolean")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("bufferCount")]),t._v(" "),e("td",[t._v("预渲染数据")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("3")])])])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("回调参数")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("scroll")]),t._v(" "),e("td",[t._v("滚动事件")]),t._v(" "),e("td",[t._v("(data) => void")])]),t._v(" "),e("tr",[e("td",[t._v("scrollBottom")]),t._v(" "),e("td",[t._v("滚动到底部事件")]),t._v(" "),e("td",[t._v("-")])])])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("参数")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("resetToTop")]),t._v(" "),e("td",[t._v("滚动到顶部")]),t._v(" "),e("td",[t._v("-")])])])])}],!1,null,null,null);e.default=c.exports},205:function(t,e,i){"use strict";i.r(e),i.d(e,"BAR_MAP",(function(){return n})),i.d(e,"renderThumbStyle",(function(){return o})),i.d(e,"on",(function(){return r})),i.d(e,"off",(function(){return a})),i.d(e,"toObject",(function(){return c}));const s=i(0).default.prototype.$isServer,n={vertical:{offset:"offsetHeight",scroll:"scrollTop",scrollSize:"scrollHeight",size:"height",key:"vertical",axis:"Y",client:"clientY",direction:"top"},horizontal:{offset:"offsetWidth",scroll:"scrollLeft",scrollSize:"scrollWidth",size:"width",key:"horizontal",axis:"X",client:"clientX",direction:"left"}};function o({move:t,size:e,bar:i}){const s={},n=`translate${i.axis}(${t}%)`;return s[i.size]=e,s.transform=n,s.msTransform=n,s.webkitTransform=n,s}const r=!s&&document.addEventListener?function(t,e,i){t&&e&&i&&t.addEventListener(e,i,!1)}:function(t,e,i){t&&e&&i&&t.attachEvent("on"+e,i)},a=!s&&document.removeEventListener?function(t,e,i){t&&e&&t.removeEventListener(e,i,!1)}:function(t,e,i){t&&e&&t.detachEvent("on"+e,i)};function l(t,e){for(const i in e)t[i]=e[i];return t}function c(t){var e={};for(let i=0;i<t.length;i++)t[i]&&l(e,t[i]);return e}},206:function(t,e,i){"use strict";i.r(e),i.d(e,"addResizeListener",(function(){return r})),i.d(e,"removeResizeListener",(function(){return a}));i(24);var s=i(300);const n="undefined"==typeof window,o=function(t){for(const e of t){const t=e.target.__resizeListeners__||[];t.length&&t.forEach(t=>{t()})}},r=function(t,e){n||(t.__resizeListeners__||(t.__resizeListeners__=[],t.__ro__=new s.default(o),t.__ro__.observe(t)),t.__resizeListeners__.push(e))},a=function(t,e){t&&t.__resizeListeners__&&(t.__resizeListeners__.splice(t.__resizeListeners__.indexOf(e),1),t.__resizeListeners__.length||t.__ro__.disconnect())}},207:function(t,e,i){"use strict";i.r(e);var s=i(0);let n;e.default=function(){if(s.default.prototype.$isServer)return 0;if(void 0!==n)return n;const t=document.createElement("div");t.className="sino-scrollbar__wrap",t.style.visibility="hidden",t.style.width="100px",t.style.position="absolute",t.style.top="-9999px",document.body.appendChild(t);const e=t.offsetWidth;t.style.overflow="scroll";const i=document.createElement("div");i.style.width="100%",t.appendChild(i);const o=i.offsetWidth;return t.parentNode.removeChild(t),n=e-o,n}},208:function(t,e,i){"use strict";i.r(e);var s=i(205);e.default={name:"Bar",props:{vertical:Boolean,size:String,move:Number},computed:{bar(){return s.BAR_MAP[this.vertical?"vertical":"horizontal"]},wrap(){return this.$parent.wrap}},render(t){const{size:e,move:i,bar:n}=this;return t("div",{class:["sino-scrollbar__bar","is-"+n.key],on:{mousedown:this.clickTrackHandler}},[t("div",{ref:"thumb",class:"sino-scrollbar__thumb",on:{mousedown:this.clickThumbHandler},style:Object(s.renderThumbStyle)({size:e,move:i,bar:n})})])},methods:{clickThumbHandler(t){t.ctrlKey||2===t.button||(this.startDrag(t),this[this.bar.axis]=t.currentTarget[this.bar.offset]-(t[this.bar.client]-t.currentTarget.getBoundingClientRect()[this.bar.direction]))},clickTrackHandler(t){const e=100*(Math.abs(t.target.getBoundingClientRect()[this.bar.direction]-t[this.bar.client])-this.$refs.thumb[this.bar.offset]/2)/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=e*this.wrap[this.bar.scrollSize]/100},startDrag(t){t.stopImmediatePropagation(),this.cursorDown=!0,Object(s.on)(document,"mousemove",this.mouseMoveDocumentHandler),Object(s.on)(document,"mouseup",this.mouseUpDocumentHandler),document.onselectstart=()=>!1},mouseMoveDocumentHandler(t){if(!1===this.cursorDown)return;const e=this[this.bar.axis];if(!e)return;const i=100*(-1*(this.$el.getBoundingClientRect()[this.bar.direction]-t[this.bar.client])-(this.$refs.thumb[this.bar.offset]-e))/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=i*this.wrap[this.bar.scrollSize]/100},mouseUpDocumentHandler(t){this.cursorDown=!1,this[this.bar.axis]=0,Object(s.off)(document,"mousemove",this.mouseMoveDocumentHandler),document.onselectstart=null}},destroyed(){Object(s.off)(document,"mouseup",this.mouseUpDocumentHandler)}}},209:function(t,e,i){var s=i(2),n=i(299);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[t.i,n,""]]);var o={insert:"head",singleton:!1};s(n,o);t.exports=n.locals||{}},210:function(t,e,i){"use strict";i.r(e);var s=i(211);s.default.install=function(t){t.component(s.default.name,s.default)},e.default=s.default},211:function(t,e,i){"use strict";i.r(e);i(24);var s=i(206),n=i(207),o=i(205),r=i(208);i(209),e.default={name:"SinoScrollbar",components:{Bar:r.default},props:{native:Boolean,wrapStyle:{},wrapClass:{},viewClass:{},viewStyle:{},showHorizontalBar:{type:Boolean,default:!0},showVerticalBar:{type:Boolean,default:!0},noresize:Boolean,tag:{type:String,default:"div"}},data:()=>({sizeWidth:"0",sizeHeight:"0",moveX:0,moveY:0}),computed:{wrap(){return this.$refs.wrap}},render(t){const e=Object(n.default)();let i=this.wrapStyle;if(e){const t=`-${e}px`,s=`margin-bottom: ${t}; margin-right: ${t};`;Array.isArray(this.wrapStyle)?(i=Object(o.toObject)(this.wrapStyle),i.marginRight=i.marginBottom=t):"string"==typeof this.wrapStyle?i+=s:i=s,i+=`width: calc(100% + ${e}px);height: calc(100% + ${e}px);`}else i+="width: 100%;height: 100%;";const s=t(this.tag,{class:["sino-scrollbar__view",this.viewClass],style:this.viewStyle,ref:"resize"},this.$slots.default),a=t("div",{ref:"wrap",style:i,on:{scroll:this.handleScroll},class:[this.wrapClass,"sino-scrollbar__wrap",e?"":"sino-scrollbar__wrap--hidden-default"]},[[s]]);let l;return this.native?l=[t("div",{ref:"wrap",class:[this.wrapClass,"sino-scrollbar__wrap"],style:i},[[s]])]:(l=[a],this.showHorizontalBar&&l.push(t(r.default,{attrs:{move:this.moveX,size:this.sizeWidth}})),this.showVerticalBar&&l.push(t(r.default,{attrs:{vertical:!0,move:this.moveY,size:this.sizeHeight}}))),t("div",{class:"sino-scrollbar"},l)},methods:{handleScroll(t){const e=this.wrap;this.moveY=100*e.scrollTop/e.clientHeight,this.moveX=100*e.scrollLeft/e.clientWidth,this.$emit("scroll",{scrollTop:t.target.scrollTop,scrollLeft:t.target.scrollLeft,e:t}),t.target.scrollTop+t.target.offsetHeight>=t.target.scrollHeight&&(clearTimeout(this.timer),this.timer=setTimeout(()=>{this.$emit("scrollBottom")},100))},update(){let t="",e="";const i=this.wrap;i&&(t=100*i.clientHeight/i.scrollHeight,e=100*i.clientWidth/i.scrollWidth,this.sizeHeight=t<100?t+"%":"",this.sizeWidth=e<100?e+"%":"")},resetToTop(){this.wrap.scrollTop=0},scrollToTop(t){this.wrap.scrollTop=t}},mounted(){this.native||(this.$nextTick(this.update),!this.noresize&&Object(s.addResizeListener)(this.$refs.resize,this.update))},beforeDestroy(){this.native||!this.noresize&&Object(s.removeResizeListener)(this.$refs.resize,this.update)}}},243:function(t,e,i){"use strict";i.r(e);var s=i(210),n={name:"VirtualList",props:{data:{type:Array,require:!0,default:function(){return[]}},itemHeight:{type:Number,default:30,require:!0},fixedHeight:{type:Boolean,default:!0},maxHeight:{type:Number,default:200},defaultUpdateToTop:{type:Boolean,default:!0},bufferCount:{type:Number,default:3}},data:()=>({containerHeight:200,virtualContentHeight:0,virtualRenderData:[],currentScrollTop:0}),components:{SinoScrollbar:s.default},watch:{data:{immediate:!0,handler:function(){this.virtualRenderData=[],this.virtualContentHeight=this.itemHeight*this.data.length,this.$nextTick(()=>{this.updateContainerHeight(),this.defaultUpdateToTop&&this.resetToTop(),this.update(this.currentScrollTop)})}}},computed:{virtualListContainerStyle:function(){return!0===this.fixedHeight?{height:"100%"}:{height:this.containerHeight+"px"}}},created(){},mounted(){},methods:{resetToTop(){this.currentScrollTop=0,this.$refs.scrollbarRef.resetToTop()},updateContainerHeight(){if(!0===this.fixedHeight)return void(this.containerHeight=this.$refs.containerRef.getBoundingClientRect().height);const t=this.itemHeight*this.data.length;t>this.maxHeight||0===t?this.containerHeight=this.maxHeight:this.containerHeight=t},update(t=0){this.$nextTick(()=>{const e=Math.ceil(this.containerHeight/this.itemHeight),i=Math.floor(t/this.itemHeight),s=i+e+this.bufferCount;this.virtualRenderData=this.data.slice(i,s),this.$refs.contentRef&&(this.$refs.contentRef.style.webkitTransform=`translate3d(0, ${i*this.itemHeight}px, 0)`)})},scrollResolve(t){const{scrollTop:e}=t;this.update(e),this.currentScrollTop=e,this.$emit("scroll",t)},resetToTopUpdate(){this.$nextTick(()=>{this.resetToTop(),this.update(0)})},scrollBottomResolve(){this.$emit("scrollBottom")}},beforeDestroy(){}},o=(i(349),i(9)),r=Object(o.a)(n,(function(){var t=this,e=t._self._c;return e("div",{ref:"containerRef",staticClass:"virtual-list",style:t.virtualListContainerStyle},[e("SinoScrollbar",{ref:"scrollbarRef",staticClass:"scrollbar",staticStyle:{height:"100%"},on:{scroll:t.scrollResolve,scrollBottom:t.scrollBottomResolve}},[e("div",{ref:"clientHeightRef",staticClass:"list-view-phantom",style:{height:t.virtualContentHeight+"px"}}),t._v(" "),t.data.length>0?e("ul",{ref:"contentRef",staticClass:"option-warp"},[t._l(t.virtualRenderData,(function(i,s){return e("li",{key:s,staticClass:"option",style:{height:t.itemHeight+"px"}},[t._t("default",null,{item:i,index:s})],2)})),t._v(" "),t._t("bottom")],2):e("no-data")],1)],1)}),[],!1,null,"686064ae",null);e.default=r.exports},247:function(t,e,i){"use strict";i.r(e);var s=i(243);s.default.install=function(t){t.component(s.default.name,s.default)},e.default=s.default},299:function(t,e,i){(e=i(3)(!1)).push([t.i,".sino-scrollbar__wrap {\n  overflow: scroll;\n  height: 100%;\n  width: 100%;\n}\n.sino-scrollbar {\n  overflow: hidden;\n  position: relative;\n}\n.sino-scrollbar__bar {\n  position: absolute;\n  right: 2px;\n  bottom: 2px;\n  z-index: 1;\n  border-radius: 4px;\n  opacity: 1;\n  transition: opacity 0.12s ease-out;\n}\n.sino-scrollbar__bar.is-horizontal {\n  height: 6px;\n  left: 2px;\n}\n.sino-scrollbar__bar.is-horizontal > div {\n  height: 100%;\n}\n.sino-scrollbar__bar.is-vertical {\n  width: 6px;\n  top: 2px;\n}\n.sino-scrollbar__bar.is-vertical > div {\n  width: 100%;\n}\n.sino-scrollbar__thumb {\n  position: relative;\n  display: block;\n  width: 0;\n  height: 0;\n  cursor: pointer;\n  border-radius: inherit;\n  background-color: rgba(180, 185, 210, 0.4);\n  transition: background-color 0.3s;\n}\n",""]),t.exports=e},319:function(t,e,i){var s=i(2),n=i(350);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[t.i,n,""]]);var o={insert:"head",singleton:!1};s(n,o);t.exports=n.locals||{}},349:function(t,e,i){"use strict";i(319)},350:function(t,e,i){(e=i(3)(!1)).push([t.i,".virtual-list[data-v-686064ae] .sino-scrollbar__view {\n  position: relative;\n}\n.virtual-list .list-view-phantom[data-v-686064ae] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  z-index: -1;\n}\n.virtual-list .option-warp[data-v-686064ae] {\n  margin-bottom: 0;\n}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,