(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{326:function(e,n,t){"use strict";function i(){return(i=Object.assign?Object.assign.bind():function(e){for(var n,t=1;t<arguments.length;t++)for(var i in n=arguments[t])Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i]);return e}).apply(this,arguments)}var o=["attrs","props","domProps"],l=["class","style","directives"],r=["on","nativeOn"],a=function(e,n){return function(){e&&e.apply(this,arguments),n&&n.apply(this,arguments)}};e.exports=function(e){return e.reduce((function(e,n){for(var t in n)if(e[t])if(-1!==o.indexOf(t))e[t]=i({},e[t],n[t]);else if(-1!==l.indexOf(t)){var s=e[t]instanceof Array?e[t]:[e[t]],c=n[t]instanceof Array?n[t]:[n[t]];e[t]=[].concat(s,c)}else if(-1!==r.indexOf(t))for(var p in n[t])if(e[t][p]){var d=e[t][p]instanceof Array?e[t][p]:[e[t][p]],u=n[t][p]instanceof Array?n[t][p]:[n[t][p]];e[t][p]=[].concat(d,u)}else e[t][p]=n[t][p];else if("hook"===t)for(var h in n[t])e[t][h]=e[t][h]?a(e[t][h],n[t][h]):n[t][h];else e[t]=n[t];else e[t]=n[t];return e}),{})}},363:function(e,n,t){var i=t(2),o=t(604);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var l={insert:"head",singleton:!1};i(o,l);e.exports=o.locals||{}},364:function(e,n,t){e.exports=function(e){var n={};function t(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(i,o,function(n){return e[n]}.bind(null,o));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/dist/",t(t.s=74)}({0:function(e,n,t){"use strict";function i(e,n,t,i,o,l,r,a){var s,c="function"==typeof e?e.options:e;if(n&&(c.render=n,c.staticRenderFns=t,c._compiled=!0),i&&(c.functional=!0),l&&(c._scopeId="data-v-"+l),r?(s=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},c._ssrRegister=s):o&&(s=a?function(){o.call(this,this.$root.$options.shadowRoot)}:o),s)if(c.functional){c._injectStyles=s;var p=c.render;c.render=function(e,n){return s.call(n),p(e,n)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,s):[s]}return{exports:e,options:c}}t.d(n,"a",(function(){return i}))},10:function(e,n){e.exports=t(383)},3:function(e,n){e.exports=t(19)},45:function(e,n){e.exports=t(605)},46:function(e,n){e.exports=t(613)},6:function(e,n){e.exports=t(366)},74:function(e,n,t){"use strict";t.r(n);var i=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ul",{staticClass:"el-pager",on:{click:e.onPagerClick}},[e.pageCount>0?t("li",{staticClass:"number",class:{active:1===e.currentPage,disabled:e.disabled}},[e._v("1")]):e._e(),e.showPrevMore?t("li",{staticClass:"el-icon more btn-quickprev",class:[e.quickprevIconClass,{disabled:e.disabled}],on:{mouseenter:function(n){e.onMouseenter("left")},mouseleave:function(n){e.quickprevIconClass="el-icon-more"}}}):e._e(),e._l(e.pagers,(function(n){return t("li",{key:n,staticClass:"number",class:{active:e.currentPage===n,disabled:e.disabled}},[e._v(e._s(n))])})),e.showNextMore?t("li",{staticClass:"el-icon more btn-quicknext",class:[e.quicknextIconClass,{disabled:e.disabled}],on:{mouseenter:function(n){e.onMouseenter("right")},mouseleave:function(n){e.quicknextIconClass="el-icon-more"}}}):e._e(),e.pageCount>1?t("li",{staticClass:"number",class:{active:e.currentPage===e.pageCount,disabled:e.disabled}},[e._v(e._s(e.pageCount))]):e._e()],2)};i._withStripped=!0;var o={name:"ElPager",props:{currentPage:Number,pageCount:Number,pagerCount:Number,disabled:Boolean},watch:{showPrevMore:function(e){e||(this.quickprevIconClass="el-icon-more")},showNextMore:function(e){e||(this.quicknextIconClass="el-icon-more")}},methods:{onPagerClick:function(e){var n=e.target;if("UL"!==n.tagName&&!this.disabled){var t=Number(e.target.textContent),i=this.pageCount,o=this.currentPage,l=this.pagerCount-2;-1!==n.className.indexOf("more")&&(-1!==n.className.indexOf("quickprev")?t=o-l:-1!==n.className.indexOf("quicknext")&&(t=o+l)),isNaN(t)||(t<1&&(t=1),t>i&&(t=i)),t!==o&&this.$emit("change",t)}},onMouseenter:function(e){this.disabled||("left"===e?this.quickprevIconClass="el-icon-d-arrow-left":this.quicknextIconClass="el-icon-d-arrow-right")}},computed:{pagers:function(){var e=this.pagerCount,n=(e-1)/2,t=Number(this.currentPage),i=Number(this.pageCount),o=!1,l=!1;i>e&&(t>e-n&&(o=!0),t<i-n&&(l=!0));var r=[];if(o&&!l)for(var a=i-(e-2);a<i;a++)r.push(a);else if(!o&&l)for(var s=2;s<e;s++)r.push(s);else if(o&&l)for(var c=Math.floor(e/2)-1,p=t-c;p<=t+c;p++)r.push(p);else for(var d=2;d<i;d++)r.push(d);return this.showPrevMore=o,this.showNextMore=l,r}},data:function(){return{current:null,showPrevMore:!1,showNextMore:!1,quicknextIconClass:"el-icon-more",quickprevIconClass:"el-icon-more"}}},l=t(0),r=Object(l.a)(o,i,[],!1,null,null,null);r.options.__file="packages/pagination/src/pager.vue";var a=r.exports,s=t(45),c=t.n(s),p=t(46),d=t.n(p),u=t(10),h=t.n(u),b=t(6),g=t.n(b),f=t(3),_={name:"ElPagination",props:{pageSize:{type:Number,default:10},small:Boolean,total:Number,pageCount:Number,pagerCount:{type:Number,validator:function(e){return(0|e)===e&&e>4&&e<22&&e%2==1},default:7},currentPage:{type:Number,default:1},layout:{default:"prev, pager, next, jumper, ->, total"},pageSizes:{type:Array,default:function(){return[10,20,30,40,50,100]}},popperClass:String,prevText:String,nextText:String,background:Boolean,disabled:Boolean,hideOnSinglePage:Boolean},data:function(){return{internalCurrentPage:1,internalPageSize:0,lastEmittedPage:-1,userChangePageSize:!1}},render:function(e){var n=this.layout;if(!n)return null;if(this.hideOnSinglePage&&(!this.internalPageCount||1===this.internalPageCount))return null;var t=e("div",{class:["el-pagination",{"is-background":this.background,"el-pagination--small":this.small}]}),i={prev:e("prev"),jumper:e("jumper"),pager:e("pager",{attrs:{currentPage:this.internalCurrentPage,pageCount:this.internalPageCount,pagerCount:this.pagerCount,disabled:this.disabled},on:{change:this.handleCurrentChange}}),next:e("next"),sizes:e("sizes",{attrs:{pageSizes:this.pageSizes}}),slot:e("slot",[this.$slots.default?this.$slots.default:""]),total:e("total")},o=n.split(",").map((function(e){return e.trim()})),l=e("div",{class:"el-pagination__rightwrapper"}),r=!1;return t.children=t.children||[],l.children=l.children||[],o.forEach((function(e){"->"!==e?r?l.children.push(i[e]):t.children.push(i[e]):r=!0})),r&&t.children.unshift(l),t},components:{Prev:{render:function(e){return e("button",{attrs:{type:"button",disabled:this.$parent.disabled||this.$parent.internalCurrentPage<=1},class:"btn-prev",on:{click:this.$parent.prev}},[this.$parent.prevText?e("span",[this.$parent.prevText]):e("i",{class:"el-icon el-icon-arrow-left"})])}},Next:{render:function(e){return e("button",{attrs:{type:"button",disabled:this.$parent.disabled||this.$parent.internalCurrentPage===this.$parent.internalPageCount||0===this.$parent.internalPageCount},class:"btn-next",on:{click:this.$parent.next}},[this.$parent.nextText?e("span",[this.$parent.nextText]):e("i",{class:"el-icon el-icon-arrow-right"})])}},Sizes:{mixins:[g.a],props:{pageSizes:Array},watch:{pageSizes:{immediate:!0,handler:function(e,n){Object(f.valueEquals)(e,n)||Array.isArray(e)&&(this.$parent.internalPageSize=e.indexOf(this.$parent.pageSize)>-1?this.$parent.pageSize:this.pageSizes[0])}}},render:function(e){var n=this;return e("span",{class:"el-pagination__sizes"},[e("el-select",{attrs:{value:this.$parent.internalPageSize,popperClass:this.$parent.popperClass||"",size:"mini",disabled:this.$parent.disabled},on:{input:this.handleChange}},[this.pageSizes.map((function(t){return e("el-option",{attrs:{value:t,label:t+n.t("el.pagination.pagesize")}})}))])])},components:{ElSelect:c.a,ElOption:d.a},methods:{handleChange:function(e){e!==this.$parent.internalPageSize&&(this.$parent.internalPageSize=e=parseInt(e,10),this.$parent.userChangePageSize=!0,this.$parent.$emit("update:pageSize",e),this.$parent.$emit("size-change",e))}}},Jumper:{mixins:[g.a],components:{ElInput:h.a},data:function(){return{userInput:null}},watch:{"$parent.internalCurrentPage":function(){this.userInput=null}},methods:{handleKeyup:function(e){var n=e.keyCode,t=e.target;13===n&&this.handleChange(t.value)},handleInput:function(e){this.userInput=e},handleChange:function(e){this.$parent.internalCurrentPage=this.$parent.getValidCurrentPage(e),this.$parent.emitChange(),this.userInput=null}},render:function(e){return e("span",{class:"el-pagination__jump"},[this.t("el.pagination.goto"),e("el-input",{class:"el-pagination__editor is-in-pagination",attrs:{min:1,max:this.$parent.internalPageCount,value:null!==this.userInput?this.userInput:this.$parent.internalCurrentPage,type:"number",disabled:this.$parent.disabled},nativeOn:{keyup:this.handleKeyup},on:{input:this.handleInput,change:this.handleChange}}),this.t("el.pagination.pageClassifier")])}},Total:{mixins:[g.a],render:function(e){return"number"==typeof this.$parent.total?e("span",{class:"el-pagination__total"},[this.t("el.pagination.total",{total:this.$parent.total})]):""}},Pager:a},methods:{handleCurrentChange:function(e){this.internalCurrentPage=this.getValidCurrentPage(e),this.userChangePageSize=!0,this.emitChange()},prev:function(){if(!this.disabled){var e=this.internalCurrentPage-1;this.internalCurrentPage=this.getValidCurrentPage(e),this.$emit("prev-click",this.internalCurrentPage),this.emitChange()}},next:function(){if(!this.disabled){var e=this.internalCurrentPage+1;this.internalCurrentPage=this.getValidCurrentPage(e),this.$emit("next-click",this.internalCurrentPage),this.emitChange()}},getValidCurrentPage:function(e){e=parseInt(e,10);var n=void 0;return"number"==typeof this.internalPageCount?e<1?n=1:e>this.internalPageCount&&(n=this.internalPageCount):(isNaN(e)||e<1)&&(n=1),(void 0===n&&isNaN(e)||0===n)&&(n=1),void 0===n?e:n},emitChange:function(){var e=this;this.$nextTick((function(){(e.internalCurrentPage!==e.lastEmittedPage||e.userChangePageSize)&&(e.$emit("current-change",e.internalCurrentPage),e.lastEmittedPage=e.internalCurrentPage,e.userChangePageSize=!1)}))}},computed:{internalPageCount:function(){return"number"==typeof this.total?Math.max(1,Math.ceil(this.total/this.internalPageSize)):"number"==typeof this.pageCount?Math.max(1,this.pageCount):null}},watch:{currentPage:{immediate:!0,handler:function(e){this.internalCurrentPage=this.getValidCurrentPage(e)}},pageSize:{immediate:!0,handler:function(e){this.internalPageSize=isNaN(e)?10:e}},internalCurrentPage:{immediate:!0,handler:function(e){this.$emit("update:currentPage",e),this.lastEmittedPage=-1}},internalPageCount:function(e){var n=this.internalCurrentPage;e>0&&0===n?this.internalCurrentPage=1:n>e&&(this.internalCurrentPage=0===e?1:e,this.userChangePageSize&&this.emitChange()),this.userChangePageSize=!1}},install:function(e){e.component(_.name,_)}};n.default=_}})},367:function(e,n,t){var i=t(2),o=t(614);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var l={insert:"head",singleton:!1};i(o,l);e.exports=o.locals||{}},383:function(e,n,t){e.exports=function(e){var n={};function t(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(i,o,function(n){return e[n]}.bind(null,o));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/dist/",t(t.s=75)}({0:function(e,n,t){"use strict";function i(e,n,t,i,o,l,r,a){var s,c="function"==typeof e?e.options:e;if(n&&(c.render=n,c.staticRenderFns=t,c._compiled=!0),i&&(c.functional=!0),l&&(c._scopeId="data-v-"+l),r?(s=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},c._ssrRegister=s):o&&(s=a?function(){o.call(this,this.$root.$options.shadowRoot)}:o),s)if(c.functional){c._injectStyles=s;var p=c.render;c.render=function(e,n){return s.call(n),p(e,n)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,s):[s]}return{exports:e,options:c}}t.d(n,"a",(function(){return i}))},11:function(e,n){e.exports=t(102)},21:function(e,n){e.exports=t(384)},4:function(e,n){e.exports=t(25)},75:function(e,n,t){"use strict";t.r(n);var i=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{class:["textarea"===e.type?"el-textarea":"el-input",e.inputSize?"el-input--"+e.inputSize:"",{"is-disabled":e.inputDisabled,"is-exceed":e.inputExceed,"el-input-group":e.$slots.prepend||e.$slots.append,"el-input-group--append":e.$slots.append,"el-input-group--prepend":e.$slots.prepend,"el-input--prefix":e.$slots.prefix||e.prefixIcon,"el-input--suffix":e.$slots.suffix||e.suffixIcon||e.clearable||e.showPassword}],on:{mouseenter:function(n){e.hovering=!0},mouseleave:function(n){e.hovering=!1}}},["textarea"!==e.type?[e.$slots.prepend?t("div",{staticClass:"el-input-group__prepend"},[e._t("prepend")],2):e._e(),"textarea"!==e.type?t("input",e._b({ref:"input",staticClass:"el-input__inner",attrs:{tabindex:e.tabindex,type:e.showPassword?e.passwordVisible?"text":"password":e.type,disabled:e.inputDisabled,readonly:e.readonly,autocomplete:e.autoComplete||e.autocomplete,"aria-label":e.label},on:{compositionstart:e.handleCompositionStart,compositionupdate:e.handleCompositionUpdate,compositionend:e.handleCompositionEnd,input:e.handleInput,focus:e.handleFocus,blur:e.handleBlur,change:e.handleChange}},"input",e.$attrs,!1)):e._e(),e.$slots.prefix||e.prefixIcon?t("span",{staticClass:"el-input__prefix"},[e._t("prefix"),e.prefixIcon?t("i",{staticClass:"el-input__icon",class:e.prefixIcon}):e._e()],2):e._e(),e.getSuffixVisible()?t("span",{staticClass:"el-input__suffix"},[t("span",{staticClass:"el-input__suffix-inner"},[e.showClear&&e.showPwdVisible&&e.isWordLimitVisible?e._e():[e._t("suffix"),e.suffixIcon?t("i",{staticClass:"el-input__icon",class:e.suffixIcon}):e._e()],e.showClear?t("i",{staticClass:"el-input__icon el-icon-circle-close el-input__clear",on:{mousedown:function(e){e.preventDefault()},click:e.clear}}):e._e(),e.showPwdVisible?t("i",{staticClass:"el-input__icon el-icon-view el-input__clear",on:{click:e.handlePasswordVisible}}):e._e(),e.isWordLimitVisible?t("span",{staticClass:"el-input__count"},[t("span",{staticClass:"el-input__count-inner"},[e._v("\n            "+e._s(e.textLength)+"/"+e._s(e.upperLimit)+"\n          ")])]):e._e()],2),e.validateState?t("i",{staticClass:"el-input__icon",class:["el-input__validateIcon",e.validateIcon]}):e._e()]):e._e(),e.$slots.append?t("div",{staticClass:"el-input-group__append"},[e._t("append")],2):e._e()]:t("textarea",e._b({ref:"textarea",staticClass:"el-textarea__inner",style:e.textareaStyle,attrs:{tabindex:e.tabindex,disabled:e.inputDisabled,readonly:e.readonly,autocomplete:e.autoComplete||e.autocomplete,"aria-label":e.label},on:{compositionstart:e.handleCompositionStart,compositionupdate:e.handleCompositionUpdate,compositionend:e.handleCompositionEnd,input:e.handleInput,focus:e.handleFocus,blur:e.handleBlur,change:e.handleChange}},"textarea",e.$attrs,!1)),e.isWordLimitVisible&&"textarea"===e.type?t("span",{staticClass:"el-input__count"},[e._v(e._s(e.textLength)+"/"+e._s(e.upperLimit))]):e._e()],2)};i._withStripped=!0;var o=t(4),l=t.n(o),r=t(11),a=t.n(r),s=void 0,c="\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n",p=["letter-spacing","line-height","padding-top","padding-bottom","font-family","font-weight","font-size","text-rendering","text-transform","width","text-indent","padding-left","padding-right","border-width","box-sizing"];function d(e){var n=window.getComputedStyle(e),t=n.getPropertyValue("box-sizing"),i=parseFloat(n.getPropertyValue("padding-bottom"))+parseFloat(n.getPropertyValue("padding-top")),o=parseFloat(n.getPropertyValue("border-bottom-width"))+parseFloat(n.getPropertyValue("border-top-width"));return{contextStyle:p.map((function(e){return e+":"+n.getPropertyValue(e)})).join(";"),paddingSize:i,borderSize:o,boxSizing:t}}function u(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;s||(s=document.createElement("textarea"),document.body.appendChild(s));var i=d(e),o=i.paddingSize,l=i.borderSize,r=i.boxSizing,a=i.contextStyle;s.setAttribute("style",a+";"+c),s.value=e.value||e.placeholder||"";var p=s.scrollHeight,u={};"border-box"===r?p+=l:"content-box"===r&&(p-=o),s.value="";var h=s.scrollHeight-o;if(null!==n){var b=h*n;"border-box"===r&&(b=b+o+l),p=Math.max(b,p),u.minHeight=b+"px"}if(null!==t){var g=h*t;"border-box"===r&&(g=g+o+l),p=Math.min(g,p)}return u.height=p+"px",s.parentNode&&s.parentNode.removeChild(s),s=null,u}var h=t(9),b=t.n(h),g=t(21),f={name:"ElInput",componentName:"ElInput",mixins:[l.a,a.a],inheritAttrs:!1,inject:{elForm:{default:""},elFormItem:{default:""}},data:function(){return{textareaCalcStyle:{},hovering:!1,focused:!1,isComposing:!1,passwordVisible:!1}},props:{value:[String,Number],size:String,resize:String,form:String,disabled:Boolean,readonly:Boolean,type:{type:String,default:"text"},autosize:{type:[Boolean,Object],default:!1},autocomplete:{type:String,default:"off"},autoComplete:{type:String,validator:function(e){return!0}},validateEvent:{type:Boolean,default:!0},suffixIcon:String,prefixIcon:String,label:String,clearable:{type:Boolean,default:!1},showPassword:{type:Boolean,default:!1},showWordLimit:{type:Boolean,default:!1},tabindex:String},computed:{_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},validateState:function(){return this.elFormItem?this.elFormItem.validateState:""},needStatusIcon:function(){return!!this.elForm&&this.elForm.statusIcon},validateIcon:function(){return{validating:"el-icon-loading",success:"el-icon-circle-check",error:"el-icon-circle-close"}[this.validateState]},textareaStyle:function(){return b()({},this.textareaCalcStyle,{resize:this.resize})},inputSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},inputDisabled:function(){return this.disabled||(this.elForm||{}).disabled},nativeInputValue:function(){return null===this.value||void 0===this.value?"":String(this.value)},showClear:function(){return this.clearable&&!this.inputDisabled&&!this.readonly&&this.nativeInputValue&&(this.focused||this.hovering)},showPwdVisible:function(){return this.showPassword&&!this.inputDisabled&&!this.readonly&&(!!this.nativeInputValue||this.focused)},isWordLimitVisible:function(){return this.showWordLimit&&this.$attrs.maxlength&&("text"===this.type||"textarea"===this.type)&&!this.inputDisabled&&!this.readonly&&!this.showPassword},upperLimit:function(){return this.$attrs.maxlength},textLength:function(){return"number"==typeof this.value?String(this.value).length:(this.value||"").length},inputExceed:function(){return this.isWordLimitVisible&&this.textLength>this.upperLimit}},watch:{value:function(e){this.$nextTick(this.resizeTextarea),this.validateEvent&&this.dispatch("ElFormItem","el.form.change",[e])},nativeInputValue:function(){this.setNativeInputValue()},type:function(){var e=this;this.$nextTick((function(){e.setNativeInputValue(),e.resizeTextarea(),e.updateIconOffset()}))}},methods:{focus:function(){this.getInput().focus()},blur:function(){this.getInput().blur()},getMigratingConfig:function(){return{props:{icon:"icon is removed, use suffix-icon / prefix-icon instead.","on-icon-click":"on-icon-click is removed."},events:{click:"click is removed."}}},handleBlur:function(e){this.focused=!1,this.$emit("blur",e),this.validateEvent&&this.dispatch("ElFormItem","el.form.blur",[this.value])},select:function(){this.getInput().select()},resizeTextarea:function(){if(!this.$isServer){var e=this.autosize;if("textarea"===this.type)if(e){var n=e.minRows,t=e.maxRows;this.textareaCalcStyle=u(this.$refs.textarea,n,t)}else this.textareaCalcStyle={minHeight:u(this.$refs.textarea).minHeight}}},setNativeInputValue:function(){var e=this.getInput();e&&e.value!==this.nativeInputValue&&(e.value=this.nativeInputValue)},handleFocus:function(e){this.focused=!0,this.$emit("focus",e)},handleCompositionStart:function(e){this.$emit("compositionstart",e),this.isComposing=!0},handleCompositionUpdate:function(e){this.$emit("compositionupdate",e);var n=e.target.value,t=n[n.length-1]||"";this.isComposing=!Object(g.isKorean)(t)},handleCompositionEnd:function(e){this.$emit("compositionend",e),this.isComposing&&(this.isComposing=!1,this.handleInput(e))},handleInput:function(e){this.isComposing||e.target.value!==this.nativeInputValue&&(this.$emit("input",e.target.value),this.$nextTick(this.setNativeInputValue))},handleChange:function(e){this.$emit("change",e.target.value)},calcIconOffset:function(e){var n=[].slice.call(this.$el.querySelectorAll(".el-input__"+e)||[]);if(n.length){for(var t=null,i=0;i<n.length;i++)if(n[i].parentNode===this.$el){t=n[i];break}if(t){var o={suffix:"append",prefix:"prepend"}[e];this.$slots[o]?t.style.transform="translateX("+("suffix"===e?"-":"")+this.$el.querySelector(".el-input-group__"+o).offsetWidth+"px)":t.removeAttribute("style")}}},updateIconOffset:function(){this.calcIconOffset("prefix"),this.calcIconOffset("suffix")},clear:function(){this.$emit("input",""),this.$emit("change",""),this.$emit("clear")},handlePasswordVisible:function(){var e=this;this.passwordVisible=!this.passwordVisible,this.$nextTick((function(){e.focus()}))},getInput:function(){return this.$refs.input||this.$refs.textarea},getSuffixVisible:function(){return this.$slots.suffix||this.suffixIcon||this.showClear||this.showPassword||this.isWordLimitVisible||this.validateState&&this.needStatusIcon}},created:function(){this.$on("inputSelect",this.select)},mounted:function(){this.setNativeInputValue(),this.resizeTextarea(),this.updateIconOffset()},updated:function(){this.$nextTick(this.updateIconOffset)}},_=t(0),x=Object(_.a)(f,i,[],!1,null,null,null);x.options.__file="packages/input/src/input.vue";var m=x.exports;m.install=function(e){e.component(m.name,m)};n.default=m},9:function(e,n){e.exports=t(57)}})},384:function(e,n,t){"use strict";n.__esModule=!0,n.isDef=function(e){return null!=e},n.isKorean=function(e){return/([(\uAC00-\uD7AF)|(\u3130-\u318F)])+/gi.test(e)}},604:function(e,n,t){(n=t(3)(!1)).push([e.i,'.el-input__inner,\n.el-textarea__inner {\n  -webkit-transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n}\n.el-popper .popper__arrow,\n.el-popper .popper__arrow::after {\n  position: absolute;\n  display: block;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid;\n}\n.el-popper .popper__arrow {\n  border-width: 6px;\n  filter: drop-shadow(0 2px 12px rgba(0, 0, 0, 0.03));\n}\n.el-popper .popper__arrow::after {\n  content: " ";\n  border-width: 6px;\n}\n.el-popper[x-placement^=top] {\n  margin-bottom: 12px;\n}\n.el-popper[x-placement^=top] .popper__arrow {\n  bottom: -6px;\n  left: 50%;\n  margin-right: 3px;\n  border-top-color: #EBEEF5;\n  border-bottom-width: 0;\n}\n.el-popper[x-placement^=top] .popper__arrow::after {\n  bottom: 1px;\n  margin-left: -6px;\n  border-top-color: #FFF;\n  border-bottom-width: 0;\n}\n.el-popper[x-placement^=bottom] {\n  margin-top: 12px;\n}\n.el-popper[x-placement^=bottom] .popper__arrow {\n  top: -6px;\n  left: 50%;\n  margin-right: 3px;\n  border-top-width: 0;\n  border-bottom-color: #EBEEF5;\n}\n.el-popper[x-placement^=bottom] .popper__arrow::after {\n  top: 1px;\n  margin-left: -6px;\n  border-top-width: 0;\n  border-bottom-color: #FFF;\n}\n.el-popper[x-placement^=right] {\n  margin-left: 12px;\n}\n.el-popper[x-placement^=right] .popper__arrow {\n  top: 50%;\n  left: -6px;\n  margin-bottom: 3px;\n  border-right-color: #EBEEF5;\n  border-left-width: 0;\n}\n.el-popper[x-placement^=right] .popper__arrow::after {\n  bottom: -6px;\n  left: 1px;\n  border-right-color: #FFF;\n  border-left-width: 0;\n}\n.el-popper[x-placement^=left] {\n  margin-right: 12px;\n}\n.el-popper[x-placement^=left] .popper__arrow {\n  top: 50%;\n  right: -6px;\n  margin-bottom: 3px;\n  border-right-width: 0;\n  border-left-color: #EBEEF5;\n}\n.el-popper[x-placement^=left] .popper__arrow::after {\n  right: 1px;\n  bottom: -6px;\n  margin-left: -6px;\n  border-right-width: 0;\n  border-left-color: #FFF;\n}\n.el-select-dropdown {\n  position: absolute;\n  z-index: 1001;\n  border: 1px solid #E4E7ED;\n  border-radius: 4px;\n  background-color: #FFF;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  margin: 5px 0;\n}\n.el-input__inner,\n.el-select-dropdown__list,\n.el-tag,\n.el-textarea__inner {\n  -webkit-box-sizing: border-box;\n}\n.el-select-dropdown.is-multiple .el-select-dropdown__item {\n  padding-right: 40px;\n}\n.el-select-dropdown.is-multiple .el-select-dropdown__item.selected {\n  color: #409EFF;\n  background-color: #FFF;\n}\n.el-select-dropdown.is-multiple .el-select-dropdown__item.selected.hover {\n  background-color: #F5F7FA;\n}\n.el-select-dropdown.is-multiple .el-select-dropdown__item.selected::after {\n  position: absolute;\n  right: 20px;\n  font-family: element-icons;\n  content: "\\e6da";\n  font-size: 12px;\n  font-weight: 700;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.el-select-dropdown .el-scrollbar.is-empty .el-select-dropdown__list {\n  padding: 0;\n}\n.el-select-dropdown__empty {\n  padding: 10px 0;\n  margin: 0;\n  text-align: center;\n  color: #999;\n  font-size: 14px;\n}\n.el-select-dropdown__wrap {\n  max-height: 274px;\n}\n.el-select-dropdown__list {\n  list-style: none;\n  padding: 6px 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n.el-textarea {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  vertical-align: bottom;\n  font-size: 14px;\n}\n.el-textarea__inner {\n  display: block;\n  resize: vertical;\n  padding: 5px 15px;\n  line-height: 1.5;\n  box-sizing: border-box;\n  width: 100%;\n  font-size: inherit;\n  color: #606266;\n  background-color: #FFF;\n  background-image: none;\n  border: 1px solid #DCDFE6;\n  border-radius: 4px;\n  transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n}\n.el-textarea__inner::-moz-placeholder {\n  color: #C0C4CC;\n}\n.el-textarea__inner::placeholder {\n  color: #C0C4CC;\n}\n.el-textarea__inner:hover {\n  border-color: #C0C4CC;\n}\n.el-textarea__inner:focus {\n  outline: 0;\n  border-color: #409EFF;\n}\n.el-textarea .el-input__count {\n  color: #909399;\n  background: #FFF;\n  position: absolute;\n  font-size: 12px;\n  bottom: 5px;\n  right: 10px;\n}\n.el-textarea.is-disabled .el-textarea__inner {\n  background-color: #F5F7FA;\n  border-color: #E4E7ED;\n  color: #C0C4CC;\n  cursor: not-allowed;\n}\n.el-textarea.is-disabled .el-textarea__inner::-moz-placeholder {\n  color: #C0C4CC;\n}\n.el-textarea.is-disabled .el-textarea__inner::placeholder {\n  color: #C0C4CC;\n}\n.el-textarea.is-exceed .el-textarea__inner {\n  border-color: #F56C6C;\n}\n.el-textarea.is-exceed .el-input__count {\n  color: #F56C6C;\n}\n.el-input {\n  position: relative;\n  font-size: 14px;\n  display: inline-block;\n  width: 100%;\n}\n.el-input::-webkit-scrollbar {\n  z-index: 11;\n  width: 6px;\n}\n.el-input::-webkit-scrollbar:horizontal {\n  height: 6px;\n}\n.el-input::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  width: 6px;\n  background: #b4bccc;\n}\n.el-input::-webkit-scrollbar-corner {\n  background: #fff;\n}\n.el-input::-webkit-scrollbar-track {\n  background: #fff;\n}\n.el-input::-webkit-scrollbar-track-piece {\n  background: #fff;\n  width: 6px;\n}\n.el-input__inner,\n.el-select-dropdown__item.is-disabled:hover {\n  background-color: #FFF;\n}\n.el-input .el-input__clear {\n  color: #C0C4CC;\n  font-size: 14px;\n  cursor: pointer;\n  transition: color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n}\n.el-input .el-input__clear:hover {\n  color: #909399;\n}\n.el-input .el-input__count {\n  height: 100%;\n  display: inline-flex;\n  align-items: center;\n  color: #909399;\n  font-size: 12px;\n}\n.el-input .el-input__count .el-input__count-inner {\n  background: #FFF;\n  line-height: initial;\n  display: inline-block;\n  padding: 0 5px;\n}\n.el-input__inner {\n  -webkit-appearance: none;\n  background-image: none;\n  border-radius: 4px;\n  border: 1px solid #DCDFE6;\n  box-sizing: border-box;\n  color: #606266;\n  display: inline-block;\n  font-size: inherit;\n  height: 40px;\n  line-height: 40px;\n  outline: 0;\n  padding: 0 15px;\n  transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n  width: 100%;\n}\n.el-input__inner:hover,\n.el-select:hover .el-input__inner {\n  border-color: #C0C4CC;\n}\n.el-input__prefix,\n.el-input__suffix {\n  position: absolute;\n  top: 0;\n  -webkit-transition: all 0.3s;\n  height: 100%;\n  color: #C0C4CC;\n  text-align: center;\n}\n.el-input__inner::-ms-reveal {\n  display: none;\n}\n.el-input__inner::-moz-placeholder {\n  color: #C0C4CC;\n}\n.el-input__inner::placeholder {\n  color: #C0C4CC;\n}\n.el-input.is-active .el-input__inner,\n.el-input__inner:focus {\n  border-color: #409EFF;\n  outline: 0;\n}\n.el-input__suffix {\n  right: 5px;\n  transition: all 0.3s;\n  pointer-events: none;\n}\n.el-input__suffix-inner {\n  pointer-events: all;\n}\n.el-input__prefix {\n  left: 5px;\n  transition: all 0.3s;\n}\n.el-input__icon {\n  height: 100%;\n  width: 25px;\n  text-align: center;\n  transition: all 0.3s;\n  line-height: 40px;\n}\n.el-input__icon:after {\n  content: \'\';\n  height: 100%;\n  width: 0;\n  display: inline-block;\n  vertical-align: middle;\n}\n.el-input__validateIcon {\n  pointer-events: none;\n}\n.el-input.is-disabled .el-input__inner {\n  background-color: #F5F7FA;\n  border-color: #E4E7ED;\n  color: #C0C4CC;\n  cursor: not-allowed;\n}\n.el-input.is-disabled .el-input__inner::-moz-placeholder {\n  color: #C0C4CC;\n}\n.el-input.is-disabled .el-input__inner::placeholder {\n  color: #C0C4CC;\n}\n.el-input.is-disabled .el-input__icon {\n  cursor: not-allowed;\n}\n.el-input.is-exceed .el-input__inner {\n  border-color: #F56C6C;\n}\n.el-input.is-exceed .el-input__suffix .el-input__count {\n  color: #F56C6C;\n}\n.el-input--suffix .el-input__inner {\n  padding-right: 30px;\n}\n.el-input--prefix .el-input__inner {\n  padding-left: 30px;\n}\n.el-input--medium {\n  font-size: 14px;\n}\n.el-input--medium .el-input__inner {\n  height: 36px;\n  line-height: 36px;\n}\n.el-input--medium .el-input__icon {\n  line-height: 36px;\n}\n.el-input--small {\n  font-size: 13px;\n}\n.el-input--small .el-input__inner {\n  height: 32px;\n  line-height: 32px;\n}\n.el-input--small .el-input__icon {\n  line-height: 32px;\n}\n.el-input--mini {\n  font-size: 12px;\n}\n.el-input--mini .el-input__inner {\n  height: 28px;\n  line-height: 28px;\n}\n.el-input--mini .el-input__icon {\n  line-height: 28px;\n}\n.el-input-group {\n  line-height: normal;\n  display: inline-table;\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n}\n.el-input-group > .el-input__inner {\n  vertical-align: middle;\n  display: table-cell;\n}\n.el-input-group__append,\n.el-input-group__prepend {\n  background-color: #F5F7FA;\n  color: #909399;\n  vertical-align: middle;\n  display: table-cell;\n  position: relative;\n  border: 1px solid #DCDFE6;\n  border-radius: 4px;\n  padding: 0 20px;\n  width: 1px;\n  white-space: nowrap;\n}\n.el-input-group--prepend .el-input__inner,\n.el-input-group__append {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n.el-input-group--append .el-input__inner,\n.el-input-group__prepend {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.el-input-group__append:focus,\n.el-input-group__prepend:focus {\n  outline: 0;\n}\n.el-input-group__append .el-button,\n.el-input-group__append .el-select,\n.el-input-group__prepend .el-button,\n.el-input-group__prepend .el-select {\n  display: inline-block;\n  margin: -10px -20px;\n}\n.el-input-group__append button.el-button,\n.el-input-group__append div.el-select .el-input__inner,\n.el-input-group__append div.el-select:hover .el-input__inner,\n.el-input-group__prepend button.el-button,\n.el-input-group__prepend div.el-select .el-input__inner,\n.el-input-group__prepend div.el-select:hover .el-input__inner {\n  border-color: transparent;\n  background-color: transparent;\n  color: inherit;\n  border-top: 0;\n  border-bottom: 0;\n}\n.el-input-group__append .el-button,\n.el-input-group__append .el-input,\n.el-input-group__prepend .el-button,\n.el-input-group__prepend .el-input {\n  font-size: inherit;\n}\n.el-input-group__prepend {\n  border-right: 0;\n}\n.el-input-group__append {\n  border-left: 0;\n}\n.el-input-group--append .el-select .el-input.is-focus .el-input__inner,\n.el-input-group--prepend .el-select .el-input.is-focus .el-input__inner {\n  border-color: transparent;\n}\n.el-input__inner::-ms-clear {\n  display: none;\n  width: 0;\n  height: 0;\n}\n.el-tag {\n  background-color: #ecf5ff;\n  border-color: #d9ecff;\n  display: inline-block;\n  height: 32px;\n  padding: 0 10px;\n  line-height: 30px;\n  font-size: 12px;\n  color: #409EFF;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 4px;\n  box-sizing: border-box;\n  white-space: nowrap;\n}\n.el-tag.is-hit {\n  border-color: #409EFF;\n}\n.el-tag .el-tag__close {\n  color: #409eff;\n}\n.el-tag .el-tag__close:hover {\n  color: #FFF;\n  background-color: #409eff;\n}\n.el-tag.el-tag--info {\n  background-color: #f4f4f5;\n  border-color: #e9e9eb;\n  color: #909399;\n}\n.el-tag.el-tag--info.is-hit {\n  border-color: #909399;\n}\n.el-tag.el-tag--info .el-tag__close {\n  color: #909399;\n}\n.el-tag.el-tag--info .el-tag__close:hover {\n  color: #FFF;\n  background-color: #909399;\n}\n.el-tag.el-tag--success {\n  background-color: #f0f9eb;\n  border-color: #e1f3d8;\n  color: #67c23a;\n}\n.el-tag.el-tag--success.is-hit {\n  border-color: #67C23A;\n}\n.el-tag.el-tag--success .el-tag__close {\n  color: #67c23a;\n}\n.el-tag.el-tag--success .el-tag__close:hover {\n  color: #FFF;\n  background-color: #67c23a;\n}\n.el-tag.el-tag--warning {\n  background-color: #fdf6ec;\n  border-color: #faecd8;\n  color: #e6a23c;\n}\n.el-tag.el-tag--warning.is-hit {\n  border-color: #E6A23C;\n}\n.el-tag.el-tag--warning .el-tag__close {\n  color: #e6a23c;\n}\n.el-tag.el-tag--warning .el-tag__close:hover {\n  color: #FFF;\n  background-color: #e6a23c;\n}\n.el-tag.el-tag--danger {\n  background-color: #fef0f0;\n  border-color: #fde2e2;\n  color: #f56c6c;\n}\n.el-tag.el-tag--danger.is-hit {\n  border-color: #F56C6C;\n}\n.el-tag.el-tag--danger .el-tag__close {\n  color: #f56c6c;\n}\n.el-tag.el-tag--danger .el-tag__close:hover {\n  color: #FFF;\n  background-color: #f56c6c;\n}\n.el-tag .el-icon-close {\n  border-radius: 50%;\n  text-align: center;\n  position: relative;\n  cursor: pointer;\n  font-size: 12px;\n  height: 16px;\n  width: 16px;\n  line-height: 16px;\n  vertical-align: middle;\n  top: -1px;\n  right: -5px;\n}\n.el-tag .el-icon-close::before {\n  display: block;\n}\n.el-tag--dark {\n  background-color: #409eff;\n  border-color: #409eff;\n  color: #fff;\n}\n.el-tag--dark.is-hit {\n  border-color: #409EFF;\n}\n.el-tag--dark .el-tag__close {\n  color: #fff;\n}\n.el-tag--dark .el-tag__close:hover {\n  color: #FFF;\n  background-color: #66b1ff;\n}\n.el-tag--dark.el-tag--info {\n  background-color: #909399;\n  border-color: #909399;\n  color: #fff;\n}\n.el-tag--dark.el-tag--info.is-hit {\n  border-color: #909399;\n}\n.el-tag--dark.el-tag--info .el-tag__close {\n  color: #fff;\n}\n.el-tag--dark.el-tag--info .el-tag__close:hover {\n  color: #FFF;\n  background-color: #a6a9ad;\n}\n.el-tag--dark.el-tag--success {\n  background-color: #67c23a;\n  border-color: #67c23a;\n  color: #fff;\n}\n.el-tag--dark.el-tag--success.is-hit {\n  border-color: #67C23A;\n}\n.el-tag--dark.el-tag--success .el-tag__close {\n  color: #fff;\n}\n.el-tag--dark.el-tag--success .el-tag__close:hover {\n  color: #FFF;\n  background-color: #85ce61;\n}\n.el-tag--dark.el-tag--warning {\n  background-color: #e6a23c;\n  border-color: #e6a23c;\n  color: #fff;\n}\n.el-tag--dark.el-tag--warning.is-hit {\n  border-color: #E6A23C;\n}\n.el-tag--dark.el-tag--warning .el-tag__close {\n  color: #fff;\n}\n.el-tag--dark.el-tag--warning .el-tag__close:hover {\n  color: #FFF;\n  background-color: #ebb563;\n}\n.el-tag--dark.el-tag--danger {\n  background-color: #f56c6c;\n  border-color: #f56c6c;\n  color: #fff;\n}\n.el-tag--dark.el-tag--danger.is-hit {\n  border-color: #F56C6C;\n}\n.el-tag--dark.el-tag--danger .el-tag__close {\n  color: #fff;\n}\n.el-tag--dark.el-tag--danger .el-tag__close:hover {\n  color: #FFF;\n  background-color: #f78989;\n}\n.el-tag--plain {\n  background-color: #fff;\n  border-color: #b3d8ff;\n  color: #409eff;\n}\n.el-tag--plain.is-hit {\n  border-color: #409EFF;\n}\n.el-tag--plain .el-tag__close {\n  color: #409eff;\n}\n.el-tag--plain .el-tag__close:hover {\n  color: #FFF;\n  background-color: #409eff;\n}\n.el-tag--plain.el-tag--info {\n  background-color: #fff;\n  border-color: #d3d4d6;\n  color: #909399;\n}\n.el-tag--plain.el-tag--info.is-hit {\n  border-color: #909399;\n}\n.el-tag--plain.el-tag--info .el-tag__close {\n  color: #909399;\n}\n.el-tag--plain.el-tag--info .el-tag__close:hover {\n  color: #FFF;\n  background-color: #909399;\n}\n.el-tag--plain.el-tag--success {\n  background-color: #fff;\n  border-color: #c2e7b0;\n  color: #67c23a;\n}\n.el-tag--plain.el-tag--success.is-hit {\n  border-color: #67C23A;\n}\n.el-tag--plain.el-tag--success .el-tag__close {\n  color: #67c23a;\n}\n.el-tag--plain.el-tag--success .el-tag__close:hover {\n  color: #FFF;\n  background-color: #67c23a;\n}\n.el-tag--plain.el-tag--warning {\n  background-color: #fff;\n  border-color: #f5dab1;\n  color: #e6a23c;\n}\n.el-tag--plain.el-tag--warning.is-hit {\n  border-color: #E6A23C;\n}\n.el-tag--plain.el-tag--warning .el-tag__close {\n  color: #e6a23c;\n}\n.el-tag--plain.el-tag--warning .el-tag__close:hover {\n  color: #FFF;\n  background-color: #e6a23c;\n}\n.el-tag--plain.el-tag--danger {\n  background-color: #fff;\n  border-color: #fbc4c4;\n  color: #f56c6c;\n}\n.el-tag--plain.el-tag--danger.is-hit {\n  border-color: #F56C6C;\n}\n.el-tag--plain.el-tag--danger .el-tag__close {\n  color: #f56c6c;\n}\n.el-tag--plain.el-tag--danger .el-tag__close:hover {\n  color: #FFF;\n  background-color: #f56c6c;\n}\n.el-tag--medium {\n  height: 28px;\n  line-height: 26px;\n}\n.el-tag--medium .el-icon-close {\n  transform: scale(0.8);\n}\n.el-tag--small {\n  height: 24px;\n  padding: 0 8px;\n  line-height: 22px;\n}\n.el-tag--small .el-icon-close {\n  transform: scale(0.8);\n}\n.el-tag--mini {\n  height: 20px;\n  padding: 0 5px;\n  line-height: 19px;\n}\n.el-tag--mini .el-icon-close {\n  margin-left: -3px;\n  transform: scale(0.7);\n}\n.el-select-dropdown__item {\n  font-size: 14px;\n  padding: 0 20px;\n  position: relative;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: #606266;\n  height: 34px;\n  line-height: 34px;\n  box-sizing: border-box;\n  cursor: pointer;\n}\n.el-select-dropdown__item.is-disabled {\n  color: #C0C4CC;\n  cursor: not-allowed;\n}\n.el-select-dropdown__item.hover,\n.el-select-dropdown__item:hover {\n  background-color: #F5F7FA;\n}\n.el-select-dropdown__item.selected {\n  color: #409EFF;\n  font-weight: 700;\n}\n.el-select-group {\n  margin: 0;\n  padding: 0;\n}\n.el-select-group__wrap {\n  position: relative;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n.el-select-group__wrap:not(:last-of-type) {\n  padding-bottom: 24px;\n}\n.el-select-group__wrap:not(:last-of-type)::after {\n  content: \'\';\n  position: absolute;\n  display: block;\n  left: 20px;\n  right: 20px;\n  bottom: 12px;\n  height: 1px;\n  background: #E4E7ED;\n}\n.el-select-group__title {\n  padding-left: 20px;\n  font-size: 12px;\n  color: #909399;\n  line-height: 30px;\n}\n.el-select-group .el-select-dropdown__item {\n  padding-left: 20px;\n}\n.el-scrollbar {\n  overflow: hidden;\n  position: relative;\n}\n.el-scrollbar:active > .el-scrollbar__bar,\n.el-scrollbar:focus > .el-scrollbar__bar,\n.el-scrollbar:hover > .el-scrollbar__bar {\n  opacity: 1;\n  transition: opacity 340ms ease-out;\n}\n.el-scrollbar__wrap {\n  overflow: scroll;\n  height: 100%;\n}\n.el-scrollbar__wrap--hidden-default {\n  scrollbar-width: none;\n}\n.el-scrollbar__wrap--hidden-default::-webkit-scrollbar {\n  width: 0;\n  height: 0;\n}\n.el-scrollbar__thumb {\n  position: relative;\n  display: block;\n  width: 0;\n  height: 0;\n  cursor: pointer;\n  border-radius: inherit;\n  background-color: rgba(144, 147, 153, 0.3);\n  transition: 0.3s background-color;\n}\n.el-scrollbar__thumb:hover {\n  background-color: rgba(144, 147, 153, 0.5);\n}\n.el-scrollbar__bar {\n  position: absolute;\n  right: 2px;\n  bottom: 2px;\n  z-index: 1;\n  border-radius: 4px;\n  opacity: 0;\n  transition: opacity 120ms ease-out;\n}\n.el-scrollbar__bar.is-vertical {\n  width: 6px;\n  top: 2px;\n}\n.el-scrollbar__bar.is-vertical > div {\n  width: 100%;\n}\n.el-scrollbar__bar.is-horizontal {\n  height: 6px;\n  left: 2px;\n}\n.el-scrollbar__bar.is-horizontal > div {\n  height: 100%;\n}\n.el-select {\n  display: inline-block;\n  position: relative;\n}\n.el-select .el-select__tags > span {\n  display: contents;\n}\n.el-select .el-input__inner {\n  cursor: pointer;\n  padding-right: 35px;\n}\n.el-select .el-input__inner:focus {\n  border-color: #409EFF;\n}\n.el-select .el-input .el-select__caret {\n  color: #C0C4CC;\n  font-size: 14px;\n  transition: transform 0.3s;\n  transform: rotateZ(180deg);\n  cursor: pointer;\n}\n.el-select .el-input .el-select__caret.is-reverse {\n  transform: rotateZ(0);\n}\n.el-select .el-input .el-select__caret.is-show-close {\n  font-size: 14px;\n  text-align: center;\n  transform: rotateZ(180deg);\n  border-radius: 100%;\n  color: #C0C4CC;\n  transition: color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n}\n.el-select .el-input .el-select__caret.is-show-close:hover {\n  color: #909399;\n}\n.el-select .el-input.is-disabled .el-input__inner {\n  cursor: not-allowed;\n}\n.el-select .el-input.is-disabled .el-input__inner:hover {\n  border-color: #E4E7ED;\n}\n.el-select .el-input.is-focus .el-input__inner {\n  border-color: #409EFF;\n}\n.el-select > .el-input {\n  display: block;\n}\n.el-select__input {\n  border: none;\n  outline: 0;\n  padding: 0;\n  margin-left: 15px;\n  color: #666;\n  font-size: 14px;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  height: 28px;\n  background-color: transparent;\n}\n.el-select__input.is-mini {\n  height: 14px;\n}\n.el-select__close {\n  cursor: pointer;\n  position: absolute;\n  top: 8px;\n  z-index: 1000;\n  right: 25px;\n  color: #C0C4CC;\n  line-height: 18px;\n  font-size: 14px;\n}\n.el-select__close:hover {\n  color: #909399;\n}\n.el-select__tags {\n  position: absolute;\n  line-height: normal;\n  white-space: normal;\n  z-index: 1;\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n}\n.el-select__tags-text {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.el-select .el-tag {\n  box-sizing: border-box;\n  border-color: transparent;\n  margin: 2px 0 2px 6px;\n  background-color: #f0f2f5;\n  display: flex;\n  max-width: 100%;\n  align-items: center;\n}\n.el-select .el-tag__close.el-icon-close {\n  background-color: #C0C4CC;\n  top: 0;\n  color: #FFF;\n  flex-shrink: 0;\n}\n.el-select .el-tag__close.el-icon-close:hover {\n  background-color: #909399;\n}\n.el-select .el-tag__close.el-icon-close::before {\n  display: block;\n  transform: translate(0, 0.5px);\n}\n.el-pagination {\n  white-space: nowrap;\n  padding: 2px 5px;\n  color: #303133;\n  font-weight: 700;\n}\n.el-pagination::after,\n.el-pagination::before {\n  display: table;\n  content: "";\n}\n.el-pagination::after {\n  clear: both;\n}\n.el-pagination button,\n.el-pagination span:not([class*=suffix]) {\n  display: inline-block;\n  font-size: 13px;\n  min-width: 35.5px;\n  height: 28px;\n  line-height: 28px;\n  vertical-align: top;\n  box-sizing: border-box;\n}\n.el-pagination .el-input__inner {\n  text-align: center;\n  -moz-appearance: textfield;\n  line-height: normal;\n}\n.el-pagination .el-input__suffix {\n  right: 0;\n  transform: scale(0.8);\n}\n.el-pagination .el-select .el-input {\n  width: 100px;\n  margin: 0 5px;\n}\n.el-pagination .el-select .el-input .el-input__inner {\n  padding-right: 25px;\n  border-radius: 3px;\n}\n.el-pagination button {\n  border: none;\n  padding: 0 6px;\n  background: 0 0;\n}\n.el-pagination button:focus {\n  outline: 0;\n}\n.el-pagination button:hover {\n  color: #409EFF;\n}\n.el-pagination button:disabled {\n  color: #C0C4CC;\n  background-color: #FFF;\n  cursor: not-allowed;\n}\n.el-pagination .btn-next,\n.el-pagination .btn-prev {\n  background: center center no-repeat #FFF;\n  background-size: 16px;\n  cursor: pointer;\n  margin: 0;\n  color: #303133;\n}\n.el-pagination .btn-next .el-icon,\n.el-pagination .btn-prev .el-icon {\n  display: block;\n  font-size: 12px;\n  font-weight: 700;\n}\n.el-pagination .btn-prev {\n  padding-right: 12px;\n}\n.el-pagination .btn-next {\n  padding-left: 12px;\n}\n.el-pagination .el-pager li.disabled {\n  color: #C0C4CC;\n  cursor: not-allowed;\n}\n.el-pager li,\n.el-pager li.btn-quicknext:hover,\n.el-pager li.btn-quickprev:hover {\n  cursor: pointer;\n}\n.el-pagination--small .btn-next,\n.el-pagination--small .btn-prev,\n.el-pagination--small .el-pager li,\n.el-pagination--small .el-pager li.btn-quicknext,\n.el-pagination--small .el-pager li.btn-quickprev,\n.el-pagination--small .el-pager li:last-child {\n  border-color: transparent;\n  font-size: 12px;\n  line-height: 22px;\n  height: 22px;\n  min-width: 22px;\n}\n.el-pagination--small .arrow.disabled {\n  visibility: hidden;\n}\n.el-pagination--small .more::before,\n.el-pagination--small li.more::before {\n  line-height: 24px;\n}\n.el-pagination--small button,\n.el-pagination--small span:not([class*=suffix]) {\n  height: 22px;\n  line-height: 22px;\n}\n.el-pagination--small .el-pagination__editor,\n.el-pagination--small .el-pagination__editor.el-input .el-input__inner {\n  height: 22px;\n}\n.el-pagination__sizes {\n  margin: 0 10px 0 0;\n  font-weight: 400;\n  color: #606266;\n}\n.el-pagination__sizes .el-input .el-input__inner {\n  font-size: 13px;\n  padding-left: 8px;\n}\n.el-pagination__sizes .el-input .el-input__inner:hover {\n  border-color: #409EFF;\n}\n.el-pagination__total {\n  margin-right: 10px;\n  font-weight: 400;\n  color: #606266;\n}\n.el-pagination__jump {\n  margin-left: 24px;\n  font-weight: 400;\n  color: #606266;\n}\n.el-pagination__jump .el-input__inner {\n  padding: 0 3px;\n}\n.el-pagination__rightwrapper {\n  float: right;\n}\n.el-pagination__editor {\n  line-height: 18px;\n  padding: 0 2px;\n  height: 28px;\n  text-align: center;\n  margin: 0 2px;\n  box-sizing: border-box;\n  border-radius: 3px;\n}\n.el-pager,\n.el-pagination.is-background .btn-next,\n.el-pagination.is-background .btn-prev {\n  padding: 0;\n}\n.el-pagination__editor.el-input {\n  width: 50px;\n}\n.el-pagination__editor.el-input .el-input__inner {\n  height: 28px;\n}\n.el-pagination__editor .el-input__inner::-webkit-inner-spin-button,\n.el-pagination__editor .el-input__inner::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.el-pagination.is-background .btn-next,\n.el-pagination.is-background .btn-prev,\n.el-pagination.is-background .el-pager li {\n  margin: 0 5px;\n  background-color: #f4f4f5;\n  color: #606266;\n  min-width: 30px;\n  border-radius: 2px;\n}\n.el-pagination.is-background .btn-next.disabled,\n.el-pagination.is-background .btn-next:disabled,\n.el-pagination.is-background .btn-prev.disabled,\n.el-pagination.is-background .btn-prev:disabled,\n.el-pagination.is-background .el-pager li.disabled {\n  color: #C0C4CC;\n}\n.el-pagination.is-background .el-pager li:not(.disabled):hover {\n  color: #409EFF;\n}\n.el-pagination.is-background .el-pager li:not(.disabled).active {\n  background-color: #409EFF;\n  color: #FFF;\n}\n.el-pagination.is-background.el-pagination--small .btn-next,\n.el-pagination.is-background.el-pagination--small .btn-prev,\n.el-pagination.is-background.el-pagination--small .el-pager li {\n  margin: 0 3px;\n  min-width: 22px;\n}\n.el-pager,\n.el-pager li {\n  vertical-align: top;\n  display: inline-block;\n  margin: 0;\n}\n.el-pager {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n  list-style: none;\n  font-size: 0;\n}\n.el-pager .more::before {\n  line-height: 30px;\n}\n.el-pager li {\n  padding: 0 4px;\n  background: #FFF;\n  font-size: 13px;\n  min-width: 35.5px;\n  height: 28px;\n  line-height: 28px;\n  box-sizing: border-box;\n  text-align: center;\n}\n.el-pager li.btn-quicknext,\n.el-pager li.btn-quickprev {\n  line-height: 28px;\n  color: #303133;\n}\n.el-pager li.btn-quicknext.disabled,\n.el-pager li.btn-quickprev.disabled {\n  color: #C0C4CC;\n}\n.el-pager li.active + li {\n  border-left: 0;\n}\n.el-pager li:hover {\n  color: #409EFF;\n}\n.el-pager li.active {\n  color: #409EFF;\n  cursor: default;\n}\n',""]),e.exports=n},605:function(e,n,t){e.exports=function(e){var n={};function t(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(i,o,function(n){return e[n]}.bind(null,o));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/dist/",t(t.s=62)}({0:function(e,n,t){"use strict";function i(e,n,t,i,o,l,r,a){var s,c="function"==typeof e?e.options:e;if(n&&(c.render=n,c.staticRenderFns=t,c._compiled=!0),i&&(c.functional=!0),l&&(c._scopeId="data-v-"+l),r?(s=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},c._ssrRegister=s):o&&(s=a?function(){o.call(this,this.$root.$options.shadowRoot)}:o),s)if(c.functional){c._injectStyles=s;var p=c.render;c.render=function(e,n){return s.call(n),p(e,n)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,s):[s]}return{exports:e,options:c}}t.d(n,"a",(function(){return i}))},10:function(e,n){e.exports=t(383)},12:function(e,n){e.exports=t(103)},15:function(e,n){e.exports=t(385)},16:function(e,n){e.exports=t(365)},19:function(e,n){e.exports=t(99)},21:function(e,n){e.exports=t(384)},22:function(e,n){e.exports=t(606)},3:function(e,n){e.exports=t(19)},31:function(e,n){e.exports=t(607)},33:function(e,n,t){"use strict";var i=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("li",{directives:[{name:"show",rawName:"v-show",value:e.visible,expression:"visible"}],staticClass:"el-select-dropdown__item",class:{selected:e.itemSelected,"is-disabled":e.disabled||e.groupDisabled||e.limitReached,hover:e.hover},on:{mouseenter:e.hoverItem,click:function(n){return n.stopPropagation(),e.selectOptionClick(n)}}},[e._t("default",[t("span",[e._v(e._s(e.currentLabel))])])],2)};i._withStripped=!0;var o=t(4),l=t.n(o),r=t(3),a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s={mixins:[l.a],name:"ElOption",componentName:"ElOption",inject:["select"],props:{value:{required:!0},label:[String,Number],created:Boolean,disabled:{type:Boolean,default:!1}},data:function(){return{index:-1,groupDisabled:!1,visible:!0,hitState:!1,hover:!1}},computed:{isObject:function(){return"[object object]"===Object.prototype.toString.call(this.value).toLowerCase()},currentLabel:function(){return this.label||(this.isObject?"":this.value)},currentValue:function(){return this.value||this.label||""},itemSelected:function(){return this.select.multiple?this.contains(this.select.value,this.value):this.isEqual(this.value,this.select.value)},limitReached:function(){return!!this.select.multiple&&(!this.itemSelected&&(this.select.value||[]).length>=this.select.multipleLimit&&this.select.multipleLimit>0)}},watch:{currentLabel:function(){this.created||this.select.remote||this.dispatch("ElSelect","setSelected")},value:function(e,n){var t=this.select,i=t.remote,o=t.valueKey;if(!this.created&&!i){if(o&&"object"===(void 0===e?"undefined":a(e))&&"object"===(void 0===n?"undefined":a(n))&&e[o]===n[o])return;this.dispatch("ElSelect","setSelected")}}},methods:{isEqual:function(e,n){if(this.isObject){var t=this.select.valueKey;return Object(r.getValueByPath)(e,t)===Object(r.getValueByPath)(n,t)}return e===n},contains:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments[1];if(this.isObject){var t=this.select.valueKey;return e&&e.some((function(e){return Object(r.getValueByPath)(e,t)===Object(r.getValueByPath)(n,t)}))}return e&&e.indexOf(n)>-1},handleGroupDisabled:function(e){this.groupDisabled=e},hoverItem:function(){this.disabled||this.groupDisabled||(this.select.hoverIndex=this.select.options.indexOf(this))},selectOptionClick:function(){!0!==this.disabled&&!0!==this.groupDisabled&&this.dispatch("ElSelect","handleOptionClick",[this,!0])},queryChange:function(e){this.visible=new RegExp(Object(r.escapeRegexpString)(e),"i").test(this.currentLabel)||this.created,this.visible||this.select.filteredOptionsCount--}},created:function(){this.select.options.push(this),this.select.cachedOptions.push(this),this.select.optionsCount++,this.select.filteredOptionsCount++,this.$on("queryChange",this.queryChange),this.$on("handleGroupDisabled",this.handleGroupDisabled)},beforeDestroy:function(){var e=this.select,n=e.selected,t=e.multiple?n:[n],i=this.select.cachedOptions.indexOf(this),o=t.indexOf(this);i>-1&&o<0&&this.select.cachedOptions.splice(i,1),this.select.onOptionDestroy(this.select.options.indexOf(this))}},c=t(0),p=Object(c.a)(s,i,[],!1,null,null,null);p.options.__file="packages/select/src/option.vue";n.a=p.exports},38:function(e,n){e.exports=t(608)},4:function(e,n){e.exports=t(25)},5:function(e,n){e.exports=t(56)},6:function(e,n){e.exports=t(366)},62:function(e,n,t){"use strict";t.r(n);var i=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{directives:[{name:"clickoutside",rawName:"v-clickoutside",value:e.handleClose,expression:"handleClose"}],staticClass:"el-select",class:[e.selectSize?"el-select--"+e.selectSize:""],on:{click:function(n){return n.stopPropagation(),e.toggleMenu(n)}}},[e.multiple?t("div",{ref:"tags",staticClass:"el-select__tags",style:{"max-width":e.inputWidth-32+"px",width:"100%"}},[e.collapseTags&&e.selected.length?t("span",[t("el-tag",{attrs:{closable:!e.selectDisabled,size:e.collapseTagSize,hit:e.selected[0].hitState,type:"info","disable-transitions":""},on:{close:function(n){e.deleteTag(n,e.selected[0])}}},[t("span",{staticClass:"el-select__tags-text"},[e._v(e._s(e.selected[0].currentLabel))])]),e.selected.length>1?t("el-tag",{attrs:{closable:!1,size:e.collapseTagSize,type:"info","disable-transitions":""}},[t("span",{staticClass:"el-select__tags-text"},[e._v("+ "+e._s(e.selected.length-1))])]):e._e()],1):e._e(),e.collapseTags?e._e():t("transition-group",{on:{"after-leave":e.resetInputHeight}},e._l(e.selected,(function(n){return t("el-tag",{key:e.getValueKey(n),attrs:{closable:!e.selectDisabled,size:e.collapseTagSize,hit:n.hitState,type:"info","disable-transitions":""},on:{close:function(t){e.deleteTag(t,n)}}},[t("span",{staticClass:"el-select__tags-text"},[e._v(e._s(n.currentLabel))])])})),1),e.filterable?t("input",{directives:[{name:"model",rawName:"v-model",value:e.query,expression:"query"}],ref:"input",staticClass:"el-select__input",class:[e.selectSize?"is-"+e.selectSize:""],style:{"flex-grow":"1",width:e.inputLength/(e.inputWidth-32)+"%","max-width":e.inputWidth-42+"px"},attrs:{type:"text",disabled:e.selectDisabled,autocomplete:e.autoComplete||e.autocomplete},domProps:{value:e.query},on:{focus:e.handleFocus,blur:function(n){e.softFocus=!1},keyup:e.managePlaceholder,keydown:[e.resetInputState,function(n){if(!("button"in n)&&e._k(n.keyCode,"down",40,n.key,["Down","ArrowDown"]))return null;n.preventDefault(),e.handleNavigate("next")},function(n){if(!("button"in n)&&e._k(n.keyCode,"up",38,n.key,["Up","ArrowUp"]))return null;n.preventDefault(),e.handleNavigate("prev")},function(n){return!("button"in n)&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:(n.preventDefault(),e.selectOption(n))},function(n){if(!("button"in n)&&e._k(n.keyCode,"esc",27,n.key,["Esc","Escape"]))return null;n.stopPropagation(),n.preventDefault(),e.visible=!1},function(n){return!("button"in n)&&e._k(n.keyCode,"delete",[8,46],n.key,["Backspace","Delete","Del"])?null:e.deletePrevTag(n)},function(n){if(!("button"in n)&&e._k(n.keyCode,"tab",9,n.key,"Tab"))return null;e.visible=!1}],compositionstart:e.handleComposition,compositionupdate:e.handleComposition,compositionend:e.handleComposition,input:[function(n){n.target.composing||(e.query=n.target.value)},e.debouncedQueryChange]}}):e._e()],1):e._e(),t("el-input",{ref:"reference",class:{"is-focus":e.visible},attrs:{type:"text",placeholder:e.currentPlaceholder,name:e.name,id:e.id,autocomplete:e.autoComplete||e.autocomplete,size:e.selectSize,disabled:e.selectDisabled,readonly:e.readonly,"validate-event":!1,tabindex:e.multiple&&e.filterable?"-1":null},on:{focus:e.handleFocus,blur:e.handleBlur,input:e.debouncedOnInputChange,compositionstart:e.handleComposition,compositionupdate:e.handleComposition,compositionend:e.handleComposition},nativeOn:{keydown:[function(n){if(!("button"in n)&&e._k(n.keyCode,"down",40,n.key,["Down","ArrowDown"]))return null;n.stopPropagation(),n.preventDefault(),e.handleNavigate("next")},function(n){if(!("button"in n)&&e._k(n.keyCode,"up",38,n.key,["Up","ArrowUp"]))return null;n.stopPropagation(),n.preventDefault(),e.handleNavigate("prev")},function(n){return!("button"in n)&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:(n.preventDefault(),e.selectOption(n))},function(n){if(!("button"in n)&&e._k(n.keyCode,"esc",27,n.key,["Esc","Escape"]))return null;n.stopPropagation(),n.preventDefault(),e.visible=!1},function(n){if(!("button"in n)&&e._k(n.keyCode,"tab",9,n.key,"Tab"))return null;e.visible=!1}],mouseenter:function(n){e.inputHovering=!0},mouseleave:function(n){e.inputHovering=!1}},model:{value:e.selectedLabel,callback:function(n){e.selectedLabel=n},expression:"selectedLabel"}},[e.$slots.prefix?t("template",{slot:"prefix"},[e._t("prefix")],2):e._e(),t("template",{slot:"suffix"},[t("i",{directives:[{name:"show",rawName:"v-show",value:!e.showClose,expression:"!showClose"}],class:["el-select__caret","el-input__icon","el-icon-"+e.iconClass]}),e.showClose?t("i",{staticClass:"el-select__caret el-input__icon el-icon-circle-close",on:{click:e.handleClearClick}}):e._e()])],2),t("transition",{attrs:{name:"el-zoom-in-top"},on:{"before-enter":e.handleMenuEnter,"after-leave":e.doDestroy}},[t("el-select-menu",{directives:[{name:"show",rawName:"v-show",value:e.visible&&!1!==e.emptyText,expression:"visible && emptyText !== false"}],ref:"popper",attrs:{"append-to-body":e.popperAppendToBody}},[t("el-scrollbar",{directives:[{name:"show",rawName:"v-show",value:e.options.length>0&&!e.loading,expression:"options.length > 0 && !loading"}],ref:"scrollbar",class:{"is-empty":!e.allowCreate&&e.query&&0===e.filteredOptionsCount},attrs:{tag:"ul","wrap-class":"el-select-dropdown__wrap","view-class":"el-select-dropdown__list"}},[e.showNewOption?t("el-option",{attrs:{value:e.query,created:""}}):e._e(),e._t("default")],2),e.emptyText&&(!e.allowCreate||e.loading||e.allowCreate&&0===e.options.length)?[e.$slots.empty?e._t("empty"):t("p",{staticClass:"el-select-dropdown__empty"},[e._v("\n          "+e._s(e.emptyText)+"\n        ")])]:e._e()],2)],1)],1)};i._withStripped=!0;var o=t(4),l=t.n(o),r=t(22),a=t.n(r),s=t(6),c=t.n(s),p=t(10),d=t.n(p),u=function(){var e=this.$createElement;return(this._self._c||e)("div",{staticClass:"el-select-dropdown el-popper",class:[{"is-multiple":this.$parent.multiple},this.popperClass],style:{minWidth:this.minWidth}},[this._t("default")],2)};u._withStripped=!0;var h=t(5),b={name:"ElSelectDropdown",componentName:"ElSelectDropdown",mixins:[t.n(h).a],props:{placement:{default:"bottom-start"},boundariesPadding:{default:0},popperOptions:{default:function(){return{gpuAcceleration:!1}}},visibleArrow:{default:!0},appendToBody:{type:Boolean,default:!0}},data:function(){return{minWidth:""}},computed:{popperClass:function(){return this.$parent.popperClass}},watch:{"$parent.inputWidth":function(){this.minWidth=this.$parent.$el.getBoundingClientRect().width+"px"}},mounted:function(){var e=this;this.referenceElm=this.$parent.$refs.reference.$el,this.$parent.popperElm=this.popperElm=this.$el,this.$on("updatePopper",(function(){e.$parent.visible&&e.updatePopper()})),this.$on("destroyPopper",this.destroyPopper)}},g=t(0),f=Object(g.a)(b,u,[],!1,null,null,null);f.options.__file="packages/select/src/select-dropdown.vue";var _=f.exports,x=t(33),m=t(38),v=t.n(m),k=t(15),C=t.n(k),w=t(19),y=t.n(w),F=t(12),S=t.n(F),E=t(16),O=t(31),$=t.n(O),z=t(3),P=t(21),I={mixins:[l.a,c.a,a()("reference"),{data:function(){return{hoverOption:-1}},computed:{optionsAllDisabled:function(){return this.options.filter((function(e){return e.visible})).every((function(e){return e.disabled}))}},watch:{hoverIndex:function(e){var n=this;"number"==typeof e&&e>-1&&(this.hoverOption=this.options[e]||{}),this.options.forEach((function(e){e.hover=n.hoverOption===e}))}},methods:{navigateOptions:function(e){var n=this;if(this.visible){if(0!==this.options.length&&0!==this.filteredOptionsCount&&!this.optionsAllDisabled){"next"===e?(this.hoverIndex++,this.hoverIndex===this.options.length&&(this.hoverIndex=0)):"prev"===e&&(this.hoverIndex--,this.hoverIndex<0&&(this.hoverIndex=this.options.length-1));var t=this.options[this.hoverIndex];!0!==t.disabled&&!0!==t.groupDisabled&&t.visible||this.navigateOptions(e),this.$nextTick((function(){return n.scrollToOption(n.hoverOption)}))}}else this.visible=!0}}}],name:"ElSelect",componentName:"ElSelect",inject:{elForm:{default:""},elFormItem:{default:""}},provide:function(){return{select:this}},computed:{_elFormItemSize:function(){return(this.elFormItem||{}).elFormItemSize},readonly:function(){return!this.filterable||this.multiple||!Object(z.isIE)()&&!Object(z.isEdge)()&&!this.visible},showClose:function(){var e=this.multiple?Array.isArray(this.value)&&this.value.length>0:void 0!==this.value&&null!==this.value&&""!==this.value;return this.clearable&&!this.selectDisabled&&this.inputHovering&&e},iconClass:function(){return this.remote&&this.filterable?"":this.visible?"arrow-up is-reverse":"arrow-up"},debounce:function(){return this.remote?300:0},emptyText:function(){return this.loading?this.loadingText||this.t("el.select.loading"):(!this.remote||""!==this.query||0!==this.options.length)&&(this.filterable&&this.query&&this.options.length>0&&0===this.filteredOptionsCount?this.noMatchText||this.t("el.select.noMatch"):0===this.options.length?this.noDataText||this.t("el.select.noData"):null)},showNewOption:function(){var e=this,n=this.options.filter((function(e){return!e.created})).some((function(n){return n.currentLabel===e.query}));return this.filterable&&this.allowCreate&&""!==this.query&&!n},selectSize:function(){return this.size||this._elFormItemSize||(this.$ELEMENT||{}).size},selectDisabled:function(){return this.disabled||(this.elForm||{}).disabled},collapseTagSize:function(){return["small","mini"].indexOf(this.selectSize)>-1?"mini":"small"},propPlaceholder:function(){return void 0!==this.placeholder?this.placeholder:this.t("el.select.placeholder")}},components:{ElInput:d.a,ElSelectMenu:_,ElOption:x.a,ElTag:v.a,ElScrollbar:C.a},directives:{Clickoutside:S.a},props:{name:String,id:String,value:{required:!0},autocomplete:{type:String,default:"off"},autoComplete:{type:String,validator:function(e){return!0}},automaticDropdown:Boolean,size:String,disabled:Boolean,clearable:Boolean,filterable:Boolean,allowCreate:Boolean,loading:Boolean,popperClass:String,remote:Boolean,loadingText:String,noMatchText:String,noDataText:String,remoteMethod:Function,filterMethod:Function,multiple:Boolean,multipleLimit:{type:Number,default:0},placeholder:{type:String,required:!1},defaultFirstOption:Boolean,reserveKeyword:Boolean,valueKey:{type:String,default:"value"},collapseTags:Boolean,popperAppendToBody:{type:Boolean,default:!0}},data:function(){return{options:[],cachedOptions:[],createdLabel:null,createdSelected:!1,selected:this.multiple?[]:{},inputLength:20,inputWidth:0,initialInputHeight:0,cachedPlaceHolder:"",optionsCount:0,filteredOptionsCount:0,visible:!1,softFocus:!1,selectedLabel:"",hoverIndex:-1,query:"",previousQuery:null,inputHovering:!1,currentPlaceholder:"",menuVisibleOnFocus:!1,isOnComposition:!1,isSilentBlur:!1}},watch:{selectDisabled:function(){var e=this;this.$nextTick((function(){e.resetInputHeight()}))},propPlaceholder:function(e){this.cachedPlaceHolder=this.currentPlaceholder=e},value:function(e,n){this.multiple&&(this.resetInputHeight(),e&&e.length>0||this.$refs.input&&""!==this.query?this.currentPlaceholder="":this.currentPlaceholder=this.cachedPlaceHolder,this.filterable&&!this.reserveKeyword&&(this.query="",this.handleQueryChange(this.query))),this.setSelected(),this.filterable&&!this.multiple&&(this.inputLength=20),Object(z.valueEquals)(e,n)||this.dispatch("ElFormItem","el.form.change",e)},visible:function(e){var n=this;e?(this.broadcast("ElSelectDropdown","updatePopper"),this.filterable&&(this.query=this.remote?"":this.selectedLabel,this.handleQueryChange(this.query),this.multiple?this.$refs.input.focus():(this.remote||(this.broadcast("ElOption","queryChange",""),this.broadcast("ElOptionGroup","queryChange")),this.selectedLabel&&(this.currentPlaceholder=this.selectedLabel,this.selectedLabel="")))):(this.broadcast("ElSelectDropdown","destroyPopper"),this.$refs.input&&this.$refs.input.blur(),this.query="",this.previousQuery=null,this.selectedLabel="",this.inputLength=20,this.menuVisibleOnFocus=!1,this.resetHoverIndex(),this.$nextTick((function(){n.$refs.input&&""===n.$refs.input.value&&0===n.selected.length&&(n.currentPlaceholder=n.cachedPlaceHolder)})),this.multiple||(this.selected&&(this.filterable&&this.allowCreate&&this.createdSelected&&this.createdLabel?this.selectedLabel=this.createdLabel:this.selectedLabel=this.selected.currentLabel,this.filterable&&(this.query=this.selectedLabel)),this.filterable&&(this.currentPlaceholder=this.cachedPlaceHolder))),this.$emit("visible-change",e)},options:function(){var e=this;if(!this.$isServer){this.$nextTick((function(){e.broadcast("ElSelectDropdown","updatePopper")})),this.multiple&&this.resetInputHeight();var n=this.$el.querySelectorAll("input");-1===[].indexOf.call(n,document.activeElement)&&this.setSelected(),this.defaultFirstOption&&(this.filterable||this.remote)&&this.filteredOptionsCount&&this.checkDefaultFirstOption()}}},methods:{handleNavigate:function(e){this.isOnComposition||this.navigateOptions(e)},handleComposition:function(e){var n=this,t=e.target.value;if("compositionend"===e.type)this.isOnComposition=!1,this.$nextTick((function(e){return n.handleQueryChange(t)}));else{var i=t[t.length-1]||"";this.isOnComposition=!Object(P.isKorean)(i)}},handleQueryChange:function(e){var n=this;this.previousQuery===e||this.isOnComposition||(null!==this.previousQuery||"function"!=typeof this.filterMethod&&"function"!=typeof this.remoteMethod?(this.previousQuery=e,this.$nextTick((function(){n.visible&&n.broadcast("ElSelectDropdown","updatePopper")})),this.hoverIndex=-1,this.multiple&&this.filterable&&this.$nextTick((function(){var e=15*n.$refs.input.value.length+20;n.inputLength=n.collapseTags?Math.min(50,e):e,n.managePlaceholder(),n.resetInputHeight()})),this.remote&&"function"==typeof this.remoteMethod?(this.hoverIndex=-1,this.remoteMethod(e)):"function"==typeof this.filterMethod?(this.filterMethod(e),this.broadcast("ElOptionGroup","queryChange")):(this.filteredOptionsCount=this.optionsCount,this.broadcast("ElOption","queryChange",e),this.broadcast("ElOptionGroup","queryChange")),this.defaultFirstOption&&(this.filterable||this.remote)&&this.filteredOptionsCount&&this.checkDefaultFirstOption()):this.previousQuery=e)},scrollToOption:function(e){var n=Array.isArray(e)&&e[0]?e[0].$el:e.$el;if(this.$refs.popper&&n){var t=this.$refs.popper.$el.querySelector(".el-select-dropdown__wrap");$()(t,n)}this.$refs.scrollbar&&this.$refs.scrollbar.handleScroll()},handleMenuEnter:function(){var e=this;this.$nextTick((function(){return e.scrollToOption(e.selected)}))},emitChange:function(e){Object(z.valueEquals)(this.value,e)||this.$emit("change",e)},getOption:function(e){for(var n=void 0,t="[object object]"===Object.prototype.toString.call(e).toLowerCase(),i="[object null]"===Object.prototype.toString.call(e).toLowerCase(),o="[object undefined]"===Object.prototype.toString.call(e).toLowerCase(),l=this.cachedOptions.length-1;l>=0;l--){var r=this.cachedOptions[l];if(t?Object(z.getValueByPath)(r.value,this.valueKey)===Object(z.getValueByPath)(e,this.valueKey):r.value===e){n=r;break}}if(n)return n;var a={value:e,currentLabel:t||i||o?"":String(e)};return this.multiple&&(a.hitState=!1),a},setSelected:function(){var e=this;if(!this.multiple){var n=this.getOption(this.value);return n.created?(this.createdLabel=n.currentLabel,this.createdSelected=!0):this.createdSelected=!1,this.selectedLabel=n.currentLabel,this.selected=n,void(this.filterable&&(this.query=this.selectedLabel))}var t=[];Array.isArray(this.value)&&this.value.forEach((function(n){t.push(e.getOption(n))})),this.selected=t,this.$nextTick((function(){e.resetInputHeight()}))},handleFocus:function(e){this.softFocus?this.softFocus=!1:((this.automaticDropdown||this.filterable)&&(this.filterable&&!this.visible&&(this.menuVisibleOnFocus=!0),this.visible=!0),this.$emit("focus",e))},blur:function(){this.visible=!1,this.$refs.reference.blur()},handleBlur:function(e){var n=this;setTimeout((function(){n.isSilentBlur?n.isSilentBlur=!1:n.$emit("blur",e)}),50),this.softFocus=!1},handleClearClick:function(e){this.deleteSelected(e)},doDestroy:function(){this.$refs.popper&&this.$refs.popper.doDestroy()},handleClose:function(){this.visible=!1},toggleLastOptionHitState:function(e){if(Array.isArray(this.selected)){var n=this.selected[this.selected.length-1];if(n)return!0===e||!1===e?(n.hitState=e,e):(n.hitState=!n.hitState,n.hitState)}},deletePrevTag:function(e){if(e.target.value.length<=0&&!this.toggleLastOptionHitState()){var n=this.value.slice();n.pop(),this.$emit("input",n),this.emitChange(n)}},managePlaceholder:function(){""!==this.currentPlaceholder&&(this.currentPlaceholder=this.$refs.input.value?"":this.cachedPlaceHolder)},resetInputState:function(e){8!==e.keyCode&&this.toggleLastOptionHitState(!1),this.inputLength=15*this.$refs.input.value.length+20,this.resetInputHeight()},resetInputHeight:function(){var e=this;this.collapseTags&&!this.filterable||this.$nextTick((function(){if(e.$refs.reference){var n=e.$refs.reference.$el.childNodes,t=[].filter.call(n,(function(e){return"INPUT"===e.tagName}))[0],i=e.$refs.tags,o=i?Math.round(i.getBoundingClientRect().height):0,l=e.initialInputHeight||40;t.style.height=0===e.selected.length?l+"px":Math.max(i?o+(o>l?6:0):0,l)+"px",e.visible&&!1!==e.emptyText&&e.broadcast("ElSelectDropdown","updatePopper")}}))},resetHoverIndex:function(){var e=this;setTimeout((function(){e.multiple?e.selected.length>0?e.hoverIndex=Math.min.apply(null,e.selected.map((function(n){return e.options.indexOf(n)}))):e.hoverIndex=-1:e.hoverIndex=e.options.indexOf(e.selected)}),300)},handleOptionSelect:function(e,n){var t=this;if(this.multiple){var i=(this.value||[]).slice(),o=this.getValueIndex(i,e.value);o>-1?i.splice(o,1):(this.multipleLimit<=0||i.length<this.multipleLimit)&&i.push(e.value),this.$emit("input",i),this.emitChange(i),e.created&&(this.query="",this.handleQueryChange(""),this.inputLength=20),this.filterable&&this.$refs.input.focus()}else this.$emit("input",e.value),this.emitChange(e.value),this.visible=!1;this.isSilentBlur=n,this.setSoftFocus(),this.visible||this.$nextTick((function(){t.scrollToOption(e)}))},setSoftFocus:function(){this.softFocus=!0;var e=this.$refs.input||this.$refs.reference;e&&e.focus()},getValueIndex:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments[1],t="[object object]"===Object.prototype.toString.call(n).toLowerCase();if(t){var i=this.valueKey,o=-1;return e.some((function(e,t){return Object(z.getValueByPath)(e,i)===Object(z.getValueByPath)(n,i)&&(o=t,!0)})),o}return e.indexOf(n)},toggleMenu:function(){this.selectDisabled||(this.menuVisibleOnFocus?this.menuVisibleOnFocus=!1:this.visible=!this.visible,this.visible&&(this.$refs.input||this.$refs.reference).focus())},selectOption:function(){this.visible?this.options[this.hoverIndex]&&this.handleOptionSelect(this.options[this.hoverIndex]):this.toggleMenu()},deleteSelected:function(e){e.stopPropagation();var n=this.multiple?[]:"";this.$emit("input",n),this.emitChange(n),this.visible=!1,this.$emit("clear")},deleteTag:function(e,n){var t=this.selected.indexOf(n);if(t>-1&&!this.selectDisabled){var i=this.value.slice();i.splice(t,1),this.$emit("input",i),this.emitChange(i),this.$emit("remove-tag",n.value)}e.stopPropagation()},onInputChange:function(){this.filterable&&this.query!==this.selectedLabel&&(this.query=this.selectedLabel,this.handleQueryChange(this.query))},onOptionDestroy:function(e){e>-1&&(this.optionsCount--,this.filteredOptionsCount--,this.options.splice(e,1))},resetInputWidth:function(){this.inputWidth=this.$refs.reference.$el.getBoundingClientRect().width},handleResize:function(){this.resetInputWidth(),this.multiple&&this.resetInputHeight()},checkDefaultFirstOption:function(){this.hoverIndex=-1;for(var e=!1,n=this.options.length-1;n>=0;n--)if(this.options[n].created){e=!0,this.hoverIndex=n;break}if(!e)for(var t=0;t!==this.options.length;++t){var i=this.options[t];if(this.query){if(!i.disabled&&!i.groupDisabled&&i.visible){this.hoverIndex=t;break}}else if(i.itemSelected){this.hoverIndex=t;break}}},getValueKey:function(e){return"[object object]"!==Object.prototype.toString.call(e.value).toLowerCase()?e.value:Object(z.getValueByPath)(e.value,this.valueKey)}},created:function(){var e=this;this.cachedPlaceHolder=this.currentPlaceholder=this.propPlaceholder,this.multiple&&!Array.isArray(this.value)&&this.$emit("input",[]),!this.multiple&&Array.isArray(this.value)&&this.$emit("input",""),this.debouncedOnInputChange=y()(this.debounce,(function(){e.onInputChange()})),this.debouncedQueryChange=y()(this.debounce,(function(n){e.handleQueryChange(n.target.value)})),this.$on("handleOptionClick",this.handleOptionSelect),this.$on("setSelected",this.setSelected)},mounted:function(){var e=this;this.multiple&&Array.isArray(this.value)&&this.value.length>0&&(this.currentPlaceholder=""),Object(E.addResizeListener)(this.$el,this.handleResize);var n=this.$refs.reference;if(n&&n.$el){var t=n.$el.querySelector("input");this.initialInputHeight=t.getBoundingClientRect().height||{medium:36,small:32,mini:28}[this.selectSize]}this.remote&&this.multiple&&this.resetInputHeight(),this.$nextTick((function(){n&&n.$el&&(e.inputWidth=n.$el.getBoundingClientRect().width)})),this.setSelected()},beforeDestroy:function(){this.$el&&this.handleResize&&Object(E.removeResizeListener)(this.$el,this.handleResize)}},j=Object(g.a)(I,i,[],!1,null,null,null);j.options.__file="packages/select/src/select.vue";var T=j.exports;T.install=function(e){e.component(T.name,T)};n.default=T}})},606:function(e,n,t){"use strict";n.__esModule=!0,n.default=function(e){return{methods:{focus:function(){this.$refs[e].focus()}}}}},607:function(e,n,t){"use strict";n.__esModule=!0,n.default=function(e,n){if(l.default.prototype.$isServer)return;if(!n)return void(e.scrollTop=0);var t=[],i=n.offsetParent;for(;i&&e!==i&&e.contains(i);)t.push(i),i=i.offsetParent;var o=n.offsetTop+t.reduce((function(e,n){return e+n.offsetTop}),0),r=o+n.offsetHeight,a=e.scrollTop,s=a+e.clientHeight;o<a?e.scrollTop=o:r>s&&(e.scrollTop=r-e.clientHeight)};var i,o=t(0),l=(i=o)&&i.__esModule?i:{default:i}},608:function(e,n,t){e.exports=function(e){var n={};function t(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(i,o,function(n){return e[n]}.bind(null,o));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/dist/",t(t.s=132)}({0:function(e,n,t){"use strict";function i(e,n,t,i,o,l,r,a){var s,c="function"==typeof e?e.options:e;if(n&&(c.render=n,c.staticRenderFns=t,c._compiled=!0),i&&(c.functional=!0),l&&(c._scopeId="data-v-"+l),r?(s=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},c._ssrRegister=s):o&&(s=a?function(){o.call(this,this.$root.$options.shadowRoot)}:o),s)if(c.functional){c._injectStyles=s;var p=c.render;c.render=function(e,n){return s.call(n),p(e,n)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,s):[s]}return{exports:e,options:c}}t.d(n,"a",(function(){return i}))},132:function(e,n,t){"use strict";t.r(n);var i={name:"ElTag",props:{text:String,closable:Boolean,type:String,hit:Boolean,disableTransitions:Boolean,color:String,size:String,effect:{type:String,default:"light",validator:function(e){return-1!==["dark","light","plain"].indexOf(e)}}},methods:{handleClose:function(e){e.stopPropagation(),this.$emit("close",e)},handleClick:function(e){this.$emit("click",e)}},computed:{tagSize:function(){return this.size||(this.$ELEMENT||{}).size}},render:function(e){var n=this.type,t=this.tagSize,i=this.hit,o=this.effect,l=e("span",{class:["el-tag",n?"el-tag--"+n:"",t?"el-tag--"+t:"",o?"el-tag--"+o:"",i&&"is-hit"],style:{backgroundColor:this.color},on:{click:this.handleClick}},[this.$slots.default,this.closable&&e("i",{class:"el-tag__close el-icon-close",on:{click:this.handleClose}})]);return this.disableTransitions?l:e("transition",{attrs:{name:"el-zoom-in-center"}},[l])}},o=t(0),l=Object(o.a)(i,void 0,void 0,!1,null,null,null);l.options.__file="packages/tag/src/tag.vue";var r=l.exports;r.install=function(e){e.component(r.name,r)};n.default=r}})},613:function(e,n,t){e.exports=function(e){var n={};function t(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(i,o,function(n){return e[n]}.bind(null,o));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/dist/",t(t.s=54)}({0:function(e,n,t){"use strict";function i(e,n,t,i,o,l,r,a){var s,c="function"==typeof e?e.options:e;if(n&&(c.render=n,c.staticRenderFns=t,c._compiled=!0),i&&(c.functional=!0),l&&(c._scopeId="data-v-"+l),r?(s=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},c._ssrRegister=s):o&&(s=a?function(){o.call(this,this.$root.$options.shadowRoot)}:o),s)if(c.functional){c._injectStyles=s;var p=c.render;c.render=function(e,n){return s.call(n),p(e,n)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,s):[s]}return{exports:e,options:c}}t.d(n,"a",(function(){return i}))},3:function(e,n){e.exports=t(19)},33:function(e,n,t){"use strict";var i=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("li",{directives:[{name:"show",rawName:"v-show",value:e.visible,expression:"visible"}],staticClass:"el-select-dropdown__item",class:{selected:e.itemSelected,"is-disabled":e.disabled||e.groupDisabled||e.limitReached,hover:e.hover},on:{mouseenter:e.hoverItem,click:function(n){return n.stopPropagation(),e.selectOptionClick(n)}}},[e._t("default",[t("span",[e._v(e._s(e.currentLabel))])])],2)};i._withStripped=!0;var o=t(4),l=t.n(o),r=t(3),a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s={mixins:[l.a],name:"ElOption",componentName:"ElOption",inject:["select"],props:{value:{required:!0},label:[String,Number],created:Boolean,disabled:{type:Boolean,default:!1}},data:function(){return{index:-1,groupDisabled:!1,visible:!0,hitState:!1,hover:!1}},computed:{isObject:function(){return"[object object]"===Object.prototype.toString.call(this.value).toLowerCase()},currentLabel:function(){return this.label||(this.isObject?"":this.value)},currentValue:function(){return this.value||this.label||""},itemSelected:function(){return this.select.multiple?this.contains(this.select.value,this.value):this.isEqual(this.value,this.select.value)},limitReached:function(){return!!this.select.multiple&&(!this.itemSelected&&(this.select.value||[]).length>=this.select.multipleLimit&&this.select.multipleLimit>0)}},watch:{currentLabel:function(){this.created||this.select.remote||this.dispatch("ElSelect","setSelected")},value:function(e,n){var t=this.select,i=t.remote,o=t.valueKey;if(!this.created&&!i){if(o&&"object"===(void 0===e?"undefined":a(e))&&"object"===(void 0===n?"undefined":a(n))&&e[o]===n[o])return;this.dispatch("ElSelect","setSelected")}}},methods:{isEqual:function(e,n){if(this.isObject){var t=this.select.valueKey;return Object(r.getValueByPath)(e,t)===Object(r.getValueByPath)(n,t)}return e===n},contains:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments[1];if(this.isObject){var t=this.select.valueKey;return e&&e.some((function(e){return Object(r.getValueByPath)(e,t)===Object(r.getValueByPath)(n,t)}))}return e&&e.indexOf(n)>-1},handleGroupDisabled:function(e){this.groupDisabled=e},hoverItem:function(){this.disabled||this.groupDisabled||(this.select.hoverIndex=this.select.options.indexOf(this))},selectOptionClick:function(){!0!==this.disabled&&!0!==this.groupDisabled&&this.dispatch("ElSelect","handleOptionClick",[this,!0])},queryChange:function(e){this.visible=new RegExp(Object(r.escapeRegexpString)(e),"i").test(this.currentLabel)||this.created,this.visible||this.select.filteredOptionsCount--}},created:function(){this.select.options.push(this),this.select.cachedOptions.push(this),this.select.optionsCount++,this.select.filteredOptionsCount++,this.$on("queryChange",this.queryChange),this.$on("handleGroupDisabled",this.handleGroupDisabled)},beforeDestroy:function(){var e=this.select,n=e.selected,t=e.multiple?n:[n],i=this.select.cachedOptions.indexOf(this),o=t.indexOf(this);i>-1&&o<0&&this.select.cachedOptions.splice(i,1),this.select.onOptionDestroy(this.select.options.indexOf(this))}},c=t(0),p=Object(c.a)(s,i,[],!1,null,null,null);p.options.__file="packages/select/src/option.vue";n.a=p.exports},4:function(e,n){e.exports=t(25)},54:function(e,n,t){"use strict";t.r(n);var i=t(33);i.a.install=function(e){e.component(i.a.name,i.a)},n.default=i.a}})},614:function(e,n,t){(n=t(3)(!1)).push([e.i,'@charset "UTF-8";\n.el-checkbox,\n.el-checkbox-button__inner,\n.el-table th.el-table__cell {\n  -webkit-user-select: none;\n  -ms-user-select: none;\n}\n.el-checkbox,\n.el-checkbox__input {\n  cursor: pointer;\n  position: relative;\n}\n.el-checkbox,\n.el-checkbox-button__inner,\n.el-checkbox__input,\n.el-tag {\n  display: inline-block;\n  white-space: nowrap;\n}\n.el-checkbox {\n  color: #606266;\n  font-weight: 500;\n  font-size: 14px;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n          user-select: none;\n  margin-right: 30px;\n}\n.el-checkbox.is-bordered {\n  padding: 9px 20px 9px 10px;\n  border-radius: 4px;\n  border: 1px solid #DCDFE6;\n  box-sizing: border-box;\n  line-height: normal;\n  height: 40px;\n}\n.el-checkbox.is-bordered.is-checked {\n  border-color: #409EFF;\n}\n.el-checkbox.is-bordered.is-disabled {\n  border-color: #EBEEF5;\n  cursor: not-allowed;\n}\n.el-checkbox.is-bordered + .el-checkbox.is-bordered {\n  margin-left: 10px;\n}\n.el-checkbox.is-bordered.el-checkbox--medium {\n  padding: 7px 20px 7px 10px;\n  border-radius: 4px;\n  height: 36px;\n}\n.el-checkbox.is-bordered.el-checkbox--medium .el-checkbox__label {\n  line-height: 17px;\n  font-size: 14px;\n}\n.el-checkbox.is-bordered.el-checkbox--medium .el-checkbox__inner {\n  height: 14px;\n  width: 14px;\n}\n.el-checkbox.is-bordered.el-checkbox--small {\n  padding: 5px 15px 5px 10px;\n  border-radius: 3px;\n  height: 32px;\n}\n.el-checkbox.is-bordered.el-checkbox--small .el-checkbox__label {\n  line-height: 15px;\n  font-size: 12px;\n}\n.el-checkbox.is-bordered.el-checkbox--small .el-checkbox__inner {\n  height: 12px;\n  width: 12px;\n}\n.el-checkbox.is-bordered.el-checkbox--small .el-checkbox__inner::after {\n  height: 6px;\n  width: 2px;\n}\n.el-checkbox.is-bordered.el-checkbox--mini {\n  padding: 3px 15px 3px 10px;\n  border-radius: 3px;\n  height: 28px;\n}\n.el-checkbox.is-bordered.el-checkbox--mini .el-checkbox__label {\n  line-height: 12px;\n  font-size: 12px;\n}\n.el-checkbox.is-bordered.el-checkbox--mini .el-checkbox__inner {\n  height: 12px;\n  width: 12px;\n}\n.el-checkbox.is-bordered.el-checkbox--mini .el-checkbox__inner::after {\n  height: 6px;\n  width: 2px;\n}\n.el-checkbox__input {\n  outline: 0;\n  line-height: 1;\n  vertical-align: middle;\n}\n.el-checkbox__input.is-disabled .el-checkbox__inner {\n  background-color: #edf2fc;\n  border-color: #DCDFE6;\n  cursor: not-allowed;\n}\n.el-checkbox__input.is-disabled .el-checkbox__inner::after {\n  cursor: not-allowed;\n  border-color: #C0C4CC;\n}\n.el-checkbox__input.is-disabled .el-checkbox__inner + .el-checkbox__label {\n  cursor: not-allowed;\n}\n.el-checkbox__input.is-disabled.is-checked .el-checkbox__inner {\n  background-color: #F2F6FC;\n  border-color: #DCDFE6;\n}\n.el-checkbox__input.is-disabled.is-checked .el-checkbox__inner::after {\n  border-color: #C0C4CC;\n}\n.el-checkbox__input.is-disabled.is-indeterminate .el-checkbox__inner {\n  background-color: #F2F6FC;\n  border-color: #DCDFE6;\n}\n.el-checkbox__input.is-disabled.is-indeterminate .el-checkbox__inner::before {\n  background-color: #C0C4CC;\n  border-color: #C0C4CC;\n}\n.el-checkbox__input.is-checked .el-checkbox__inner,\n.el-checkbox__input.is-indeterminate .el-checkbox__inner {\n  background-color: #409EFF;\n  border-color: #409EFF;\n}\n.el-checkbox__input.is-disabled + span.el-checkbox__label {\n  color: #C0C4CC;\n  cursor: not-allowed;\n}\n.el-checkbox__input.is-checked .el-checkbox__inner::after {\n  transform: rotate(45deg) scaleY(1);\n}\n.el-checkbox__input.is-checked + .el-checkbox__label {\n  color: #409EFF;\n}\n.el-checkbox__input.is-focus .el-checkbox__inner {\n  border-color: #409EFF;\n}\n.el-checkbox__input.is-indeterminate .el-checkbox__inner::before {\n  content: \'\';\n  position: absolute;\n  display: block;\n  background-color: #FFF;\n  height: 2px;\n  transform: scale(0.5);\n  left: 0;\n  right: 0;\n  top: 5px;\n}\n.el-checkbox__input.is-indeterminate .el-checkbox__inner::after {\n  display: none;\n}\n.el-checkbox__inner {\n  display: inline-block;\n  position: relative;\n  border: 1px solid #DCDFE6;\n  border-radius: 2px;\n  box-sizing: border-box;\n  width: 14px;\n  height: 14px;\n  background-color: #FFF;\n  z-index: 1;\n  transition: border-color 0.25s cubic-bezier(0.71, -0.46, 0.29, 1.46), background-color 0.25s cubic-bezier(0.71, -0.46, 0.29, 1.46);\n}\n.el-checkbox__inner:hover {\n  border-color: #409EFF;\n}\n.el-checkbox__inner::after {\n  box-sizing: content-box;\n  content: "";\n  border: 1px solid #FFF;\n  border-left: 0;\n  border-top: 0;\n  height: 7px;\n  left: 4px;\n  position: absolute;\n  top: 1px;\n  transform: rotate(45deg) scaleY(0);\n  width: 3px;\n  transition: transform 0.15s ease-in 0.05s;\n  transform-origin: center;\n}\n.el-checkbox-button__inner,\n.el-table,\n.el-tag {\n  -webkit-box-sizing: border-box;\n}\n.el-checkbox__original {\n  opacity: 0;\n  outline: 0;\n  position: absolute;\n  margin: 0;\n  width: 0;\n  height: 0;\n  z-index: -1;\n}\n.el-checkbox__label {\n  display: inline-block;\n  padding-left: 10px;\n  line-height: 19px;\n  font-size: 14px;\n}\n.el-checkbox:last-of-type {\n  margin-right: 0;\n}\n.el-checkbox-button {\n  position: relative;\n  display: inline-block;\n}\n.el-checkbox-button__inner {\n  line-height: 1;\n  font-weight: 500;\n  vertical-align: middle;\n  cursor: pointer;\n  background: #FFF;\n  border: 1px solid #DCDFE6;\n  border-left: 0;\n  color: #606266;\n  -webkit-appearance: none;\n  text-align: center;\n  box-sizing: border-box;\n  outline: 0;\n  margin: 0;\n  position: relative;\n  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  -moz-user-select: none;\n  padding: 12px 20px;\n  font-size: 14px;\n  border-radius: 0;\n}\n.el-checkbox-button__inner.is-round {\n  padding: 12px 20px;\n}\n.el-checkbox-button__inner:hover {\n  color: #409EFF;\n}\n.el-checkbox-button__inner [class*=el-icon-] {\n  line-height: 0.9;\n}\n.el-checkbox-button__inner [class*=el-icon-] + span {\n  margin-left: 5px;\n}\n.el-checkbox-button__original {\n  opacity: 0;\n  outline: 0;\n  position: absolute;\n  margin: 0;\n  z-index: -1;\n}\n.el-checkbox-button.is-checked .el-checkbox-button__inner {\n  color: #FFF;\n  background-color: #409EFF;\n  border-color: #409EFF;\n  box-shadow: -1px 0 0 0 #8cc5ff;\n}\n.el-checkbox-button.is-checked:first-child .el-checkbox-button__inner {\n  border-left-color: #409EFF;\n}\n.el-checkbox-button.is-disabled .el-checkbox-button__inner {\n  color: #C0C4CC;\n  cursor: not-allowed;\n  background-image: none;\n  background-color: #FFF;\n  border-color: #EBEEF5;\n  box-shadow: none;\n}\n.el-checkbox-button.is-disabled:first-child .el-checkbox-button__inner {\n  border-left-color: #EBEEF5;\n}\n.el-checkbox-button:first-child .el-checkbox-button__inner {\n  border-left: 1px solid #DCDFE6;\n  border-radius: 4px 0 0 4px;\n  box-shadow: none !important;\n}\n.el-checkbox-button.is-focus .el-checkbox-button__inner {\n  border-color: #409EFF;\n}\n.el-checkbox-button:last-child .el-checkbox-button__inner {\n  border-radius: 0 4px 4px 0;\n}\n.el-checkbox-button--medium .el-checkbox-button__inner {\n  padding: 10px 20px;\n  font-size: 14px;\n  border-radius: 0;\n}\n.el-checkbox-button--medium .el-checkbox-button__inner.is-round {\n  padding: 10px 20px;\n}\n.el-checkbox-button--small .el-checkbox-button__inner {\n  padding: 9px 15px;\n  font-size: 12px;\n  border-radius: 0;\n}\n.el-checkbox-button--small .el-checkbox-button__inner.is-round {\n  padding: 9px 15px;\n}\n.el-checkbox-button--mini .el-checkbox-button__inner {\n  padding: 7px 15px;\n  font-size: 12px;\n  border-radius: 0;\n}\n.el-tag,\n.el-tooltip__popper {\n  border-radius: 4px;\n  font-size: 12px;\n}\n.el-checkbox-button--mini .el-checkbox-button__inner.is-round {\n  padding: 7px 15px;\n}\n.el-checkbox-group {\n  font-size: 0;\n}\n.el-tag {\n  background-color: #ecf5ff;\n  border-color: #d9ecff;\n  height: 32px;\n  padding: 0 10px;\n  line-height: 30px;\n  color: #409EFF;\n  border-width: 1px;\n  border-style: solid;\n  box-sizing: border-box;\n}\n.el-tag.is-hit {\n  border-color: #409EFF;\n}\n.el-tag .el-tag__close {\n  color: #409eff;\n}\n.el-tag .el-tag__close:hover {\n  color: #FFF;\n  background-color: #409eff;\n}\n.el-tag.el-tag--info {\n  background-color: #f4f4f5;\n  border-color: #e9e9eb;\n  color: #909399;\n}\n.el-tag.el-tag--info.is-hit {\n  border-color: #909399;\n}\n.el-tag.el-tag--info .el-tag__close {\n  color: #909399;\n}\n.el-tag.el-tag--info .el-tag__close:hover {\n  color: #FFF;\n  background-color: #909399;\n}\n.el-tag.el-tag--success {\n  background-color: #f0f9eb;\n  border-color: #e1f3d8;\n  color: #67c23a;\n}\n.el-tag.el-tag--success.is-hit {\n  border-color: #67C23A;\n}\n.el-tag.el-tag--success .el-tag__close {\n  color: #67c23a;\n}\n.el-tag.el-tag--success .el-tag__close:hover {\n  color: #FFF;\n  background-color: #67c23a;\n}\n.el-tag.el-tag--warning {\n  background-color: #fdf6ec;\n  border-color: #faecd8;\n  color: #e6a23c;\n}\n.el-tag.el-tag--warning.is-hit {\n  border-color: #E6A23C;\n}\n.el-tag.el-tag--warning .el-tag__close {\n  color: #e6a23c;\n}\n.el-tag.el-tag--warning .el-tag__close:hover {\n  color: #FFF;\n  background-color: #e6a23c;\n}\n.el-tag.el-tag--danger {\n  background-color: #fef0f0;\n  border-color: #fde2e2;\n  color: #f56c6c;\n}\n.el-tag.el-tag--danger.is-hit {\n  border-color: #F56C6C;\n}\n.el-tag.el-tag--danger .el-tag__close {\n  color: #f56c6c;\n}\n.el-tag.el-tag--danger .el-tag__close:hover {\n  color: #FFF;\n  background-color: #f56c6c;\n}\n.el-tag .el-icon-close {\n  border-radius: 50%;\n  text-align: center;\n  position: relative;\n  cursor: pointer;\n  font-size: 12px;\n  height: 16px;\n  width: 16px;\n  line-height: 16px;\n  vertical-align: middle;\n  top: -1px;\n  right: -5px;\n}\n.el-tag .el-icon-close::before {\n  display: block;\n}\n.el-tag--dark {\n  background-color: #409eff;\n  border-color: #409eff;\n  color: #fff;\n}\n.el-tag--dark.is-hit {\n  border-color: #409EFF;\n}\n.el-tag--dark .el-tag__close {\n  color: #fff;\n}\n.el-tag--dark .el-tag__close:hover {\n  color: #FFF;\n  background-color: #66b1ff;\n}\n.el-tag--dark.el-tag--info {\n  background-color: #909399;\n  border-color: #909399;\n  color: #fff;\n}\n.el-tag--dark.el-tag--info.is-hit {\n  border-color: #909399;\n}\n.el-tag--dark.el-tag--info .el-tag__close {\n  color: #fff;\n}\n.el-tag--dark.el-tag--info .el-tag__close:hover {\n  color: #FFF;\n  background-color: #a6a9ad;\n}\n.el-tag--dark.el-tag--success {\n  background-color: #67c23a;\n  border-color: #67c23a;\n  color: #fff;\n}\n.el-tag--dark.el-tag--success.is-hit {\n  border-color: #67C23A;\n}\n.el-tag--dark.el-tag--success .el-tag__close {\n  color: #fff;\n}\n.el-tag--dark.el-tag--success .el-tag__close:hover {\n  color: #FFF;\n  background-color: #85ce61;\n}\n.el-tag--dark.el-tag--warning {\n  background-color: #e6a23c;\n  border-color: #e6a23c;\n  color: #fff;\n}\n.el-tag--dark.el-tag--warning.is-hit {\n  border-color: #E6A23C;\n}\n.el-tag--dark.el-tag--warning .el-tag__close {\n  color: #fff;\n}\n.el-tag--dark.el-tag--warning .el-tag__close:hover {\n  color: #FFF;\n  background-color: #ebb563;\n}\n.el-tag--dark.el-tag--danger {\n  background-color: #f56c6c;\n  border-color: #f56c6c;\n  color: #fff;\n}\n.el-tag--dark.el-tag--danger.is-hit {\n  border-color: #F56C6C;\n}\n.el-tag--dark.el-tag--danger .el-tag__close {\n  color: #fff;\n}\n.el-tag--dark.el-tag--danger .el-tag__close:hover {\n  color: #FFF;\n  background-color: #f78989;\n}\n.el-tag--plain {\n  background-color: #fff;\n  border-color: #b3d8ff;\n  color: #409eff;\n}\n.el-tag--plain.is-hit {\n  border-color: #409EFF;\n}\n.el-tag--plain .el-tag__close {\n  color: #409eff;\n}\n.el-tag--plain .el-tag__close:hover {\n  color: #FFF;\n  background-color: #409eff;\n}\n.el-tag--plain.el-tag--info {\n  background-color: #fff;\n  border-color: #d3d4d6;\n  color: #909399;\n}\n.el-tag--plain.el-tag--info.is-hit {\n  border-color: #909399;\n}\n.el-tag--plain.el-tag--info .el-tag__close {\n  color: #909399;\n}\n.el-tag--plain.el-tag--info .el-tag__close:hover {\n  color: #FFF;\n  background-color: #909399;\n}\n.el-tag--plain.el-tag--success {\n  background-color: #fff;\n  border-color: #c2e7b0;\n  color: #67c23a;\n}\n.el-tag--plain.el-tag--success.is-hit {\n  border-color: #67C23A;\n}\n.el-tag--plain.el-tag--success .el-tag__close {\n  color: #67c23a;\n}\n.el-tag--plain.el-tag--success .el-tag__close:hover {\n  color: #FFF;\n  background-color: #67c23a;\n}\n.el-tag--plain.el-tag--warning {\n  background-color: #fff;\n  border-color: #f5dab1;\n  color: #e6a23c;\n}\n.el-tag--plain.el-tag--warning.is-hit {\n  border-color: #E6A23C;\n}\n.el-tag--plain.el-tag--warning .el-tag__close {\n  color: #e6a23c;\n}\n.el-tag--plain.el-tag--warning .el-tag__close:hover {\n  color: #FFF;\n  background-color: #e6a23c;\n}\n.el-tag--plain.el-tag--danger {\n  background-color: #fff;\n  border-color: #fbc4c4;\n  color: #f56c6c;\n}\n.el-tag--plain.el-tag--danger.is-hit {\n  border-color: #F56C6C;\n}\n.el-tag--plain.el-tag--danger .el-tag__close {\n  color: #f56c6c;\n}\n.el-tag--plain.el-tag--danger .el-tag__close:hover {\n  color: #FFF;\n  background-color: #f56c6c;\n}\n.el-tag--medium {\n  height: 28px;\n  line-height: 26px;\n}\n.el-tag--medium .el-icon-close {\n  transform: scale(0.8);\n}\n.el-tag--small {\n  height: 24px;\n  padding: 0 8px;\n  line-height: 22px;\n}\n.el-tag--small .el-icon-close {\n  transform: scale(0.8);\n}\n.el-tag--mini {\n  height: 20px;\n  padding: 0 5px;\n  line-height: 19px;\n}\n.el-tag--mini .el-icon-close {\n  margin-left: -3px;\n  transform: scale(0.7);\n}\n.el-tooltip:focus:hover,\n.el-tooltip:focus:not(.focusing) {\n  outline-width: 0;\n}\n.el-tooltip__popper {\n  position: absolute;\n  padding: 10px;\n  z-index: 2000;\n  line-height: 1.2;\n  min-width: 10px;\n  word-wrap: break-word;\n}\n.el-tooltip__popper .popper__arrow,\n.el-tooltip__popper .popper__arrow::after {\n  position: absolute;\n  display: block;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid;\n}\n.el-tooltip__popper .popper__arrow {\n  border-width: 6px;\n}\n.el-tooltip__popper .popper__arrow::after {\n  content: " ";\n  border-width: 5px;\n}\n.el-tooltip__popper[x-placement^=top] {\n  margin-bottom: 12px;\n}\n.el-tooltip__popper[x-placement^=top] .popper__arrow {\n  bottom: -6px;\n  border-top-color: #303133;\n  border-bottom-width: 0;\n}\n.el-tooltip__popper[x-placement^=top] .popper__arrow::after {\n  bottom: 1px;\n  margin-left: -5px;\n  border-top-color: #303133;\n  border-bottom-width: 0;\n}\n.el-tooltip__popper[x-placement^=bottom] {\n  margin-top: 12px;\n}\n.el-tooltip__popper[x-placement^=bottom] .popper__arrow {\n  top: -6px;\n  border-top-width: 0;\n  border-bottom-color: #303133;\n}\n.el-tooltip__popper[x-placement^=bottom] .popper__arrow::after {\n  top: 1px;\n  margin-left: -5px;\n  border-top-width: 0;\n  border-bottom-color: #303133;\n}\n.el-tooltip__popper[x-placement^=right] {\n  margin-left: 12px;\n}\n.el-tooltip__popper[x-placement^=right] .popper__arrow {\n  left: -6px;\n  border-right-color: #303133;\n  border-left-width: 0;\n}\n.el-tooltip__popper[x-placement^=right] .popper__arrow::after {\n  bottom: -5px;\n  left: 1px;\n  border-right-color: #303133;\n  border-left-width: 0;\n}\n.el-tooltip__popper[x-placement^=left] {\n  margin-right: 12px;\n}\n.el-tooltip__popper[x-placement^=left] .popper__arrow {\n  right: -6px;\n  border-right-width: 0;\n  border-left-color: #303133;\n}\n.el-tooltip__popper[x-placement^=left] .popper__arrow::after {\n  right: 1px;\n  bottom: -5px;\n  margin-left: -5px;\n  border-right-width: 0;\n  border-left-color: #303133;\n}\n.el-tooltip__popper.is-dark {\n  background: #303133;\n  color: #FFF;\n}\n.el-table,\n.el-table__expanded-cell {\n  background-color: #FFF;\n}\n.el-tooltip__popper.is-light {\n  background: #FFF;\n  border: 1px solid #303133;\n}\n.el-tooltip__popper.is-light[x-placement^=top] .popper__arrow {\n  border-top-color: #303133;\n}\n.el-tooltip__popper.is-light[x-placement^=top] .popper__arrow::after {\n  border-top-color: #FFF;\n}\n.el-tooltip__popper.is-light[x-placement^=bottom] .popper__arrow {\n  border-bottom-color: #303133;\n}\n.el-tooltip__popper.is-light[x-placement^=bottom] .popper__arrow::after {\n  border-bottom-color: #FFF;\n}\n.el-tooltip__popper.is-light[x-placement^=left] .popper__arrow {\n  border-left-color: #303133;\n}\n.el-tooltip__popper.is-light[x-placement^=left] .popper__arrow::after {\n  border-left-color: #FFF;\n}\n.el-tooltip__popper.is-light[x-placement^=right] .popper__arrow {\n  border-right-color: #303133;\n}\n.el-tooltip__popper.is-light[x-placement^=right] .popper__arrow::after {\n  border-right-color: #FFF;\n}\n.el-table {\n  position: relative;\n  overflow: hidden;\n  box-sizing: border-box;\n  flex: 1;\n  width: 100%;\n  max-width: 100%;\n  font-size: 14px;\n  color: #606266;\n}\n.el-table__empty-block {\n  min-height: 60px;\n  text-align: center;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.el-table__empty-text {\n  line-height: 60px;\n  width: 50%;\n  color: #909399;\n}\n.el-table__expand-column .cell {\n  padding: 0;\n  text-align: center;\n}\n.el-table__expand-icon {\n  position: relative;\n  cursor: pointer;\n  color: #666;\n  font-size: 12px;\n  transition: transform 0.2s ease-in-out;\n  height: 20px;\n}\n.el-table__expand-icon--expanded {\n  transform: rotate(90deg);\n}\n.el-table__expand-icon > .el-icon {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  margin-left: -5px;\n  margin-top: -5px;\n}\n.el-table__expanded-cell[class*=cell] {\n  padding: 20px 50px;\n}\n.el-table__expanded-cell:hover {\n  background-color: transparent !important;\n}\n.el-table__placeholder {\n  display: inline-block;\n  width: 20px;\n}\n.el-table__append-wrapper {\n  overflow: hidden;\n}\n.el-table--fit {\n  border-right: 0;\n  border-bottom: 0;\n}\n.el-table--fit .el-table__cell.gutter {\n  border-right-width: 1px;\n}\n.el-table--scrollable-x .el-table__body-wrapper {\n  overflow-x: auto;\n}\n.el-table--scrollable-y .el-table__body-wrapper {\n  overflow-y: auto;\n}\n.el-table thead {\n  color: #909399;\n  font-weight: 500;\n}\n.el-table thead.is-group th.el-table__cell {\n  background: #F5F7FA;\n}\n.el-table .el-table__cell {\n  padding: 12px 0;\n  min-width: 0;\n  box-sizing: border-box;\n  text-overflow: ellipsis;\n  vertical-align: middle;\n  position: relative;\n  text-align: left;\n}\n.el-table .el-table__cell.is-center {\n  text-align: center;\n}\n.el-table .el-table__cell.is-right {\n  text-align: right;\n}\n.el-table .el-table__cell.gutter {\n  width: 15px;\n  border-right-width: 0;\n  border-bottom-width: 0;\n  padding: 0;\n}\n.el-table .el-table__cell.is-hidden > * {\n  visibility: hidden;\n}\n.el-table--medium .el-table__cell {\n  padding: 10px 0;\n}\n.el-table--small {\n  font-size: 12px;\n}\n.el-table--small .el-table__cell {\n  padding: 8px 0;\n}\n.el-table--mini {\n  font-size: 12px;\n}\n.el-table--mini .el-table__cell {\n  padding: 6px 0;\n}\n.el-table tr {\n  background-color: #FFF;\n}\n.el-table tr input[type=checkbox] {\n  margin: 0;\n}\n.el-table td.el-table__cell,\n.el-table th.el-table__cell.is-leaf {\n  border-bottom: 1px solid #EBEEF5;\n}\n.el-table th.el-table__cell.is-sortable {\n  cursor: pointer;\n}\n.el-table th.el-table__cell {\n  overflow: hidden;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n          user-select: none;\n  background-color: #FFF;\n}\n.el-table th.el-table__cell > .cell {\n  display: inline-block;\n  box-sizing: border-box;\n  position: relative;\n  vertical-align: middle;\n  padding-left: 10px;\n  padding-right: 10px;\n  width: 100%;\n}\n.el-table th.el-table__cell > .cell.highlight {\n  color: #409EFF;\n}\n.el-table th.el-table__cell.required > div::before {\n  display: inline-block;\n  content: "";\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: #ff4d51;\n  margin-right: 5px;\n  vertical-align: middle;\n}\n.el-table td.el-table__cell div {\n  box-sizing: border-box;\n}\n.el-table td.el-table__cell.gutter {\n  width: 0;\n}\n.el-table .cell {\n  box-sizing: border-box;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: normal;\n  word-break: break-all;\n  line-height: 23px;\n  padding-left: 10px;\n  padding-right: 10px;\n}\n.el-table .cell.el-tooltip {\n  white-space: nowrap;\n  min-width: 50px;\n}\n.el-table--border,\n.el-table--group {\n  border: 1px solid #EBEEF5;\n}\n.el-table--border::after,\n.el-table--group::after,\n.el-table::before {\n  content: \'\';\n  position: absolute;\n  background-color: #EBEEF5;\n  z-index: 1;\n}\n.el-table--border::after,\n.el-table--group::after {\n  top: 0;\n  right: 0;\n  width: 1px;\n  height: 100%;\n}\n.el-table::before {\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: 1px;\n}\n.el-table--border {\n  border-right: none;\n  border-bottom: none;\n}\n.el-table--border.el-loading-parent--relative {\n  border-color: transparent;\n}\n.el-table--border .el-table__cell,\n.el-table__body-wrapper .el-table--border.is-scrolling-left ~ .el-table__fixed {\n  border-right: 1px solid #EBEEF5;\n}\n.el-table--border .el-table__cell:first-child .cell {\n  padding-left: 10px;\n}\n.el-table--border th.el-table__cell.gutter:last-of-type {\n  border-bottom: 1px solid #EBEEF5;\n  border-bottom-width: 1px;\n}\n.el-table--border th.el-table__cell,\n.el-table__fixed-right-patch {\n  border-bottom: 1px solid #EBEEF5;\n}\n.el-table--hidden {\n  visibility: hidden;\n}\n.el-table__fixed,\n.el-table__fixed-right {\n  position: absolute;\n  top: 0;\n  left: 0;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.12);\n}\n.el-table__fixed-right::before,\n.el-table__fixed::before {\n  content: \'\';\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: 1px;\n  background-color: #EBEEF5;\n  z-index: 4;\n}\n.el-table__fixed-right-patch {\n  position: absolute;\n  top: -1px;\n  right: 0;\n  background-color: #FFF;\n}\n.el-table__fixed-right {\n  top: 0;\n  left: auto;\n  right: 0;\n}\n.el-table__fixed-right .el-table__fixed-body-wrapper,\n.el-table__fixed-right .el-table__fixed-footer-wrapper,\n.el-table__fixed-right .el-table__fixed-header-wrapper {\n  left: auto;\n  right: 0;\n}\n.el-table__fixed-header-wrapper {\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 3;\n}\n.el-table__fixed-footer-wrapper {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  z-index: 3;\n}\n.el-table__fixed-footer-wrapper tbody td.el-table__cell {\n  border-top: 1px solid #EBEEF5;\n  background-color: #F5F7FA;\n  color: #606266;\n}\n.el-table__fixed-body-wrapper {\n  position: absolute;\n  left: 0;\n  top: 37px;\n  overflow: hidden;\n  z-index: 3;\n}\n.el-table__body-wrapper,\n.el-table__footer-wrapper,\n.el-table__header-wrapper {\n  width: 100%;\n}\n.el-table__footer-wrapper {\n  margin-top: -1px;\n}\n.el-table__footer-wrapper td.el-table__cell {\n  border-top: 1px solid #EBEEF5;\n}\n.el-table__body,\n.el-table__footer,\n.el-table__header {\n  table-layout: fixed;\n  border-collapse: separate;\n}\n.el-table__footer-wrapper,\n.el-table__header-wrapper {\n  overflow: hidden;\n}\n.el-table__footer-wrapper tbody td.el-table__cell,\n.el-table__header-wrapper tbody td.el-table__cell {\n  background-color: #F5F7FA;\n  color: #606266;\n}\n.el-table__body-wrapper {\n  overflow: hidden;\n  position: relative;\n}\n.el-table__body-wrapper.is-scrolling-left ~ .el-table__fixed,\n.el-table__body-wrapper.is-scrolling-none ~ .el-table__fixed,\n.el-table__body-wrapper.is-scrolling-none ~ .el-table__fixed-right,\n.el-table__body-wrapper.is-scrolling-right ~ .el-table__fixed-right {\n  box-shadow: none;\n}\n.el-table__body-wrapper .el-table--border.is-scrolling-right ~ .el-table__fixed-right {\n  border-left: 1px solid #EBEEF5;\n}\n.el-table .caret-wrapper {\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  height: 34px;\n  width: 24px;\n  vertical-align: middle;\n  cursor: pointer;\n  overflow: initial;\n  position: relative;\n}\n.el-table .sort-caret {\n  width: 0;\n  height: 0;\n  border: 5px solid transparent;\n  position: absolute;\n  left: 7px;\n}\n.el-table .sort-caret.ascending {\n  border-bottom-color: #C0C4CC;\n  top: 5px;\n}\n.el-table .sort-caret.descending {\n  border-top-color: #C0C4CC;\n  bottom: 7px;\n}\n.el-table .ascending .sort-caret.ascending {\n  border-bottom-color: #409EFF;\n}\n.el-table .descending .sort-caret.descending {\n  border-top-color: #409EFF;\n}\n.el-table .hidden-columns {\n  visibility: hidden;\n  position: absolute;\n  z-index: -1;\n}\n.el-table--striped .el-table__body tr.el-table__row--striped td.el-table__cell {\n  background: #FAFAFA;\n}\n.el-table--striped .el-table__body tr.el-table__row--striped.current-row td.el-table__cell,\n.el-table--striped .el-table__body tr.el-table__row--striped.selection-row td.el-table__cell {\n  background-color: #ecf5ff;\n}\n.el-table__body tr.hover-row.current-row > td.el-table__cell,\n.el-table__body tr.hover-row.el-table__row--striped.current-row > td.el-table__cell,\n.el-table__body tr.hover-row.el-table__row--striped.selection-row > td.el-table__cell,\n.el-table__body tr.hover-row.el-table__row--striped > td.el-table__cell,\n.el-table__body tr.hover-row.selection-row > td.el-table__cell,\n.el-table__body tr.hover-row > td.el-table__cell {\n  background-color: #F5F7FA;\n}\n.el-table__body tr.current-row > td.el-table__cell,\n.el-table__body tr.selection-row > td.el-table__cell {\n  background-color: #ecf5ff;\n}\n.el-table__column-resize-proxy {\n  position: absolute;\n  left: 200px;\n  top: 0;\n  bottom: 0;\n  width: 0;\n  border-left: 1px solid #EBEEF5;\n  z-index: 10;\n}\n.el-table__column-filter-trigger {\n  display: inline-block;\n  line-height: 34px;\n  cursor: pointer;\n}\n.el-table__column-filter-trigger i {\n  color: #909399;\n  font-size: 12px;\n  transform: scale(0.75);\n}\n.el-table--enable-row-transition .el-table__body td.el-table__cell {\n  transition: background-color 0.25s ease;\n}\n.el-table--enable-row-hover .el-table__body tr:hover > td.el-table__cell {\n  background-color: #F5F7FA;\n}\n.el-table--fluid-height .el-table__fixed,\n.el-table--fluid-height .el-table__fixed-right {\n  bottom: 0;\n  overflow: hidden;\n}\n.el-table [class*=el-table__row--level] .el-table__expand-icon {\n  display: inline-block;\n  width: 20px;\n  line-height: 20px;\n  height: 20px;\n  text-align: center;\n  margin-right: 3px;\n}\n',""]),e.exports=n}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHZ1ZS9iYWJlbC1oZWxwZXItdnVlLWpzeC1tZXJnZS1wcm9wcy9kaXN0L2hlbHBlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvcGFnaW5hdGlvbi5jc3M/ZDBjYyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWxlbWVudC11aS9saWIvcGFnaW5hdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvdGFibGUuY3NzPzMyMWIiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VsZW1lbnQtdWkvbGliL2lucHV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9lbGVtZW50LXVpL2xpYi91dGlscy9zaGFyZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL3BhZ2luYXRpb24uY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9lbGVtZW50LXVpL2xpYi9zZWxlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VsZW1lbnQtdWkvbGliL21peGlucy9mb2N1cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWxlbWVudC11aS9saWIvdXRpbHMvc2Nyb2xsLWludG8tdmlldy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWxlbWVudC11aS9saWIvdGFnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9lbGVtZW50LXVpL2xpYi9vcHRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL3RhYmxlLmNzcyJdLCJuYW1lcyI6WyJfZXh0ZW5kcyIsIk9iamVjdCIsImFzc2lnbiIsImJpbmQiLCJhIiwiYiIsImMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJkIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJ0aGlzIiwibm9ybWFsTWVyZ2UiLCJ0b0FycmF5TWVyZ2UiLCJmdW5jdGlvbmFsTWVyZ2UiLCJtZXJnZUZuIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlZHVjZSIsImluZGV4T2YiLCJBcnJheSIsImUiLCJjb25jYXQiLCJmIiwiZyIsImgiLCJpIiwiYXBpIiwiY29udGVudCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0Iiwib3B0aW9ucyIsImxvY2FscyIsIm1vZHVsZXMiLCJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwibCIsIm0iLCJuYW1lIiwiZ2V0dGVyIiwibyIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJucyIsImNyZWF0ZSIsImtleSIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInAiLCJzIiwiMCIsIl9fd2VicGFja19leHBvcnRzX18iLCJub3JtYWxpemVDb21wb25lbnQiLCJzY3JpcHRFeHBvcnRzIiwicmVuZGVyIiwic3RhdGljUmVuZGVyRm5zIiwiZnVuY3Rpb25hbFRlbXBsYXRlIiwiaW5qZWN0U3R5bGVzIiwic2NvcGVJZCIsIm1vZHVsZUlkZW50aWZpZXIiLCJzaGFkb3dNb2RlIiwiaG9vayIsIl9jb21waWxlZCIsImZ1bmN0aW9uYWwiLCJfc2NvcGVJZCIsImNvbnRleHQiLCIkdm5vZGUiLCJzc3JDb250ZXh0IiwicGFyZW50IiwiX19WVUVfU1NSX0NPTlRFWFRfXyIsIl9yZWdpc3RlcmVkQ29tcG9uZW50cyIsImFkZCIsIl9zc3JSZWdpc3RlciIsIiRyb290IiwiJG9wdGlvbnMiLCJzaGFkb3dSb290IiwiX2luamVjdFN0eWxlcyIsIm9yaWdpbmFsUmVuZGVyIiwiZXhpc3RpbmciLCJiZWZvcmVDcmVhdGUiLCIxMCIsIjMiLCI0NSIsIjQ2IiwiNiIsIjc0IiwiX3ZtIiwiX2giLCIkY3JlYXRlRWxlbWVudCIsIl9jIiwiX3NlbGYiLCJzdGF0aWNDbGFzcyIsIm9uIiwiY2xpY2siLCJvblBhZ2VyQ2xpY2siLCJwYWdlQ291bnQiLCJjbGFzcyIsImFjdGl2ZSIsImN1cnJlbnRQYWdlIiwiZGlzYWJsZWQiLCJfdiIsIl9lIiwic2hvd1ByZXZNb3JlIiwicXVpY2twcmV2SWNvbkNsYXNzIiwibW91c2VlbnRlciIsIiRldmVudCIsIm9uTW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJfbCIsInBhZ2VycyIsInBhZ2VyIiwiX3MiLCJzaG93TmV4dE1vcmUiLCJxdWlja25leHRJY29uQ2xhc3MiLCJfd2l0aFN0cmlwcGVkIiwic3JjX3BhZ2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfIiwicHJvcHMiLCJOdW1iZXIiLCJwYWdlckNvdW50IiwiQm9vbGVhbiIsIndhdGNoIiwidmFsIiwibWV0aG9kcyIsImV2ZW50IiwidGFyZ2V0IiwidGFnTmFtZSIsIm5ld1BhZ2UiLCJ0ZXh0Q29udGVudCIsInBhZ2VyQ291bnRPZmZzZXQiLCJjbGFzc05hbWUiLCJpc05hTiIsIiRlbWl0IiwiZGlyZWN0aW9uIiwiY29tcHV0ZWQiLCJoYWxmUGFnZXJDb3VudCIsImFycmF5IiwicHVzaCIsIl9pIiwib2Zmc2V0IiwiTWF0aCIsImZsb29yIiwiX2kyIiwiX2kzIiwiZGF0YSIsImN1cnJlbnQiLCJjb21wb25lbnROb3JtYWxpemVyIiwiY29tcG9uZW50IiwiX19maWxlIiwic2VsZWN0XyIsInNlbGVjdF9kZWZhdWx0Iiwib3B0aW9uXyIsIm9wdGlvbl9kZWZhdWx0IiwiaW5wdXRfIiwiaW5wdXRfZGVmYXVsdCIsImxvY2FsZV8iLCJsb2NhbGVfZGVmYXVsdCIsInV0aWxfIiwicGFnaW5hdGlvbiIsInBhZ2VTaXplIiwidHlwZSIsInNtYWxsIiwidG90YWwiLCJ2YWxpZGF0b3IiLCJsYXlvdXQiLCJwYWdlU2l6ZXMiLCJwb3BwZXJDbGFzcyIsIlN0cmluZyIsInByZXZUZXh0IiwibmV4dFRleHQiLCJiYWNrZ3JvdW5kIiwiaGlkZU9uU2luZ2xlUGFnZSIsImludGVybmFsQ3VycmVudFBhZ2UiLCJpbnRlcm5hbFBhZ2VTaXplIiwibGFzdEVtaXR0ZWRQYWdlIiwidXNlckNoYW5nZVBhZ2VTaXplIiwiaW50ZXJuYWxQYWdlQ291bnQiLCJ0ZW1wbGF0ZSIsIlRFTVBMQVRFX01BUCIsInByZXYiLCJqdW1wZXIiLCJhdHRycyIsImhhbmRsZUN1cnJlbnRDaGFuZ2UiLCJuZXh0Iiwic2l6ZXMiLCJzbG90IiwiJHNsb3RzIiwiY29tcG9uZW50cyIsInNwbGl0IiwibWFwIiwiaXRlbSIsInRyaW0iLCJyaWdodFdyYXBwZXIiLCJoYXZlUmlnaHRXcmFwcGVyIiwiY2hpbGRyZW4iLCJmb3JFYWNoIiwiY29tcG8iLCJ1bnNoaWZ0IiwiUHJldiIsIiRwYXJlbnQiLCJOZXh0IiwiU2l6ZXMiLCJtaXhpbnMiLCJpbW1lZGlhdGUiLCJoYW5kbGVyIiwibmV3VmFsIiwib2xkVmFsIiwiaXNBcnJheSIsIl90aGlzIiwic2l6ZSIsImhhbmRsZUNoYW5nZSIsImxhYmVsIiwiRWxTZWxlY3QiLCJFbE9wdGlvbiIsInBhcnNlSW50IiwiSnVtcGVyIiwiRWxJbnB1dCIsInVzZXJJbnB1dCIsImhhbmRsZUtleXVwIiwiX3JlZiIsImtleUNvZGUiLCJoYW5kbGVJbnB1dCIsImdldFZhbGlkQ3VycmVudFBhZ2UiLCJlbWl0Q2hhbmdlIiwibWluIiwibWF4IiwibmF0aXZlT24iLCJUb3RhbCIsIlBhZ2VyIiwicmVzZXRWYWx1ZSIsInVuZGVmaW5lZCIsIl90aGlzMiIsIiRuZXh0VGljayIsImNlaWwiLCJvbGRQYWdlIiwiVnVlIiwiMTEiLCIyMSIsIjQiLCI3NSIsImlucHV0U2l6ZSIsImlucHV0RGlzYWJsZWQiLCJpbnB1dEV4Y2VlZCIsInByZXBlbmQiLCJhcHBlbmQiLCJwcmVmaXgiLCJwcmVmaXhJY29uIiwic3VmZml4Iiwic3VmZml4SWNvbiIsImNsZWFyYWJsZSIsInNob3dQYXNzd29yZCIsImhvdmVyaW5nIiwiX3QiLCJfYiIsInJlZiIsInRhYmluZGV4IiwicGFzc3dvcmRWaXNpYmxlIiwicmVhZG9ubHkiLCJhdXRvY29tcGxldGUiLCJhdXRvQ29tcGxldGUiLCJjb21wb3NpdGlvbnN0YXJ0IiwiaGFuZGxlQ29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9udXBkYXRlIiwiaGFuZGxlQ29tcG9zaXRpb25VcGRhdGUiLCJjb21wb3NpdGlvbmVuZCIsImhhbmRsZUNvbXBvc2l0aW9uRW5kIiwiaW5wdXQiLCJmb2N1cyIsImhhbmRsZUZvY3VzIiwiYmx1ciIsImhhbmRsZUJsdXIiLCJjaGFuZ2UiLCIkYXR0cnMiLCJnZXRTdWZmaXhWaXNpYmxlIiwic2hvd0NsZWFyIiwic2hvd1B3ZFZpc2libGUiLCJpc1dvcmRMaW1pdFZpc2libGUiLCJtb3VzZWRvd24iLCJwcmV2ZW50RGVmYXVsdCIsImNsZWFyIiwiaGFuZGxlUGFzc3dvcmRWaXNpYmxlIiwidGV4dExlbmd0aCIsInVwcGVyTGltaXQiLCJ2YWxpZGF0ZVN0YXRlIiwidmFsaWRhdGVJY29uIiwic3R5bGUiLCJ0ZXh0YXJlYVN0eWxlIiwiZW1pdHRlcl8iLCJlbWl0dGVyX2RlZmF1bHQiLCJtaWdyYXRpbmdfIiwibWlncmF0aW5nX2RlZmF1bHQiLCJoaWRkZW5UZXh0YXJlYSIsIkhJRERFTl9TVFlMRSIsIkNPTlRFWFRfU1RZTEUiLCJjYWxjdWxhdGVOb2RlU3R5bGluZyIsInRhcmdldEVsZW1lbnQiLCJ3aW5kb3ciLCJnZXRDb21wdXRlZFN0eWxlIiwiYm94U2l6aW5nIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInBhZGRpbmdTaXplIiwicGFyc2VGbG9hdCIsImJvcmRlclNpemUiLCJjb250ZXh0U3R5bGUiLCJqb2luIiwiY2FsY1RleHRhcmVhSGVpZ2h0IiwibWluUm93cyIsIm1heFJvd3MiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJfY2FsY3VsYXRlTm9kZVN0eWxpbmciLCJzZXRBdHRyaWJ1dGUiLCJwbGFjZWhvbGRlciIsImhlaWdodCIsInNjcm9sbEhlaWdodCIsInJlc3VsdCIsInNpbmdsZVJvd0hlaWdodCIsIm1pbkhlaWdodCIsIm1heEhlaWdodCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsIm1lcmdlXyIsIm1lcmdlX2RlZmF1bHQiLCJzaGFyZWRfIiwic3JjX2lucHV0dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfIiwiY29tcG9uZW50TmFtZSIsImluaGVyaXRBdHRycyIsImluamVjdCIsImVsRm9ybSIsImVsRm9ybUl0ZW0iLCJ0ZXh0YXJlYUNhbGNTdHlsZSIsImZvY3VzZWQiLCJpc0NvbXBvc2luZyIsInJlc2l6ZSIsImZvcm0iLCJhdXRvc2l6ZSIsInZhbGlkYXRlRXZlbnQiLCJzaG93V29yZExpbWl0IiwiX2VsRm9ybUl0ZW1TaXplIiwiZWxGb3JtSXRlbVNpemUiLCJuZWVkU3RhdHVzSWNvbiIsInN0YXR1c0ljb24iLCJ2YWxpZGF0aW5nIiwic3VjY2VzcyIsImVycm9yIiwiJEVMRU1FTlQiLCJuYXRpdmVJbnB1dFZhbHVlIiwibWF4bGVuZ3RoIiwicmVzaXplVGV4dGFyZWEiLCJkaXNwYXRjaCIsInNldE5hdGl2ZUlucHV0VmFsdWUiLCJ1cGRhdGVJY29uT2Zmc2V0IiwiZ2V0SW5wdXQiLCJnZXRNaWdyYXRpbmdDb25maWciLCJldmVudHMiLCJzZWxlY3QiLCIkaXNTZXJ2ZXIiLCIkcmVmcyIsInRleHRhcmVhIiwidGV4dCIsImxhc3RDaGFyYWN0ZXIiLCJjYWxjSWNvbk9mZnNldCIsInBsYWNlIiwiZWxMaXN0Iiwic2xpY2UiLCIkZWwiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZWwiLCJwZW5kYW50IiwidHJhbnNmb3JtIiwicXVlcnlTZWxlY3RvciIsIm9mZnNldFdpZHRoIiwicmVtb3ZlQXR0cmlidXRlIiwiY3JlYXRlZCIsIiRvbiIsIm1vdW50ZWQiLCJ1cGRhdGVkIiwiaW5zdGFsbCIsIjkiLCJpc0RlZiIsImlzS29yZWFuIiwidGVzdCIsIl9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyIsIjEyIiwiMTUiLCIxNiIsIjE5IiwiMjIiLCIzMSIsIjMzIiwiZGlyZWN0aXZlcyIsInJhd05hbWUiLCJ2aXNpYmxlIiwiZXhwcmVzc2lvbiIsInNlbGVjdGVkIiwiaXRlbVNlbGVjdGVkIiwiZ3JvdXBEaXNhYmxlZCIsImxpbWl0UmVhY2hlZCIsImhvdmVyIiwiaG92ZXJJdGVtIiwic3RvcFByb3BhZ2F0aW9uIiwic2VsZWN0T3B0aW9uQ2xpY2siLCJjdXJyZW50TGFiZWwiLCJfdHlwZW9mIiwiaXRlcmF0b3IiLCJvYmoiLCJjb25zdHJ1Y3RvciIsInNyY19vcHRpb252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18iLCJyZXF1aXJlZCIsImluZGV4IiwiaGl0U3RhdGUiLCJpc09iamVjdCIsInRvU3RyaW5nIiwidG9Mb3dlckNhc2UiLCJjdXJyZW50VmFsdWUiLCJtdWx0aXBsZSIsImNvbnRhaW5zIiwiaXNFcXVhbCIsIm11bHRpcGxlTGltaXQiLCJyZW1vdGUiLCJfc2VsZWN0IiwidmFsdWVLZXkiLCJhcnIiLCJzb21lIiwiaGFuZGxlR3JvdXBEaXNhYmxlZCIsImhvdmVySW5kZXgiLCJxdWVyeUNoYW5nZSIsInF1ZXJ5IiwiUmVnRXhwIiwiZmlsdGVyZWRPcHRpb25zQ291bnQiLCJjYWNoZWRPcHRpb25zIiwib3B0aW9uc0NvdW50IiwiYmVmb3JlRGVzdHJveSIsIl9zZWxlY3QyIiwic2VsZWN0ZWRPcHRpb25zIiwic2VsZWN0ZWRJbmRleCIsInNwbGljZSIsIm9uT3B0aW9uRGVzdHJveSIsIjM4IiwiNSIsIjYyIiwiaGFuZGxlQ2xvc2UiLCJzZWxlY3RTaXplIiwidG9nZ2xlTWVudSIsImlucHV0V2lkdGgiLCJ3aWR0aCIsImNvbGxhcHNlVGFncyIsImNsb3NhYmxlIiwic2VsZWN0RGlzYWJsZWQiLCJjb2xsYXBzZVRhZ1NpemUiLCJoaXQiLCJjbG9zZSIsImRlbGV0ZVRhZyIsInJlc2V0SW5wdXRIZWlnaHQiLCJnZXRWYWx1ZUtleSIsImZpbHRlcmFibGUiLCJpbnB1dExlbmd0aCIsImRvbVByb3BzIiwic29mdEZvY3VzIiwia2V5dXAiLCJtYW5hZ2VQbGFjZWhvbGRlciIsImtleWRvd24iLCJyZXNldElucHV0U3RhdGUiLCJfayIsImhhbmRsZU5hdmlnYXRlIiwic2VsZWN0T3B0aW9uIiwiZGVsZXRlUHJldlRhZyIsImhhbmRsZUNvbXBvc2l0aW9uIiwiY29tcG9zaW5nIiwiZGVib3VuY2VkUXVlcnlDaGFuZ2UiLCJjdXJyZW50UGxhY2Vob2xkZXIiLCJpZCIsImRlYm91bmNlZE9uSW5wdXRDaGFuZ2UiLCJpbnB1dEhvdmVyaW5nIiwibW9kZWwiLCJzZWxlY3RlZExhYmVsIiwiY2FsbGJhY2siLCIkJHYiLCJzaG93Q2xvc2UiLCJpY29uQ2xhc3MiLCJoYW5kbGVDbGVhckNsaWNrIiwiaGFuZGxlTWVudUVudGVyIiwiZG9EZXN0cm95IiwiZW1wdHlUZXh0IiwicG9wcGVyQXBwZW5kVG9Cb2R5IiwibG9hZGluZyIsImFsbG93Q3JlYXRlIiwidGFnIiwic2hvd05ld09wdGlvbiIsImVtcHR5IiwiZm9jdXNfIiwiZm9jdXNfZGVmYXVsdCIsInNlbGVjdF9kcm9wZG93bnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA2ODI4NzQ4X3JlbmRlciIsIm1pbldpZHRoIiwidnVlX3BvcHBlcl8iLCJzcmNfc2VsZWN0X2Ryb3Bkb3dudnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfIiwicGxhY2VtZW50IiwiYm91bmRhcmllc1BhZGRpbmciLCJwb3BwZXJPcHRpb25zIiwiZ3B1QWNjZWxlcmF0aW9uIiwidmlzaWJsZUFycm93IiwiYXBwZW5kVG9Cb2R5IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwicmVmZXJlbmNlRWxtIiwicmVmZXJlbmNlIiwicG9wcGVyRWxtIiwidXBkYXRlUG9wcGVyIiwiZGVzdHJveVBvcHBlciIsInNlbGVjdF9kcm9wZG93biIsInNyY19vcHRpb24iLCJ0YWdfIiwidGFnX2RlZmF1bHQiLCJzY3JvbGxiYXJfIiwic2Nyb2xsYmFyX2RlZmF1bHQiLCJkZWJvdW5jZV8iLCJkZWJvdW5jZV9kZWZhdWx0IiwiY2xpY2tvdXRzaWRlXyIsImNsaWNrb3V0c2lkZV9kZWZhdWx0IiwicmVzaXplX2V2ZW50XyIsInNjcm9sbF9pbnRvX3ZpZXdfIiwic2Nyb2xsX2ludG9fdmlld19kZWZhdWx0Iiwic3JjX3NlbGVjdHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyIsImhvdmVyT3B0aW9uIiwib3B0aW9uc0FsbERpc2FibGVkIiwiZmlsdGVyIiwib3B0aW9uIiwiZXZlcnkiLCJuYXZpZ2F0ZU9wdGlvbnMiLCJzY3JvbGxUb09wdGlvbiIsInByb3ZpZGUiLCJoYXNWYWx1ZSIsImRlYm91bmNlIiwibG9hZGluZ1RleHQiLCJub01hdGNoVGV4dCIsIm5vRGF0YVRleHQiLCJoYXNFeGlzdGluZ09wdGlvbiIsInByb3BQbGFjZWhvbGRlciIsIkVsU2VsZWN0TWVudSIsIkVsVGFnIiwiRWxTY3JvbGxiYXIiLCJDbGlja291dHNpZGUiLCJhdXRvbWF0aWNEcm9wZG93biIsInJlbW90ZU1ldGhvZCIsIkZ1bmN0aW9uIiwiZmlsdGVyTWV0aG9kIiwiZGVmYXVsdEZpcnN0T3B0aW9uIiwicmVzZXJ2ZUtleXdvcmQiLCJjcmVhdGVkTGFiZWwiLCJjcmVhdGVkU2VsZWN0ZWQiLCJpbml0aWFsSW5wdXRIZWlnaHQiLCJjYWNoZWRQbGFjZUhvbGRlciIsInByZXZpb3VzUXVlcnkiLCJtZW51VmlzaWJsZU9uRm9jdXMiLCJpc09uQ29tcG9zaXRpb24iLCJpc1NpbGVudEJsdXIiLCJoYW5kbGVRdWVyeUNoYW5nZSIsInNldFNlbGVjdGVkIiwiX3RoaXMzIiwiYnJvYWRjYXN0IiwicmVzZXRIb3ZlckluZGV4IiwiX3RoaXM0IiwiaW5wdXRzIiwiYWN0aXZlRWxlbWVudCIsImNoZWNrRGVmYXVsdEZpcnN0T3B0aW9uIiwiX3RoaXM1IiwiXyIsIl90aGlzNiIsInBvcHBlciIsIm1lbnUiLCJzY3JvbGxiYXIiLCJoYW5kbGVTY3JvbGwiLCJfdGhpczciLCJnZXRPcHRpb24iLCJpc051bGwiLCJpc1VuZGVmaW5lZCIsImNhY2hlZE9wdGlvbiIsIm5ld09wdGlvbiIsIl90aGlzOCIsIl90aGlzOSIsInNldFRpbWVvdXQiLCJkZWxldGVTZWxlY3RlZCIsInRvZ2dsZUxhc3RPcHRpb25IaXRTdGF0ZSIsInBvcCIsIl90aGlzMTAiLCJpbnB1dENoaWxkTm9kZXMiLCJjaGlsZE5vZGVzIiwidGFncyIsInRhZ3NIZWlnaHQiLCJyb3VuZCIsInNpemVJbk1hcCIsIl90aGlzMTEiLCJoYW5kbGVPcHRpb25TZWxlY3QiLCJieUNsaWNrIiwiX3RoaXMxMiIsIm9wdGlvbkluZGV4IiwiZ2V0VmFsdWVJbmRleCIsInNldFNvZnRGb2N1cyIsIm9uSW5wdXRDaGFuZ2UiLCJyZXNldElucHV0V2lkdGgiLCJoYW5kbGVSZXNpemUiLCJoYXNDcmVhdGVkIiwiX3RoaXMxMyIsIl90aGlzMTQiLCJtZWRpdW0iLCJtaW5pIiwic2VsZWN0X2NvbXBvbmVudCIsInNyY19zZWxlY3QiLCJjb250YWluZXIiLCJfdnVlMiIsInNjcm9sbFRvcCIsIm9mZnNldFBhcmVudHMiLCJwb2ludGVyIiwib2Zmc2V0UGFyZW50IiwidG9wIiwib2Zmc2V0VG9wIiwiY3VyciIsImJvdHRvbSIsIm9mZnNldEhlaWdodCIsInZpZXdSZWN0VG9wIiwidmlld1JlY3RCb3R0b20iLCJjbGllbnRIZWlnaHQiLCJfdnVlIiwiMTMyIiwic3JjX3RhZ3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyIsImRpc2FibGVUcmFuc2l0aW9ucyIsImNvbG9yIiwiZWZmZWN0IiwiaGFuZGxlQ2xpY2siLCJ0YWdTaXplIiwidGFnRWwiLCJiYWNrZ3JvdW5kQ29sb3IiLCI1NCIsIl9zZWxlY3Rfc3JjX29wdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIl0sIm1hcHBpbmdzIjoiMEZBQWEsU0FBU0EsSUFBVyxPQUFPQSxFQUFTQyxPQUFPQyxPQUFPRCxPQUFPQyxPQUFPQyxPQUFPLFNBQVNDLEdBQUcsSUFBSSxJQUFJQyxFQUFFQyxFQUFFLEVBQUVBLEVBQUVDLFVB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NEIsSUFFOUJ2UCxLQUFLLENBQUNqSSxFQUFPVSxFQUFJLDYzekJBQWc0ekIsS0FFejV6QlYsRUFBT0MsUUFBVUEiLCJmaWxlIjoianMvNC41ZDg4MDJiNDliODY0Y2QwYjEyMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9leHRlbmRzKCl7cmV0dXJuIF9leHRlbmRzPU9iamVjdC5hc3NpZ24/T2JqZWN0LmFzc2lnbi5iaW5kKCk6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWZvcih2YXIgZCBpbiBiPWFyZ3VtZW50c1tjXSxiKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLGQpJiYoYVtkXT1iW2RdKTtyZXR1cm4gYX0sX2V4dGVuZHMuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBub3JtYWxNZXJnZT1bXCJhdHRyc1wiLFwicHJvcHNcIixcImRvbVByb3BzXCJdLHRvQXJyYXlNZXJnZT1bXCJjbGFzc1wiLFwic3R5bGVcIixcImRpcmVjdGl2ZXNcIl0sZnVuY3Rpb25hbE1lcmdlPVtcIm9uXCIsXCJuYXRpdmVPblwiXSxtZXJnZUpzeFByb3BzPWZ1bmN0aW9uKGEpe3JldHVybiBhLnJlZHVjZShmdW5jdGlvbihjLGEpe2Zvcih2YXIgYiBpbiBhKWlmKCFjW2JdKWNbYl09YVtiXTtlbHNlIGlmKC0xIT09bm9ybWFsTWVyZ2UuaW5kZXhPZihiKSljW2JdPV9leHRlbmRzKHt9LGNbYl0sYVtiXSk7ZWxzZSBpZigtMSE9PXRvQXJyYXlNZXJnZS5pbmRleE9mKGIpKXt2YXIgZD1jW2JdaW5zdGFuY2VvZiBBcnJheT9jW2JdOltjW2JdXSxlPWFbYl1pbnN0YW5jZW9mIEFycmF5P2FbYl06W2FbYl1dO2NbYl09W10uY29uY2F0KGQsZSl9ZWxzZSBpZigtMSE9PWZ1bmN0aW9uYWxNZXJnZS5pbmRleE9mKGIpKXtmb3IodmFyIGYgaW4gYVtiXSlpZihjW2JdW2ZdKXt2YXIgZz1jW2JdW2ZdaW5zdGFuY2VvZiBBcnJheT9jW2JdW2ZdOltjW2JdW2ZdXSxoPWFbYl1bZl1pbnN0YW5jZW9mIEFycmF5P2FbYl1bZl06W2FbYl1bZl1dO2NbYl1bZl09W10uY29uY2F0KGcsaCl9ZWxzZSBjW2JdW2ZdPWFbYl1bZl07fWVsc2UgaWYoXCJob29rXCI9PT1iKWZvcih2YXIgaSBpbiBhW2JdKWNbYl1baV09Y1tiXVtpXT9tZXJnZUZuKGNbYl1baV0sYVtiXVtpXSk6YVtiXVtpXTtlbHNlIGNbYl09YVtiXTtyZXR1cm4gY30se30pfSxtZXJnZUZuPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGZ1bmN0aW9uKCl7YSYmYS5hcHBseSh0aGlzLGFyZ3VtZW50cyksYiYmYi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fTttb2R1bGUuZXhwb3J0cz1tZXJnZUpzeFByb3BzO1xuIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzIS4uLy4uLy4uL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcGFnaW5hdGlvbi5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIm1vZHVsZS5leHBvcnRzID1cbi8qKioqKiovIChmdW5jdGlvbihtb2R1bGVzKSB7IC8vIHdlYnBhY2tCb290c3RyYXBcbi8qKioqKiovIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbi8qKioqKiovIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbi8qKioqKiovIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuLyoqKioqKi8gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4vKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuLyoqKioqKi8gXHRcdFx0aTogbW9kdWxlSWQsXG4vKioqKioqLyBcdFx0XHRsOiBmYWxzZSxcbi8qKioqKiovIFx0XHRcdGV4cG9ydHM6IHt9XG4vKioqKioqLyBcdFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4vKioqKioqLyBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbi8qKioqKiovIFx0XHRtb2R1bGUubCA9IHRydWU7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4vKioqKioqLyBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuLyoqKioqKi8gXHR9XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4vKioqKioqLyBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4vKioqKioqLyBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4vKioqKioqLyBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuLyoqKioqKi8gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4vKioqKioqLyBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuLyoqKioqKi8gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbi8qKioqKiovIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuLyoqKioqKi8gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbi8qKioqKiovIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuLyoqKioqKi8gXHRcdHJldHVybiBucztcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuLyoqKioqKi8gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuLyoqKioqKi8gXHRcdHJldHVybiBnZXR0ZXI7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIvZGlzdC9cIjtcbi8qKioqKiovXG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNzQpO1xuLyoqKioqKi8gfSlcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqLyAoe1xuXG4vKioqLyAwOlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJhXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gbm9ybWFsaXplQ29tcG9uZW50OyB9KTtcbi8qIGdsb2JhbHMgX19WVUVfU1NSX0NPTlRFWFRfXyAqL1xuXG4vLyBJTVBPUlRBTlQ6IERvIE5PVCB1c2UgRVMyMDE1IGZlYXR1cmVzIGluIHRoaXMgZmlsZSAoZXhjZXB0IGZvciBtb2R1bGVzKS5cbi8vIFRoaXMgbW9kdWxlIGlzIGEgcnVudGltZSB1dGlsaXR5IGZvciBjbGVhbmVyIGNvbXBvbmVudCBtb2R1bGUgb3V0cHV0IGFuZCB3aWxsXG4vLyBiZSBpbmNsdWRlZCBpbiB0aGUgZmluYWwgd2VicGFjayB1c2VyIGJ1bmRsZS5cblxuZnVuY3Rpb24gbm9ybWFsaXplQ29tcG9uZW50IChcbiAgc2NyaXB0RXhwb3J0cyxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZ1bmN0aW9uYWxUZW1wbGF0ZSxcbiAgaW5qZWN0U3R5bGVzLFxuICBzY29wZUlkLFxuICBtb2R1bGVJZGVudGlmaWVyLCAvKiBzZXJ2ZXIgb25seSAqL1xuICBzaGFkb3dNb2RlIC8qIHZ1ZS1jbGkgb25seSAqL1xuKSB7XG4gIC8vIFZ1ZS5leHRlbmQgY29uc3RydWN0b3IgZXhwb3J0IGludGVyb3BcbiAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygc2NyaXB0RXhwb3J0cyA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gc2NyaXB0RXhwb3J0cy5vcHRpb25zXG4gICAgOiBzY3JpcHRFeHBvcnRzXG5cbiAgLy8gcmVuZGVyIGZ1bmN0aW9uc1xuICBpZiAocmVuZGVyKSB7XG4gICAgb3B0aW9ucy5yZW5kZXIgPSByZW5kZXJcbiAgICBvcHRpb25zLnN0YXRpY1JlbmRlckZucyA9IHN0YXRpY1JlbmRlckZuc1xuICAgIG9wdGlvbnMuX2NvbXBpbGVkID0gdHJ1ZVxuICB9XG5cbiAgLy8gZnVuY3Rpb25hbCB0ZW1wbGF0ZVxuICBpZiAoZnVuY3Rpb25hbFRlbXBsYXRlKSB7XG4gICAgb3B0aW9ucy5mdW5jdGlvbmFsID0gdHJ1ZVxuICB9XG5cbiAgLy8gc2NvcGVkSWRcbiAgaWYgKHNjb3BlSWQpIHtcbiAgICBvcHRpb25zLl9zY29wZUlkID0gJ2RhdGEtdi0nICsgc2NvcGVJZFxuICB9XG5cbiAgdmFyIGhvb2tcbiAgaWYgKG1vZHVsZUlkZW50aWZpZXIpIHsgLy8gc2VydmVyIGJ1aWxkXG4gICAgaG9vayA9IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAvLyAyLjMgaW5qZWN0aW9uXG4gICAgICBjb250ZXh0ID1cbiAgICAgICAgY29udGV4dCB8fCAvLyBjYWNoZWQgY2FsbFxuICAgICAgICAodGhpcy4kdm5vZGUgJiYgdGhpcy4kdm5vZGUuc3NyQ29udGV4dCkgfHwgLy8gc3RhdGVmdWxcbiAgICAgICAgKHRoaXMucGFyZW50ICYmIHRoaXMucGFyZW50LiR2bm9kZSAmJiB0aGlzLnBhcmVudC4kdm5vZGUuc3NyQ29udGV4dCkgLy8gZnVuY3Rpb25hbFxuICAgICAgLy8gMi4yIHdpdGggcnVuSW5OZXdDb250ZXh0OiB0cnVlXG4gICAgICBpZiAoIWNvbnRleHQgJiYgdHlwZW9mIF9fVlVFX1NTUl9DT05URVhUX18gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnRleHQgPSBfX1ZVRV9TU1JfQ09OVEVYVF9fXG4gICAgICB9XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHN0eWxlc1xuICAgICAgaWYgKGluamVjdFN0eWxlcykge1xuICAgICAgICBpbmplY3RTdHlsZXMuY2FsbCh0aGlzLCBjb250ZXh0KVxuICAgICAgfVxuICAgICAgLy8gcmVnaXN0ZXIgY29tcG9uZW50IG1vZHVsZSBpZGVudGlmaWVyIGZvciBhc3luYyBjaHVuayBpbmZlcnJlbmNlXG4gICAgICBpZiAoY29udGV4dCAmJiBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cykge1xuICAgICAgICBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cy5hZGQobW9kdWxlSWRlbnRpZmllcilcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gdXNlZCBieSBzc3IgaW4gY2FzZSBjb21wb25lbnQgaXMgY2FjaGVkIGFuZCBiZWZvcmVDcmVhdGVcbiAgICAvLyBuZXZlciBnZXRzIGNhbGxlZFxuICAgIG9wdGlvbnMuX3NzclJlZ2lzdGVyID0gaG9va1xuICB9IGVsc2UgaWYgKGluamVjdFN0eWxlcykge1xuICAgIGhvb2sgPSBzaGFkb3dNb2RlXG4gICAgICA/IGZ1bmN0aW9uICgpIHsgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgdGhpcy4kcm9vdC4kb3B0aW9ucy5zaGFkb3dSb290KSB9XG4gICAgICA6IGluamVjdFN0eWxlc1xuICB9XG5cbiAgaWYgKGhvb2spIHtcbiAgICBpZiAob3B0aW9ucy5mdW5jdGlvbmFsKSB7XG4gICAgICAvLyBmb3IgdGVtcGxhdGUtb25seSBob3QtcmVsb2FkIGJlY2F1c2UgaW4gdGhhdCBjYXNlIHRoZSByZW5kZXIgZm4gZG9lc24ndFxuICAgICAgLy8gZ28gdGhyb3VnaCB0aGUgbm9ybWFsaXplclxuICAgICAgb3B0aW9ucy5faW5qZWN0U3R5bGVzID0gaG9va1xuICAgICAgLy8gcmVnaXN0ZXIgZm9yIGZ1bmN0aW9hbCBjb21wb25lbnQgaW4gdnVlIGZpbGVcbiAgICAgIHZhciBvcmlnaW5hbFJlbmRlciA9IG9wdGlvbnMucmVuZGVyXG4gICAgICBvcHRpb25zLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcldpdGhTdHlsZUluamVjdGlvbiAoaCwgY29udGV4dCkge1xuICAgICAgICBob29rLmNhbGwoY29udGV4dClcbiAgICAgICAgcmV0dXJuIG9yaWdpbmFsUmVuZGVyKGgsIGNvbnRleHQpXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGluamVjdCBjb21wb25lbnQgcmVnaXN0cmF0aW9uIGFzIGJlZm9yZUNyZWF0ZSBob29rXG4gICAgICB2YXIgZXhpc3RpbmcgPSBvcHRpb25zLmJlZm9yZUNyZWF0ZVxuICAgICAgb3B0aW9ucy5iZWZvcmVDcmVhdGUgPSBleGlzdGluZ1xuICAgICAgICA/IFtdLmNvbmNhdChleGlzdGluZywgaG9vaylcbiAgICAgICAgOiBbaG9va11cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGV4cG9ydHM6IHNjcmlwdEV4cG9ydHMsXG4gICAgb3B0aW9uczogb3B0aW9uc1xuICB9XG59XG5cblxuLyoqKi8gfSksXG5cbi8qKiovIDEwOlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJlbGVtZW50LXVpL2xpYi9pbnB1dFwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDM6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImVsZW1lbnQtdWkvbGliL3V0aWxzL3V0aWxcIik7XG5cbi8qKiovIH0pLFxuXG4vKioqLyA0NTpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvc2VsZWN0XCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gNDY6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImVsZW1lbnQtdWkvbGliL29wdGlvblwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDY6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImVsZW1lbnQtdWkvbGliL21peGlucy9sb2NhbGVcIik7XG5cbi8qKiovIH0pLFxuXG4vKioqLyA3NDpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7XG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvcGFnaW5hdGlvbi9zcmMvcGFnZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTcyNzRmMjY3JlxudmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcbiAgICBcInVsXCIsXG4gICAgeyBzdGF0aWNDbGFzczogXCJlbC1wYWdlclwiLCBvbjogeyBjbGljazogX3ZtLm9uUGFnZXJDbGljayB9IH0sXG4gICAgW1xuICAgICAgX3ZtLnBhZ2VDb3VudCA+IDBcbiAgICAgICAgPyBfYyhcbiAgICAgICAgICAgIFwibGlcIixcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwibnVtYmVyXCIsXG4gICAgICAgICAgICAgIGNsYXNzOiB7IGFjdGl2ZTogX3ZtLmN1cnJlbnRQYWdlID09PSAxLCBkaXNhYmxlZDogX3ZtLmRpc2FibGVkIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBbX3ZtLl92KFwiMVwiKV1cbiAgICAgICAgICApXG4gICAgICAgIDogX3ZtLl9lKCksXG4gICAgICBfdm0uc2hvd1ByZXZNb3JlXG4gICAgICAgID8gX2MoXCJsaVwiLCB7XG4gICAgICAgICAgICBzdGF0aWNDbGFzczogXCJlbC1pY29uIG1vcmUgYnRuLXF1aWNrcHJldlwiLFxuICAgICAgICAgICAgY2xhc3M6IFtfdm0ucXVpY2twcmV2SWNvbkNsYXNzLCB7IGRpc2FibGVkOiBfdm0uZGlzYWJsZWQgfV0sXG4gICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICBtb3VzZWVudGVyOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBfdm0ub25Nb3VzZWVudGVyKFwibGVmdFwiKVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBtb3VzZWxlYXZlOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBfdm0ucXVpY2twcmV2SWNvbkNsYXNzID0gXCJlbC1pY29uLW1vcmVcIlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgIF92bS5fbChfdm0ucGFnZXJzLCBmdW5jdGlvbihwYWdlcikge1xuICAgICAgICByZXR1cm4gX2MoXG4gICAgICAgICAgXCJsaVwiLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGtleTogcGFnZXIsXG4gICAgICAgICAgICBzdGF0aWNDbGFzczogXCJudW1iZXJcIixcbiAgICAgICAgICAgIGNsYXNzOiB7IGFjdGl2ZTogX3ZtLmN1cnJlbnRQYWdlID09PSBwYWdlciwgZGlzYWJsZWQ6IF92bS5kaXNhYmxlZCB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBbX3ZtLl92KF92bS5fcyhwYWdlcikpXVxuICAgICAgICApXG4gICAgICB9KSxcbiAgICAgIF92bS5zaG93TmV4dE1vcmVcbiAgICAgICAgPyBfYyhcImxpXCIsIHtcbiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImVsLWljb24gbW9yZSBidG4tcXVpY2tuZXh0XCIsXG4gICAgICAgICAgICBjbGFzczogW192bS5xdWlja25leHRJY29uQ2xhc3MsIHsgZGlzYWJsZWQ6IF92bS5kaXNhYmxlZCB9XSxcbiAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgIG1vdXNlZW50ZXI6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgIF92bS5vbk1vdXNlZW50ZXIoXCJyaWdodFwiKVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBtb3VzZWxlYXZlOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBfdm0ucXVpY2tuZXh0SWNvbkNsYXNzID0gXCJlbC1pY29uLW1vcmVcIlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgIF92bS5wYWdlQ291bnQgPiAxXG4gICAgICAgID8gX2MoXG4gICAgICAgICAgICBcImxpXCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcIm51bWJlclwiLFxuICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgIGFjdGl2ZTogX3ZtLmN1cnJlbnRQYWdlID09PSBfdm0ucGFnZUNvdW50LFxuICAgICAgICAgICAgICAgIGRpc2FibGVkOiBfdm0uZGlzYWJsZWRcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKF92bS5wYWdlQ291bnQpKV1cbiAgICAgICAgICApXG4gICAgICAgIDogX3ZtLl9lKClcbiAgICBdLFxuICAgIDJcbiAgKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BhZ2luYXRpb24vc3JjL3BhZ2VyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03Mjc0ZjI2NyZcblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvcGFnaW5hdGlvbi9zcmMvcGFnZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlxuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIHBhZ2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfID0gKHtcbiAgbmFtZTogJ0VsUGFnZXInLFxuXG4gIHByb3BzOiB7XG4gICAgY3VycmVudFBhZ2U6IE51bWJlcixcblxuICAgIHBhZ2VDb3VudDogTnVtYmVyLFxuXG4gICAgcGFnZXJDb3VudDogTnVtYmVyLFxuXG4gICAgZGlzYWJsZWQ6IEJvb2xlYW5cbiAgfSxcblxuICB3YXRjaDoge1xuICAgIHNob3dQcmV2TW9yZTogZnVuY3Rpb24gc2hvd1ByZXZNb3JlKHZhbCkge1xuICAgICAgaWYgKCF2YWwpIHRoaXMucXVpY2twcmV2SWNvbkNsYXNzID0gJ2VsLWljb24tbW9yZSc7XG4gICAgfSxcbiAgICBzaG93TmV4dE1vcmU6IGZ1bmN0aW9uIHNob3dOZXh0TW9yZSh2YWwpIHtcbiAgICAgIGlmICghdmFsKSB0aGlzLnF1aWNrbmV4dEljb25DbGFzcyA9ICdlbC1pY29uLW1vcmUnO1xuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgb25QYWdlckNsaWNrOiBmdW5jdGlvbiBvblBhZ2VyQ2xpY2soZXZlbnQpIHtcbiAgICAgIHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICBpZiAodGFyZ2V0LnRhZ05hbWUgPT09ICdVTCcgfHwgdGhpcy5kaXNhYmxlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBuZXdQYWdlID0gTnVtYmVyKGV2ZW50LnRhcmdldC50ZXh0Q29udGVudCk7XG4gICAgICB2YXIgcGFnZUNvdW50ID0gdGhpcy5wYWdlQ291bnQ7XG4gICAgICB2YXIgY3VycmVudFBhZ2UgPSB0aGlzLmN1cnJlbnRQYWdlO1xuICAgICAgdmFyIHBhZ2VyQ291bnRPZmZzZXQgPSB0aGlzLnBhZ2VyQ291bnQgLSAyO1xuXG4gICAgICBpZiAodGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKCdtb3JlJykgIT09IC0xKSB7XG4gICAgICAgIGlmICh0YXJnZXQuY2xhc3NOYW1lLmluZGV4T2YoJ3F1aWNrcHJldicpICE9PSAtMSkge1xuICAgICAgICAgIG5ld1BhZ2UgPSBjdXJyZW50UGFnZSAtIHBhZ2VyQ291bnRPZmZzZXQ7XG4gICAgICAgIH0gZWxzZSBpZiAodGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKCdxdWlja25leHQnKSAhPT0gLTEpIHtcbiAgICAgICAgICBuZXdQYWdlID0gY3VycmVudFBhZ2UgKyBwYWdlckNvdW50T2Zmc2V0O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgaWYgKCFpc05hTihuZXdQYWdlKSkge1xuICAgICAgICBpZiAobmV3UGFnZSA8IDEpIHtcbiAgICAgICAgICBuZXdQYWdlID0gMTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChuZXdQYWdlID4gcGFnZUNvdW50KSB7XG4gICAgICAgICAgbmV3UGFnZSA9IHBhZ2VDb3VudDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobmV3UGFnZSAhPT0gY3VycmVudFBhZ2UpIHtcbiAgICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgbmV3UGFnZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBvbk1vdXNlZW50ZXI6IGZ1bmN0aW9uIG9uTW91c2VlbnRlcihkaXJlY3Rpb24pIHtcbiAgICAgIGlmICh0aGlzLmRpc2FibGVkKSByZXR1cm47XG4gICAgICBpZiAoZGlyZWN0aW9uID09PSAnbGVmdCcpIHtcbiAgICAgICAgdGhpcy5xdWlja3ByZXZJY29uQ2xhc3MgPSAnZWwtaWNvbi1kLWFycm93LWxlZnQnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5xdWlja25leHRJY29uQ2xhc3MgPSAnZWwtaWNvbi1kLWFycm93LXJpZ2h0JztcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBwYWdlcnM6IGZ1bmN0aW9uIHBhZ2VycygpIHtcbiAgICAgIHZhciBwYWdlckNvdW50ID0gdGhpcy5wYWdlckNvdW50O1xuICAgICAgdmFyIGhhbGZQYWdlckNvdW50ID0gKHBhZ2VyQ291bnQgLSAxKSAvIDI7XG5cbiAgICAgIHZhciBjdXJyZW50UGFnZSA9IE51bWJlcih0aGlzLmN1cnJlbnRQYWdlKTtcbiAgICAgIHZhciBwYWdlQ291bnQgPSBOdW1iZXIodGhpcy5wYWdlQ291bnQpO1xuXG4gICAgICB2YXIgc2hvd1ByZXZNb3JlID0gZmFsc2U7XG4gICAgICB2YXIgc2hvd05leHRNb3JlID0gZmFsc2U7XG5cbiAgICAgIGlmIChwYWdlQ291bnQgPiBwYWdlckNvdW50KSB7XG4gICAgICAgIGlmIChjdXJyZW50UGFnZSA+IHBhZ2VyQ291bnQgLSBoYWxmUGFnZXJDb3VudCkge1xuICAgICAgICAgIHNob3dQcmV2TW9yZSA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY3VycmVudFBhZ2UgPCBwYWdlQ291bnQgLSBoYWxmUGFnZXJDb3VudCkge1xuICAgICAgICAgIHNob3dOZXh0TW9yZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdmFyIGFycmF5ID0gW107XG5cbiAgICAgIGlmIChzaG93UHJldk1vcmUgJiYgIXNob3dOZXh0TW9yZSkge1xuICAgICAgICB2YXIgc3RhcnRQYWdlID0gcGFnZUNvdW50IC0gKHBhZ2VyQ291bnQgLSAyKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IHN0YXJ0UGFnZTsgaSA8IHBhZ2VDb3VudDsgaSsrKSB7XG4gICAgICAgICAgYXJyYXkucHVzaChpKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICghc2hvd1ByZXZNb3JlICYmIHNob3dOZXh0TW9yZSkge1xuICAgICAgICBmb3IgKHZhciBfaSA9IDI7IF9pIDwgcGFnZXJDb3VudDsgX2krKykge1xuICAgICAgICAgIGFycmF5LnB1c2goX2kpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHNob3dQcmV2TW9yZSAmJiBzaG93TmV4dE1vcmUpIHtcbiAgICAgICAgdmFyIG9mZnNldCA9IE1hdGguZmxvb3IocGFnZXJDb3VudCAvIDIpIC0gMTtcbiAgICAgICAgZm9yICh2YXIgX2kyID0gY3VycmVudFBhZ2UgLSBvZmZzZXQ7IF9pMiA8PSBjdXJyZW50UGFnZSArIG9mZnNldDsgX2kyKyspIHtcbiAgICAgICAgICBhcnJheS5wdXNoKF9pMik7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAodmFyIF9pMyA9IDI7IF9pMyA8IHBhZ2VDb3VudDsgX2kzKyspIHtcbiAgICAgICAgICBhcnJheS5wdXNoKF9pMyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5zaG93UHJldk1vcmUgPSBzaG93UHJldk1vcmU7XG4gICAgICB0aGlzLnNob3dOZXh0TW9yZSA9IHNob3dOZXh0TW9yZTtcblxuICAgICAgcmV0dXJuIGFycmF5O1xuICAgIH1cbiAgfSxcblxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjdXJyZW50OiBudWxsLFxuICAgICAgc2hvd1ByZXZNb3JlOiBmYWxzZSxcbiAgICAgIHNob3dOZXh0TW9yZTogZmFsc2UsXG4gICAgICBxdWlja25leHRJY29uQ2xhc3M6ICdlbC1pY29uLW1vcmUnLFxuICAgICAgcXVpY2twcmV2SWNvbkNsYXNzOiAnZWwtaWNvbi1tb3JlJ1xuICAgIH07XG4gIH1cbn0pO1xuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9wYWdpbmF0aW9uL3NyYy9wYWdlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXG4gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyB2YXIgc3JjX3BhZ2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfID0gKHBhZ2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfKTsgXG4vLyBFWFRFUk5BTCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1xudmFyIGNvbXBvbmVudE5vcm1hbGl6ZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BhZ2luYXRpb24vc3JjL3BhZ2VyLnZ1ZVxuXG5cblxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cblxudmFyIGNvbXBvbmVudCA9IE9iamVjdChjb21wb25lbnROb3JtYWxpemVyW1wiYVwiIC8qIGRlZmF1bHQgKi9dKShcbiAgc3JjX3BhZ2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChmYWxzZSkgeyB2YXIgYXBpOyB9XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInBhY2thZ2VzL3BhZ2luYXRpb24vc3JjL3BhZ2VyLnZ1ZVwiXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBwYWdlciA9IChjb21wb25lbnQuZXhwb3J0cyk7XG4vLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsIFwiZWxlbWVudC11aS9saWIvc2VsZWN0XCJcbnZhciBzZWxlY3RfID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0NSk7XG52YXIgc2VsZWN0X2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHNlbGVjdF8pO1xuXG4vLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsIFwiZWxlbWVudC11aS9saWIvb3B0aW9uXCJcbnZhciBvcHRpb25fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0Nik7XG52YXIgb3B0aW9uX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKG9wdGlvbl8pO1xuXG4vLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsIFwiZWxlbWVudC11aS9saWIvaW5wdXRcIlxudmFyIGlucHV0XyA9IF9fd2VicGFja19yZXF1aXJlX18oMTApO1xudmFyIGlucHV0X2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGlucHV0Xyk7XG5cbi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgXCJlbGVtZW50LXVpL2xpYi9taXhpbnMvbG9jYWxlXCJcbnZhciBsb2NhbGVfID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcbnZhciBsb2NhbGVfZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4obG9jYWxlXyk7XG5cbi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgXCJlbGVtZW50LXVpL2xpYi91dGlscy91dGlsXCJcbnZhciB1dGlsXyA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvcGFnaW5hdGlvbi9zcmMvcGFnaW5hdGlvbi5qc1xuXG5cblxuXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBwYWdpbmF0aW9uID0gKHtcbiAgbmFtZTogJ0VsUGFnaW5hdGlvbicsXG5cbiAgcHJvcHM6IHtcbiAgICBwYWdlU2l6ZToge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogMTBcbiAgICB9LFxuXG4gICAgc21hbGw6IEJvb2xlYW4sXG5cbiAgICB0b3RhbDogTnVtYmVyLFxuXG4gICAgcGFnZUNvdW50OiBOdW1iZXIsXG5cbiAgICBwYWdlckNvdW50OiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcih2YWx1ZSkge1xuICAgICAgICByZXR1cm4gKHZhbHVlIHwgMCkgPT09IHZhbHVlICYmIHZhbHVlID4gNCAmJiB2YWx1ZSA8IDIyICYmIHZhbHVlICUgMiA9PT0gMTtcbiAgICAgIH0sXG5cbiAgICAgIGRlZmF1bHQ6IDdcbiAgICB9LFxuXG4gICAgY3VycmVudFBhZ2U6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDFcbiAgICB9LFxuXG4gICAgbGF5b3V0OiB7XG4gICAgICBkZWZhdWx0OiAncHJldiwgcGFnZXIsIG5leHQsIGp1bXBlciwgLT4sIHRvdGFsJ1xuICAgIH0sXG5cbiAgICBwYWdlU2l6ZXM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7XG4gICAgICAgIHJldHVybiBbMTAsIDIwLCAzMCwgNDAsIDUwLCAxMDBdO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBwb3BwZXJDbGFzczogU3RyaW5nLFxuXG4gICAgcHJldlRleHQ6IFN0cmluZyxcblxuICAgIG5leHRUZXh0OiBTdHJpbmcsXG5cbiAgICBiYWNrZ3JvdW5kOiBCb29sZWFuLFxuXG4gICAgZGlzYWJsZWQ6IEJvb2xlYW4sXG5cbiAgICBoaWRlT25TaW5nbGVQYWdlOiBCb29sZWFuXG4gIH0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW50ZXJuYWxDdXJyZW50UGFnZTogMSxcbiAgICAgIGludGVybmFsUGFnZVNpemU6IDAsXG4gICAgICBsYXN0RW1pdHRlZFBhZ2U6IC0xLFxuICAgICAgdXNlckNoYW5nZVBhZ2VTaXplOiBmYWxzZVxuICAgIH07XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgbGF5b3V0ID0gdGhpcy5sYXlvdXQ7XG4gICAgaWYgKCFsYXlvdXQpIHJldHVybiBudWxsO1xuICAgIGlmICh0aGlzLmhpZGVPblNpbmdsZVBhZ2UgJiYgKCF0aGlzLmludGVybmFsUGFnZUNvdW50IHx8IHRoaXMuaW50ZXJuYWxQYWdlQ291bnQgPT09IDEpKSByZXR1cm4gbnVsbDtcblxuICAgIHZhciB0ZW1wbGF0ZSA9IGgoJ2RpdicsIHsgJ2NsYXNzJzogWydlbC1wYWdpbmF0aW9uJywge1xuICAgICAgICAnaXMtYmFja2dyb3VuZCc6IHRoaXMuYmFja2dyb3VuZCxcbiAgICAgICAgJ2VsLXBhZ2luYXRpb24tLXNtYWxsJzogdGhpcy5zbWFsbFxuICAgICAgfV0gfSk7XG4gICAgdmFyIFRFTVBMQVRFX01BUCA9IHtcbiAgICAgIHByZXY6IGgoJ3ByZXYnKSxcbiAgICAgIGp1bXBlcjogaCgnanVtcGVyJyksXG4gICAgICBwYWdlcjogaCgncGFnZXInLCB7XG4gICAgICAgIGF0dHJzOiB7IGN1cnJlbnRQYWdlOiB0aGlzLmludGVybmFsQ3VycmVudFBhZ2UsIHBhZ2VDb3VudDogdGhpcy5pbnRlcm5hbFBhZ2VDb3VudCwgcGFnZXJDb3VudDogdGhpcy5wYWdlckNvdW50LCBkaXNhYmxlZDogdGhpcy5kaXNhYmxlZCB9LFxuICAgICAgICBvbjoge1xuICAgICAgICAgICdjaGFuZ2UnOiB0aGlzLmhhbmRsZUN1cnJlbnRDaGFuZ2VcbiAgICAgICAgfVxuICAgICAgfSksXG4gICAgICBuZXh0OiBoKCduZXh0JyksXG4gICAgICBzaXplczogaCgnc2l6ZXMnLCB7XG4gICAgICAgIGF0dHJzOiB7IHBhZ2VTaXplczogdGhpcy5wYWdlU2l6ZXMgfVxuICAgICAgfSksXG4gICAgICBzbG90OiBoKCdzbG90JywgW3RoaXMuJHNsb3RzLmRlZmF1bHQgPyB0aGlzLiRzbG90cy5kZWZhdWx0IDogJyddKSxcbiAgICAgIHRvdGFsOiBoKCd0b3RhbCcpXG4gICAgfTtcbiAgICB2YXIgY29tcG9uZW50cyA9IGxheW91dC5zcGxpdCgnLCcpLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgcmV0dXJuIGl0ZW0udHJpbSgpO1xuICAgIH0pO1xuICAgIHZhciByaWdodFdyYXBwZXIgPSBoKCdkaXYnLCB7ICdjbGFzcyc6ICdlbC1wYWdpbmF0aW9uX19yaWdodHdyYXBwZXInIH0pO1xuICAgIHZhciBoYXZlUmlnaHRXcmFwcGVyID0gZmFsc2U7XG5cbiAgICB0ZW1wbGF0ZS5jaGlsZHJlbiA9IHRlbXBsYXRlLmNoaWxkcmVuIHx8IFtdO1xuICAgIHJpZ2h0V3JhcHBlci5jaGlsZHJlbiA9IHJpZ2h0V3JhcHBlci5jaGlsZHJlbiB8fCBbXTtcbiAgICBjb21wb25lbnRzLmZvckVhY2goZnVuY3Rpb24gKGNvbXBvKSB7XG4gICAgICBpZiAoY29tcG8gPT09ICctPicpIHtcbiAgICAgICAgaGF2ZVJpZ2h0V3JhcHBlciA9IHRydWU7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKCFoYXZlUmlnaHRXcmFwcGVyKSB7XG4gICAgICAgIHRlbXBsYXRlLmNoaWxkcmVuLnB1c2goVEVNUExBVEVfTUFQW2NvbXBvXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByaWdodFdyYXBwZXIuY2hpbGRyZW4ucHVzaChURU1QTEFURV9NQVBbY29tcG9dKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGlmIChoYXZlUmlnaHRXcmFwcGVyKSB7XG4gICAgICB0ZW1wbGF0ZS5jaGlsZHJlbi51bnNoaWZ0KHJpZ2h0V3JhcHBlcik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRlbXBsYXRlO1xuICB9LFxuXG5cbiAgY29tcG9uZW50czoge1xuICAgIFByZXY6IHtcbiAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICAgICAgcmV0dXJuIGgoXG4gICAgICAgICAgJ2J1dHRvbicsXG4gICAgICAgICAge1xuICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgdHlwZTogJ2J1dHRvbicsXG5cbiAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRoaXMuJHBhcmVudC5kaXNhYmxlZCB8fCB0aGlzLiRwYXJlbnQuaW50ZXJuYWxDdXJyZW50UGFnZSA8PSAxXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ2NsYXNzJzogJ2J0bi1wcmV2Jywgb246IHtcbiAgICAgICAgICAgICAgJ2NsaWNrJzogdGhpcy4kcGFyZW50LnByZXZcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFt0aGlzLiRwYXJlbnQucHJldlRleHQgPyBoKCdzcGFuJywgW3RoaXMuJHBhcmVudC5wcmV2VGV4dF0pIDogaCgnaScsIHsgJ2NsYXNzJzogJ2VsLWljb24gZWwtaWNvbi1hcnJvdy1sZWZ0JyB9KV1cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgTmV4dDoge1xuICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgICAgICByZXR1cm4gaChcbiAgICAgICAgICAnYnV0dG9uJyxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICB0eXBlOiAnYnV0dG9uJyxcblxuICAgICAgICAgICAgICBkaXNhYmxlZDogdGhpcy4kcGFyZW50LmRpc2FibGVkIHx8IHRoaXMuJHBhcmVudC5pbnRlcm5hbEN1cnJlbnRQYWdlID09PSB0aGlzLiRwYXJlbnQuaW50ZXJuYWxQYWdlQ291bnQgfHwgdGhpcy4kcGFyZW50LmludGVybmFsUGFnZUNvdW50ID09PSAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ2NsYXNzJzogJ2J0bi1uZXh0Jywgb246IHtcbiAgICAgICAgICAgICAgJ2NsaWNrJzogdGhpcy4kcGFyZW50Lm5leHRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFt0aGlzLiRwYXJlbnQubmV4dFRleHQgPyBoKCdzcGFuJywgW3RoaXMuJHBhcmVudC5uZXh0VGV4dF0pIDogaCgnaScsIHsgJ2NsYXNzJzogJ2VsLWljb24gZWwtaWNvbi1hcnJvdy1yaWdodCcgfSldXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIFNpemVzOiB7XG4gICAgICBtaXhpbnM6IFtsb2NhbGVfZGVmYXVsdC5hXSxcblxuICAgICAgcHJvcHM6IHtcbiAgICAgICAgcGFnZVNpemVzOiBBcnJheVxuICAgICAgfSxcblxuICAgICAgd2F0Y2g6IHtcbiAgICAgICAgcGFnZVNpemVzOiB7XG4gICAgICAgICAgaW1tZWRpYXRlOiB0cnVlLFxuICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsLCBvbGRWYWwpIHtcbiAgICAgICAgICAgIGlmIChPYmplY3QodXRpbF9bXCJ2YWx1ZUVxdWFsc1wiXSkobmV3VmFsLCBvbGRWYWwpKSByZXR1cm47XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShuZXdWYWwpKSB7XG4gICAgICAgICAgICAgIHRoaXMuJHBhcmVudC5pbnRlcm5hbFBhZ2VTaXplID0gbmV3VmFsLmluZGV4T2YodGhpcy4kcGFyZW50LnBhZ2VTaXplKSA+IC0xID8gdGhpcy4kcGFyZW50LnBhZ2VTaXplIDogdGhpcy5wYWdlU2l6ZXNbMF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuXG4gICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgcmV0dXJuIGgoXG4gICAgICAgICAgJ3NwYW4nLFxuICAgICAgICAgIHsgJ2NsYXNzJzogJ2VsLXBhZ2luYXRpb25fX3NpemVzJyB9LFxuICAgICAgICAgIFtoKFxuICAgICAgICAgICAgJ2VsLXNlbGVjdCcsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuJHBhcmVudC5pbnRlcm5hbFBhZ2VTaXplLFxuICAgICAgICAgICAgICAgIHBvcHBlckNsYXNzOiB0aGlzLiRwYXJlbnQucG9wcGVyQ2xhc3MgfHwgJycsXG4gICAgICAgICAgICAgICAgc2l6ZTogJ21pbmknLFxuXG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRoaXMuJHBhcmVudC5kaXNhYmxlZCB9LFxuICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICdpbnB1dCc6IHRoaXMuaGFuZGxlQ2hhbmdlXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBbdGhpcy5wYWdlU2l6ZXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoKCdlbC1vcHRpb24nLCB7XG4gICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgIHZhbHVlOiBpdGVtLFxuICAgICAgICAgICAgICAgICAgbGFiZWw6IGl0ZW0gKyBfdGhpcy50KCdlbC5wYWdpbmF0aW9uLnBhZ2VzaXplJykgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pXVxuICAgICAgICAgICldXG4gICAgICAgICk7XG4gICAgICB9LFxuXG5cbiAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgRWxTZWxlY3Q6IHNlbGVjdF9kZWZhdWx0LmEsXG4gICAgICAgIEVsT3B0aW9uOiBvcHRpb25fZGVmYXVsdC5hXG4gICAgICB9LFxuXG4gICAgICBtZXRob2RzOiB7XG4gICAgICAgIGhhbmRsZUNoYW5nZTogZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKHZhbCkge1xuICAgICAgICAgIGlmICh2YWwgIT09IHRoaXMuJHBhcmVudC5pbnRlcm5hbFBhZ2VTaXplKSB7XG4gICAgICAgICAgICB0aGlzLiRwYXJlbnQuaW50ZXJuYWxQYWdlU2l6ZSA9IHZhbCA9IHBhcnNlSW50KHZhbCwgMTApO1xuICAgICAgICAgICAgdGhpcy4kcGFyZW50LnVzZXJDaGFuZ2VQYWdlU2l6ZSA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLiRwYXJlbnQuJGVtaXQoJ3VwZGF0ZTpwYWdlU2l6ZScsIHZhbCk7XG4gICAgICAgICAgICB0aGlzLiRwYXJlbnQuJGVtaXQoJ3NpemUtY2hhbmdlJywgdmFsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgSnVtcGVyOiB7XG4gICAgICBtaXhpbnM6IFtsb2NhbGVfZGVmYXVsdC5hXSxcblxuICAgICAgY29tcG9uZW50czogeyBFbElucHV0OiBpbnB1dF9kZWZhdWx0LmEgfSxcblxuICAgICAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB1c2VySW5wdXQ6IG51bGxcbiAgICAgICAgfTtcbiAgICAgIH0sXG5cblxuICAgICAgd2F0Y2g6IHtcbiAgICAgICAgJyRwYXJlbnQuaW50ZXJuYWxDdXJyZW50UGFnZSc6IGZ1bmN0aW9uICRwYXJlbnRJbnRlcm5hbEN1cnJlbnRQYWdlKCkge1xuICAgICAgICAgIHRoaXMudXNlcklucHV0ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfSxcblxuICAgICAgbWV0aG9kczoge1xuICAgICAgICBoYW5kbGVLZXl1cDogZnVuY3Rpb24gaGFuZGxlS2V5dXAoX3JlZikge1xuICAgICAgICAgIHZhciBrZXlDb2RlID0gX3JlZi5rZXlDb2RlLFxuICAgICAgICAgICAgICB0YXJnZXQgPSBfcmVmLnRhcmdldDtcblxuICAgICAgICAgIC8vIENocm9tZSwgU2FmYXJpLCBGaXJlZm94IHRyaWdnZXJzIGNoYW5nZSBldmVudCBvbiBFbnRlclxuICAgICAgICAgIC8vIEhhY2sgZm9yIElFOiBodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50L2lzc3Vlcy8xMTcxMFxuICAgICAgICAgIC8vIERyb3AgdGhpcyBtZXRob2Qgd2hlbiB3ZSBubyBsb25nZXIgc3VwcG9ydHMgSUVcbiAgICAgICAgICBpZiAoa2V5Q29kZSA9PT0gMTMpIHtcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlKHRhcmdldC52YWx1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBoYW5kbGVJbnB1dDogZnVuY3Rpb24gaGFuZGxlSW5wdXQodmFsdWUpIHtcbiAgICAgICAgICB0aGlzLnVzZXJJbnB1dCA9IHZhbHVlO1xuICAgICAgICB9LFxuICAgICAgICBoYW5kbGVDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUNoYW5nZSh2YWx1ZSkge1xuICAgICAgICAgIHRoaXMuJHBhcmVudC5pbnRlcm5hbEN1cnJlbnRQYWdlID0gdGhpcy4kcGFyZW50LmdldFZhbGlkQ3VycmVudFBhZ2UodmFsdWUpO1xuICAgICAgICAgIHRoaXMuJHBhcmVudC5lbWl0Q2hhbmdlKCk7XG4gICAgICAgICAgdGhpcy51c2VySW5wdXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9LFxuXG4gICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7XG4gICAgICAgIHJldHVybiBoKFxuICAgICAgICAgICdzcGFuJyxcbiAgICAgICAgICB7ICdjbGFzcyc6ICdlbC1wYWdpbmF0aW9uX19qdW1wJyB9LFxuICAgICAgICAgIFt0aGlzLnQoJ2VsLnBhZ2luYXRpb24uZ290bycpLCBoKCdlbC1pbnB1dCcsIHtcbiAgICAgICAgICAgICdjbGFzcyc6ICdlbC1wYWdpbmF0aW9uX19lZGl0b3IgaXMtaW4tcGFnaW5hdGlvbicsXG4gICAgICAgICAgICBhdHRyczogeyBtaW46IDEsXG4gICAgICAgICAgICAgIG1heDogdGhpcy4kcGFyZW50LmludGVybmFsUGFnZUNvdW50LFxuICAgICAgICAgICAgICB2YWx1ZTogdGhpcy51c2VySW5wdXQgIT09IG51bGwgPyB0aGlzLnVzZXJJbnB1dCA6IHRoaXMuJHBhcmVudC5pbnRlcm5hbEN1cnJlbnRQYWdlLFxuICAgICAgICAgICAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRoaXMuJHBhcmVudC5kaXNhYmxlZFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG5hdGl2ZU9uOiB7XG4gICAgICAgICAgICAgICdrZXl1cCc6IHRoaXMuaGFuZGxlS2V5dXBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAnaW5wdXQnOiB0aGlzLmhhbmRsZUlucHV0LFxuICAgICAgICAgICAgICAnY2hhbmdlJzogdGhpcy5oYW5kbGVDaGFuZ2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgdGhpcy50KCdlbC5wYWdpbmF0aW9uLnBhZ2VDbGFzc2lmaWVyJyldXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIFRvdGFsOiB7XG4gICAgICBtaXhpbnM6IFtsb2NhbGVfZGVmYXVsdC5hXSxcblxuICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIHRoaXMuJHBhcmVudC50b3RhbCA9PT0gJ251bWJlcicgPyBoKFxuICAgICAgICAgICdzcGFuJyxcbiAgICAgICAgICB7ICdjbGFzcyc6ICdlbC1wYWdpbmF0aW9uX190b3RhbCcgfSxcbiAgICAgICAgICBbdGhpcy50KCdlbC5wYWdpbmF0aW9uLnRvdGFsJywgeyB0b3RhbDogdGhpcy4kcGFyZW50LnRvdGFsIH0pXVxuICAgICAgICApIDogJyc7XG4gICAgICB9XG4gICAgfSxcblxuICAgIFBhZ2VyOiBwYWdlclxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDdXJyZW50Q2hhbmdlKHZhbCkge1xuICAgICAgdGhpcy5pbnRlcm5hbEN1cnJlbnRQYWdlID0gdGhpcy5nZXRWYWxpZEN1cnJlbnRQYWdlKHZhbCk7XG4gICAgICB0aGlzLnVzZXJDaGFuZ2VQYWdlU2l6ZSA9IHRydWU7XG4gICAgICB0aGlzLmVtaXRDaGFuZ2UoKTtcbiAgICB9LFxuICAgIHByZXY6IGZ1bmN0aW9uIHByZXYoKSB7XG4gICAgICBpZiAodGhpcy5kaXNhYmxlZCkgcmV0dXJuO1xuICAgICAgdmFyIG5ld1ZhbCA9IHRoaXMuaW50ZXJuYWxDdXJyZW50UGFnZSAtIDE7XG4gICAgICB0aGlzLmludGVybmFsQ3VycmVudFBhZ2UgPSB0aGlzLmdldFZhbGlkQ3VycmVudFBhZ2UobmV3VmFsKTtcbiAgICAgIHRoaXMuJGVtaXQoJ3ByZXYtY2xpY2snLCB0aGlzLmludGVybmFsQ3VycmVudFBhZ2UpO1xuICAgICAgdGhpcy5lbWl0Q2hhbmdlKCk7XG4gICAgfSxcbiAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgaWYgKHRoaXMuZGlzYWJsZWQpIHJldHVybjtcbiAgICAgIHZhciBuZXdWYWwgPSB0aGlzLmludGVybmFsQ3VycmVudFBhZ2UgKyAxO1xuICAgICAgdGhpcy5pbnRlcm5hbEN1cnJlbnRQYWdlID0gdGhpcy5nZXRWYWxpZEN1cnJlbnRQYWdlKG5ld1ZhbCk7XG4gICAgICB0aGlzLiRlbWl0KCduZXh0LWNsaWNrJywgdGhpcy5pbnRlcm5hbEN1cnJlbnRQYWdlKTtcbiAgICAgIHRoaXMuZW1pdENoYW5nZSgpO1xuICAgIH0sXG4gICAgZ2V0VmFsaWRDdXJyZW50UGFnZTogZnVuY3Rpb24gZ2V0VmFsaWRDdXJyZW50UGFnZSh2YWx1ZSkge1xuICAgICAgdmFsdWUgPSBwYXJzZUludCh2YWx1ZSwgMTApO1xuXG4gICAgICB2YXIgaGF2ZVBhZ2VDb3VudCA9IHR5cGVvZiB0aGlzLmludGVybmFsUGFnZUNvdW50ID09PSAnbnVtYmVyJztcblxuICAgICAgdmFyIHJlc2V0VmFsdWUgPSB2b2lkIDA7XG4gICAgICBpZiAoIWhhdmVQYWdlQ291bnQpIHtcbiAgICAgICAgaWYgKGlzTmFOKHZhbHVlKSB8fCB2YWx1ZSA8IDEpIHJlc2V0VmFsdWUgPSAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHZhbHVlIDwgMSkge1xuICAgICAgICAgIHJlc2V0VmFsdWUgPSAxO1xuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlID4gdGhpcy5pbnRlcm5hbFBhZ2VDb3VudCkge1xuICAgICAgICAgIHJlc2V0VmFsdWUgPSB0aGlzLmludGVybmFsUGFnZUNvdW50O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChyZXNldFZhbHVlID09PSB1bmRlZmluZWQgJiYgaXNOYU4odmFsdWUpKSB7XG4gICAgICAgIHJlc2V0VmFsdWUgPSAxO1xuICAgICAgfSBlbHNlIGlmIChyZXNldFZhbHVlID09PSAwKSB7XG4gICAgICAgIHJlc2V0VmFsdWUgPSAxO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzZXRWYWx1ZSA9PT0gdW5kZWZpbmVkID8gdmFsdWUgOiByZXNldFZhbHVlO1xuICAgIH0sXG4gICAgZW1pdENoYW5nZTogZnVuY3Rpb24gZW1pdENoYW5nZSgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChfdGhpczIuaW50ZXJuYWxDdXJyZW50UGFnZSAhPT0gX3RoaXMyLmxhc3RFbWl0dGVkUGFnZSB8fCBfdGhpczIudXNlckNoYW5nZVBhZ2VTaXplKSB7XG4gICAgICAgICAgX3RoaXMyLiRlbWl0KCdjdXJyZW50LWNoYW5nZScsIF90aGlzMi5pbnRlcm5hbEN1cnJlbnRQYWdlKTtcbiAgICAgICAgICBfdGhpczIubGFzdEVtaXR0ZWRQYWdlID0gX3RoaXMyLmludGVybmFsQ3VycmVudFBhZ2U7XG4gICAgICAgICAgX3RoaXMyLnVzZXJDaGFuZ2VQYWdlU2l6ZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBpbnRlcm5hbFBhZ2VDb3VudDogZnVuY3Rpb24gaW50ZXJuYWxQYWdlQ291bnQoKSB7XG4gICAgICBpZiAodHlwZW9mIHRoaXMudG90YWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiBNYXRoLm1heCgxLCBNYXRoLmNlaWwodGhpcy50b3RhbCAvIHRoaXMuaW50ZXJuYWxQYWdlU2l6ZSkpO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdGhpcy5wYWdlQ291bnQgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiBNYXRoLm1heCgxLCB0aGlzLnBhZ2VDb3VudCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBjdXJyZW50UGFnZToge1xuICAgICAgaW1tZWRpYXRlOiB0cnVlLFxuICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcih2YWwpIHtcbiAgICAgICAgdGhpcy5pbnRlcm5hbEN1cnJlbnRQYWdlID0gdGhpcy5nZXRWYWxpZEN1cnJlbnRQYWdlKHZhbCk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHBhZ2VTaXplOiB7XG4gICAgICBpbW1lZGlhdGU6IHRydWUsXG4gICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHZhbCkge1xuICAgICAgICB0aGlzLmludGVybmFsUGFnZVNpemUgPSBpc05hTih2YWwpID8gMTAgOiB2YWw7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGludGVybmFsQ3VycmVudFBhZ2U6IHtcbiAgICAgIGltbWVkaWF0ZTogdHJ1ZSxcbiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsKSB7XG4gICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpjdXJyZW50UGFnZScsIG5ld1ZhbCk7XG4gICAgICAgIHRoaXMubGFzdEVtaXR0ZWRQYWdlID0gLTE7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGludGVybmFsUGFnZUNvdW50OiBmdW5jdGlvbiBpbnRlcm5hbFBhZ2VDb3VudChuZXdWYWwpIHtcbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgdmFyIG9sZFBhZ2UgPSB0aGlzLmludGVybmFsQ3VycmVudFBhZ2U7XG4gICAgICBpZiAobmV3VmFsID4gMCAmJiBvbGRQYWdlID09PSAwKSB7XG4gICAgICAgIHRoaXMuaW50ZXJuYWxDdXJyZW50UGFnZSA9IDE7XG4gICAgICB9IGVsc2UgaWYgKG9sZFBhZ2UgPiBuZXdWYWwpIHtcbiAgICAgICAgdGhpcy5pbnRlcm5hbEN1cnJlbnRQYWdlID0gbmV3VmFsID09PSAwID8gMSA6IG5ld1ZhbDtcbiAgICAgICAgdGhpcy51c2VyQ2hhbmdlUGFnZVNpemUgJiYgdGhpcy5lbWl0Q2hhbmdlKCk7XG4gICAgICB9XG4gICAgICB0aGlzLnVzZXJDaGFuZ2VQYWdlU2l6ZSA9IGZhbHNlO1xuICAgIH1cbiAgfVxufSk7XG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BhZ2luYXRpb24vaW5kZXguanNcblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xucGFnaW5hdGlvbi5pbnN0YWxsID0gZnVuY3Rpb24gKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KHBhZ2luYXRpb24ubmFtZSwgcGFnaW5hdGlvbik7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBwYWNrYWdlc19wYWdpbmF0aW9uID0gX193ZWJwYWNrX2V4cG9ydHNfX1tcImRlZmF1bHRcIl0gPSAocGFnaW5hdGlvbik7XG5cbi8qKiovIH0pXG5cbi8qKioqKiovIH0pOyIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcyEuLi8uLi8uLi9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3RhYmxlLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwibW9kdWxlLmV4cG9ydHMgPVxuLyoqKioqKi8gKGZ1bmN0aW9uKG1vZHVsZXMpIHsgLy8gd2VicGFja0Jvb3RzdHJhcFxuLyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuLyoqKioqKi8gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuLyoqKioqKi8gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4vKioqKioqLyBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbi8qKioqKiovIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4vKioqKioqLyBcdFx0XHRpOiBtb2R1bGVJZCxcbi8qKioqKiovIFx0XHRcdGw6IGZhbHNlLFxuLyoqKioqKi8gXHRcdFx0ZXhwb3J0czoge31cbi8qKioqKiovIFx0XHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbi8qKioqKiovIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuLyoqKioqKi8gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbi8qKioqKiovIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4vKioqKioqLyBcdH1cbi8qKioqKiovXG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbi8qKioqKiovIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4vKioqKioqLyBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbi8qKioqKiovIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbi8qKioqKiovIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4vKioqKioqLyBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuLyoqKioqKi8gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4vKioqKioqLyBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbi8qKioqKiovIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbi8qKioqKiovIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuLyoqKioqKi8gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4vKioqKioqLyBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbi8qKioqKiovIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuLyoqKioqKi8gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbi8qKioqKiovIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4vKioqKioqLyBcdFx0cmV0dXJuIG5zO1xuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4vKioqKioqLyBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbi8qKioqKiovIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4vKioqKioqLyBcdFx0cmV0dXJuIGdldHRlcjtcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi9kaXN0L1wiO1xuLyoqKioqKi9cbi8qKioqKiovXG4vKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLyoqKioqKi8gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSA3NSk7XG4vKioqKioqLyB9KVxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiovICh7XG5cbi8qKiovIDA6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcImFcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBub3JtYWxpemVDb21wb25lbnQ7IH0pO1xuLyogZ2xvYmFscyBfX1ZVRV9TU1JfQ09OVEVYVF9fICovXG5cbi8vIElNUE9SVEFOVDogRG8gTk9UIHVzZSBFUzIwMTUgZmVhdHVyZXMgaW4gdGhpcyBmaWxlIChleGNlcHQgZm9yIG1vZHVsZXMpLlxuLy8gVGhpcyBtb2R1bGUgaXMgYSBydW50aW1lIHV0aWxpdHkgZm9yIGNsZWFuZXIgY29tcG9uZW50IG1vZHVsZSBvdXRwdXQgYW5kIHdpbGxcbi8vIGJlIGluY2x1ZGVkIGluIHRoZSBmaW5hbCB3ZWJwYWNrIHVzZXIgYnVuZGxlLlxuXG5mdW5jdGlvbiBub3JtYWxpemVDb21wb25lbnQgKFxuICBzY3JpcHRFeHBvcnRzLFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZnVuY3Rpb25hbFRlbXBsYXRlLFxuICBpbmplY3RTdHlsZXMsXG4gIHNjb3BlSWQsXG4gIG1vZHVsZUlkZW50aWZpZXIsIC8qIHNlcnZlciBvbmx5ICovXG4gIHNoYWRvd01vZGUgLyogdnVlLWNsaSBvbmx5ICovXG4pIHtcbiAgLy8gVnVlLmV4dGVuZCBjb25zdHJ1Y3RvciBleHBvcnQgaW50ZXJvcFxuICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBzY3JpcHRFeHBvcnRzID09PSAnZnVuY3Rpb24nXG4gICAgPyBzY3JpcHRFeHBvcnRzLm9wdGlvbnNcbiAgICA6IHNjcmlwdEV4cG9ydHNcblxuICAvLyByZW5kZXIgZnVuY3Rpb25zXG4gIGlmIChyZW5kZXIpIHtcbiAgICBvcHRpb25zLnJlbmRlciA9IHJlbmRlclxuICAgIG9wdGlvbnMuc3RhdGljUmVuZGVyRm5zID0gc3RhdGljUmVuZGVyRm5zXG4gICAgb3B0aW9ucy5fY29tcGlsZWQgPSB0cnVlXG4gIH1cblxuICAvLyBmdW5jdGlvbmFsIHRlbXBsYXRlXG4gIGlmIChmdW5jdGlvbmFsVGVtcGxhdGUpIHtcbiAgICBvcHRpb25zLmZ1bmN0aW9uYWwgPSB0cnVlXG4gIH1cblxuICAvLyBzY29wZWRJZFxuICBpZiAoc2NvcGVJZCkge1xuICAgIG9wdGlvbnMuX3Njb3BlSWQgPSAnZGF0YS12LScgKyBzY29wZUlkXG4gIH1cblxuICB2YXIgaG9va1xuICBpZiAobW9kdWxlSWRlbnRpZmllcikgeyAvLyBzZXJ2ZXIgYnVpbGRcbiAgICBob29rID0gZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgIC8vIDIuMyBpbmplY3Rpb25cbiAgICAgIGNvbnRleHQgPVxuICAgICAgICBjb250ZXh0IHx8IC8vIGNhY2hlZCBjYWxsXG4gICAgICAgICh0aGlzLiR2bm9kZSAmJiB0aGlzLiR2bm9kZS5zc3JDb250ZXh0KSB8fCAvLyBzdGF0ZWZ1bFxuICAgICAgICAodGhpcy5wYXJlbnQgJiYgdGhpcy5wYXJlbnQuJHZub2RlICYmIHRoaXMucGFyZW50LiR2bm9kZS5zc3JDb250ZXh0KSAvLyBmdW5jdGlvbmFsXG4gICAgICAvLyAyLjIgd2l0aCBydW5Jbk5ld0NvbnRleHQ6IHRydWVcbiAgICAgIGlmICghY29udGV4dCAmJiB0eXBlb2YgX19WVUVfU1NSX0NPTlRFWFRfXyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29udGV4dCA9IF9fVlVFX1NTUl9DT05URVhUX19cbiAgICAgIH1cbiAgICAgIC8vIGluamVjdCBjb21wb25lbnQgc3R5bGVzXG4gICAgICBpZiAoaW5qZWN0U3R5bGVzKSB7XG4gICAgICAgIGluamVjdFN0eWxlcy5jYWxsKHRoaXMsIGNvbnRleHQpXG4gICAgICB9XG4gICAgICAvLyByZWdpc3RlciBjb21wb25lbnQgbW9kdWxlIGlkZW50aWZpZXIgZm9yIGFzeW5jIGNodW5rIGluZmVycmVuY2VcbiAgICAgIGlmIChjb250ZXh0ICYmIGNvbnRleHQuX3JlZ2lzdGVyZWRDb21wb25lbnRzKSB7XG4gICAgICAgIGNvbnRleHQuX3JlZ2lzdGVyZWRDb21wb25lbnRzLmFkZChtb2R1bGVJZGVudGlmaWVyKVxuICAgICAgfVxuICAgIH1cbiAgICAvLyB1c2VkIGJ5IHNzciBpbiBjYXNlIGNvbXBvbmVudCBpcyBjYWNoZWQgYW5kIGJlZm9yZUNyZWF0ZVxuICAgIC8vIG5ldmVyIGdldHMgY2FsbGVkXG4gICAgb3B0aW9ucy5fc3NyUmVnaXN0ZXIgPSBob29rXG4gIH0gZWxzZSBpZiAoaW5qZWN0U3R5bGVzKSB7XG4gICAgaG9vayA9IHNoYWRvd01vZGVcbiAgICAgID8gZnVuY3Rpb24gKCkgeyBpbmplY3RTdHlsZXMuY2FsbCh0aGlzLCB0aGlzLiRyb290LiRvcHRpb25zLnNoYWRvd1Jvb3QpIH1cbiAgICAgIDogaW5qZWN0U3R5bGVzXG4gIH1cblxuICBpZiAoaG9vaykge1xuICAgIGlmIChvcHRpb25zLmZ1bmN0aW9uYWwpIHtcbiAgICAgIC8vIGZvciB0ZW1wbGF0ZS1vbmx5IGhvdC1yZWxvYWQgYmVjYXVzZSBpbiB0aGF0IGNhc2UgdGhlIHJlbmRlciBmbiBkb2Vzbid0XG4gICAgICAvLyBnbyB0aHJvdWdoIHRoZSBub3JtYWxpemVyXG4gICAgICBvcHRpb25zLl9pbmplY3RTdHlsZXMgPSBob29rXG4gICAgICAvLyByZWdpc3RlciBmb3IgZnVuY3Rpb2FsIGNvbXBvbmVudCBpbiB2dWUgZmlsZVxuICAgICAgdmFyIG9yaWdpbmFsUmVuZGVyID0gb3B0aW9ucy5yZW5kZXJcbiAgICAgIG9wdGlvbnMucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyV2l0aFN0eWxlSW5qZWN0aW9uIChoLCBjb250ZXh0KSB7XG4gICAgICAgIGhvb2suY2FsbChjb250ZXh0KVxuICAgICAgICByZXR1cm4gb3JpZ2luYWxSZW5kZXIoaCwgY29udGV4dClcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCByZWdpc3RyYXRpb24gYXMgYmVmb3JlQ3JlYXRlIGhvb2tcbiAgICAgIHZhciBleGlzdGluZyA9IG9wdGlvbnMuYmVmb3JlQ3JlYXRlXG4gICAgICBvcHRpb25zLmJlZm9yZUNyZWF0ZSA9IGV4aXN0aW5nXG4gICAgICAgID8gW10uY29uY2F0KGV4aXN0aW5nLCBob29rKVxuICAgICAgICA6IFtob29rXVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZXhwb3J0czogc2NyaXB0RXhwb3J0cyxcbiAgICBvcHRpb25zOiBvcHRpb25zXG4gIH1cbn1cblxuXG4vKioqLyB9KSxcblxuLyoqKi8gMTE6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImVsZW1lbnQtdWkvbGliL21peGlucy9taWdyYXRpbmdcIik7XG5cbi8qKiovIH0pLFxuXG4vKioqLyAyMTpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvdXRpbHMvc2hhcmVkXCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gNDpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvbWl4aW5zL2VtaXR0ZXJcIik7XG5cbi8qKiovIH0pLFxuXG4vKioqLyA3NTpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7XG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvaW5wdXQvc3JjL2lucHV0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zNDNkZDc3NCZcbnZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJkaXZcIixcbiAgICB7XG4gICAgICBjbGFzczogW1xuICAgICAgICBfdm0udHlwZSA9PT0gXCJ0ZXh0YXJlYVwiID8gXCJlbC10ZXh0YXJlYVwiIDogXCJlbC1pbnB1dFwiLFxuICAgICAgICBfdm0uaW5wdXRTaXplID8gXCJlbC1pbnB1dC0tXCIgKyBfdm0uaW5wdXRTaXplIDogXCJcIixcbiAgICAgICAge1xuICAgICAgICAgIFwiaXMtZGlzYWJsZWRcIjogX3ZtLmlucHV0RGlzYWJsZWQsXG4gICAgICAgICAgXCJpcy1leGNlZWRcIjogX3ZtLmlucHV0RXhjZWVkLFxuICAgICAgICAgIFwiZWwtaW5wdXQtZ3JvdXBcIjogX3ZtLiRzbG90cy5wcmVwZW5kIHx8IF92bS4kc2xvdHMuYXBwZW5kLFxuICAgICAgICAgIFwiZWwtaW5wdXQtZ3JvdXAtLWFwcGVuZFwiOiBfdm0uJHNsb3RzLmFwcGVuZCxcbiAgICAgICAgICBcImVsLWlucHV0LWdyb3VwLS1wcmVwZW5kXCI6IF92bS4kc2xvdHMucHJlcGVuZCxcbiAgICAgICAgICBcImVsLWlucHV0LS1wcmVmaXhcIjogX3ZtLiRzbG90cy5wcmVmaXggfHwgX3ZtLnByZWZpeEljb24sXG4gICAgICAgICAgXCJlbC1pbnB1dC0tc3VmZml4XCI6XG4gICAgICAgICAgICBfdm0uJHNsb3RzLnN1ZmZpeCB8fFxuICAgICAgICAgICAgX3ZtLnN1ZmZpeEljb24gfHxcbiAgICAgICAgICAgIF92bS5jbGVhcmFibGUgfHxcbiAgICAgICAgICAgIF92bS5zaG93UGFzc3dvcmRcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIG9uOiB7XG4gICAgICAgIG1vdXNlZW50ZXI6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgIF92bS5ob3ZlcmluZyA9IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgbW91c2VsZWF2ZTogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgX3ZtLmhvdmVyaW5nID0gZmFsc2VcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgW1xuICAgICAgX3ZtLnR5cGUgIT09IFwidGV4dGFyZWFcIlxuICAgICAgICA/IFtcbiAgICAgICAgICAgIF92bS4kc2xvdHMucHJlcGVuZFxuICAgICAgICAgICAgICA/IF9jKFxuICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZWwtaW5wdXQtZ3JvdXBfX3ByZXBlbmRcIiB9LFxuICAgICAgICAgICAgICAgICAgW192bS5fdChcInByZXBlbmRcIildLFxuICAgICAgICAgICAgICAgICAgMlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgIF92bS50eXBlICE9PSBcInRleHRhcmVhXCJcbiAgICAgICAgICAgICAgPyBfYyhcbiAgICAgICAgICAgICAgICAgIFwiaW5wdXRcIixcbiAgICAgICAgICAgICAgICAgIF92bS5fYihcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgIHJlZjogXCJpbnB1dFwiLFxuICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImVsLWlucHV0X19pbm5lclwiLFxuICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YWJpbmRleDogX3ZtLnRhYmluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogX3ZtLnNob3dQYXNzd29yZFxuICAgICAgICAgICAgICAgICAgICAgICAgICA/IF92bS5wYXNzd29yZFZpc2libGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcInBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0udHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiBfdm0uaW5wdXREaXNhYmxlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRvbmx5OiBfdm0ucmVhZG9ubHksXG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRvY29tcGxldGU6IF92bS5hdXRvQ29tcGxldGUgfHwgX3ZtLmF1dG9jb21wbGV0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiBfdm0ubGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wb3NpdGlvbnN0YXJ0OiBfdm0uaGFuZGxlQ29tcG9zaXRpb25TdGFydCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBvc2l0aW9udXBkYXRlOiBfdm0uaGFuZGxlQ29tcG9zaXRpb25VcGRhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wb3NpdGlvbmVuZDogX3ZtLmhhbmRsZUNvbXBvc2l0aW9uRW5kLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IF92bS5oYW5kbGVJbnB1dCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvY3VzOiBfdm0uaGFuZGxlRm9jdXMsXG4gICAgICAgICAgICAgICAgICAgICAgICBibHVyOiBfdm0uaGFuZGxlQmx1cixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogX3ZtLmhhbmRsZUNoYW5nZVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJpbnB1dFwiLFxuICAgICAgICAgICAgICAgICAgICBfdm0uJGF0dHJzLFxuICAgICAgICAgICAgICAgICAgICBmYWxzZVxuICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgIF92bS4kc2xvdHMucHJlZml4IHx8IF92bS5wcmVmaXhJY29uXG4gICAgICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgICAgICBcInNwYW5cIixcbiAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZWwtaW5wdXRfX3ByZWZpeFwiIH0sXG4gICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgIF92bS5fdChcInByZWZpeFwiKSxcbiAgICAgICAgICAgICAgICAgICAgX3ZtLnByZWZpeEljb25cbiAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwiaVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImVsLWlucHV0X19pY29uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiBfdm0ucHJlZml4SWNvblxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgMlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgIF92bS5nZXRTdWZmaXhWaXNpYmxlKClcbiAgICAgICAgICAgICAgPyBfYyhcInNwYW5cIiwgeyBzdGF0aWNDbGFzczogXCJlbC1pbnB1dF9fc3VmZml4XCIgfSwgW1xuICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgIFwic3BhblwiLFxuICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImVsLWlucHV0X19zdWZmaXgtaW5uZXJcIiB9LFxuICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgIV92bS5zaG93Q2xlYXIgfHxcbiAgICAgICAgICAgICAgICAgICAgICAhX3ZtLnNob3dQd2RWaXNpYmxlIHx8XG4gICAgICAgICAgICAgICAgICAgICAgIV92bS5pc1dvcmRMaW1pdFZpc2libGVcbiAgICAgICAgICAgICAgICAgICAgICAgID8gW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdChcInN1ZmZpeFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uc3VmZml4SWNvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcImlcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImVsLWlucHV0X19pY29uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IF92bS5zdWZmaXhJY29uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLnNob3dDbGVhclxuICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcImlcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJlbC1pbnB1dF9faWNvbiBlbC1pY29uLWNpcmNsZS1jbG9zZSBlbC1pbnB1dF9fY2xlYXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW91c2Vkb3duOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogX3ZtLmNsZWFyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uc2hvd1B3ZFZpc2libGVcbiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoXCJpXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZWwtaW5wdXRfX2ljb24gZWwtaWNvbi12aWV3IGVsLWlucHV0X19jbGVhclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uaGFuZGxlUGFzc3dvcmRWaXNpYmxlIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLmlzV29yZExpbWl0VmlzaWJsZVxuICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcInNwYW5cIiwgeyBzdGF0aWNDbGFzczogXCJlbC1pbnB1dF9fY291bnRcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNwYW5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZWwtaW5wdXRfX2NvdW50LWlubmVyXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS50ZXh0TGVuZ3RoKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIi9cIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLnVwcGVyTGltaXQpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIDJcbiAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICBfdm0udmFsaWRhdGVTdGF0ZVxuICAgICAgICAgICAgICAgICAgICA/IF9jKFwiaVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJlbC1pbnB1dF9faWNvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IFtcImVsLWlucHV0X192YWxpZGF0ZUljb25cIiwgX3ZtLnZhbGlkYXRlSWNvbl1cbiAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgIF92bS4kc2xvdHMuYXBwZW5kXG4gICAgICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJlbC1pbnB1dC1ncm91cF9fYXBwZW5kXCIgfSxcbiAgICAgICAgICAgICAgICAgIFtfdm0uX3QoXCJhcHBlbmRcIildLFxuICAgICAgICAgICAgICAgICAgMlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgOiBfdm0uX2UoKVxuICAgICAgICAgIF1cbiAgICAgICAgOiBfYyhcbiAgICAgICAgICAgIFwidGV4dGFyZWFcIixcbiAgICAgICAgICAgIF92bS5fYihcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJlZjogXCJ0ZXh0YXJlYVwiLFxuICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImVsLXRleHRhcmVhX19pbm5lclwiLFxuICAgICAgICAgICAgICAgIHN0eWxlOiBfdm0udGV4dGFyZWFTdHlsZSxcbiAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgdGFiaW5kZXg6IF92bS50YWJpbmRleCxcbiAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiBfdm0uaW5wdXREaXNhYmxlZCxcbiAgICAgICAgICAgICAgICAgIHJlYWRvbmx5OiBfdm0ucmVhZG9ubHksXG4gICAgICAgICAgICAgICAgICBhdXRvY29tcGxldGU6IF92bS5hdXRvQ29tcGxldGUgfHwgX3ZtLmF1dG9jb21wbGV0ZSxcbiAgICAgICAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiBfdm0ubGFiZWxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICBjb21wb3NpdGlvbnN0YXJ0OiBfdm0uaGFuZGxlQ29tcG9zaXRpb25TdGFydCxcbiAgICAgICAgICAgICAgICAgIGNvbXBvc2l0aW9udXBkYXRlOiBfdm0uaGFuZGxlQ29tcG9zaXRpb25VcGRhdGUsXG4gICAgICAgICAgICAgICAgICBjb21wb3NpdGlvbmVuZDogX3ZtLmhhbmRsZUNvbXBvc2l0aW9uRW5kLFxuICAgICAgICAgICAgICAgICAgaW5wdXQ6IF92bS5oYW5kbGVJbnB1dCxcbiAgICAgICAgICAgICAgICAgIGZvY3VzOiBfdm0uaGFuZGxlRm9jdXMsXG4gICAgICAgICAgICAgICAgICBibHVyOiBfdm0uaGFuZGxlQmx1cixcbiAgICAgICAgICAgICAgICAgIGNoYW5nZTogX3ZtLmhhbmRsZUNoYW5nZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJ0ZXh0YXJlYVwiLFxuICAgICAgICAgICAgICBfdm0uJGF0dHJzLFxuICAgICAgICAgICAgICBmYWxzZVxuICAgICAgICAgICAgKVxuICAgICAgICAgICksXG4gICAgICBfdm0uaXNXb3JkTGltaXRWaXNpYmxlICYmIF92bS50eXBlID09PSBcInRleHRhcmVhXCJcbiAgICAgICAgPyBfYyhcInNwYW5cIiwgeyBzdGF0aWNDbGFzczogXCJlbC1pbnB1dF9fY291bnRcIiB9LCBbXG4gICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS50ZXh0TGVuZ3RoKSArIFwiL1wiICsgX3ZtLl9zKF92bS51cHBlckxpbWl0KSlcbiAgICAgICAgICBdKVxuICAgICAgICA6IF92bS5fZSgpXG4gICAgXSxcbiAgICAyXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9pbnB1dC9zcmMvaW5wdXQudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTM0M2RkNzc0JlxuXG4vLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsIFwiZWxlbWVudC11aS9saWIvbWl4aW5zL2VtaXR0ZXJcIlxudmFyIGVtaXR0ZXJfID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcbnZhciBlbWl0dGVyX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGVtaXR0ZXJfKTtcblxuLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCBcImVsZW1lbnQtdWkvbGliL21peGlucy9taWdyYXRpbmdcIlxudmFyIG1pZ3JhdGluZ18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDExKTtcbnZhciBtaWdyYXRpbmdfZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4obWlncmF0aW5nXyk7XG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvaW5wdXQvc3JjL2NhbGNUZXh0YXJlYUhlaWdodC5qc1xudmFyIGhpZGRlblRleHRhcmVhID0gdm9pZCAwO1xuXG52YXIgSElEREVOX1NUWUxFID0gJ1xcbiAgaGVpZ2h0OjAgIWltcG9ydGFudDtcXG4gIHZpc2liaWxpdHk6aGlkZGVuICFpbXBvcnRhbnQ7XFxuICBvdmVyZmxvdzpoaWRkZW4gIWltcG9ydGFudDtcXG4gIHBvc2l0aW9uOmFic29sdXRlICFpbXBvcnRhbnQ7XFxuICB6LWluZGV4Oi0xMDAwICFpbXBvcnRhbnQ7XFxuICB0b3A6MCAhaW1wb3J0YW50O1xcbiAgcmlnaHQ6MCAhaW1wb3J0YW50XFxuJztcblxudmFyIENPTlRFWFRfU1RZTEUgPSBbJ2xldHRlci1zcGFjaW5nJywgJ2xpbmUtaGVpZ2h0JywgJ3BhZGRpbmctdG9wJywgJ3BhZGRpbmctYm90dG9tJywgJ2ZvbnQtZmFtaWx5JywgJ2ZvbnQtd2VpZ2h0JywgJ2ZvbnQtc2l6ZScsICd0ZXh0LXJlbmRlcmluZycsICd0ZXh0LXRyYW5zZm9ybScsICd3aWR0aCcsICd0ZXh0LWluZGVudCcsICdwYWRkaW5nLWxlZnQnLCAncGFkZGluZy1yaWdodCcsICdib3JkZXItd2lkdGgnLCAnYm94LXNpemluZyddO1xuXG5mdW5jdGlvbiBjYWxjdWxhdGVOb2RlU3R5bGluZyh0YXJnZXRFbGVtZW50KSB7XG4gIHZhciBzdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRhcmdldEVsZW1lbnQpO1xuXG4gIHZhciBib3hTaXppbmcgPSBzdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCdib3gtc2l6aW5nJyk7XG5cbiAgdmFyIHBhZGRpbmdTaXplID0gcGFyc2VGbG9hdChzdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCdwYWRkaW5nLWJvdHRvbScpKSArIHBhcnNlRmxvYXQoc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgncGFkZGluZy10b3AnKSk7XG5cbiAgdmFyIGJvcmRlclNpemUgPSBwYXJzZUZsb2F0KHN0eWxlLmdldFByb3BlcnR5VmFsdWUoJ2JvcmRlci1ib3R0b20td2lkdGgnKSkgKyBwYXJzZUZsb2F0KHN0eWxlLmdldFByb3BlcnR5VmFsdWUoJ2JvcmRlci10b3Atd2lkdGgnKSk7XG5cbiAgdmFyIGNvbnRleHRTdHlsZSA9IENPTlRFWFRfU1RZTEUubWFwKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIG5hbWUgKyAnOicgKyBzdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpO1xuICB9KS5qb2luKCc7Jyk7XG5cbiAgcmV0dXJuIHsgY29udGV4dFN0eWxlOiBjb250ZXh0U3R5bGUsIHBhZGRpbmdTaXplOiBwYWRkaW5nU2l6ZSwgYm9yZGVyU2l6ZTogYm9yZGVyU2l6ZSwgYm94U2l6aW5nOiBib3hTaXppbmcgfTtcbn1cblxuZnVuY3Rpb24gY2FsY1RleHRhcmVhSGVpZ2h0KHRhcmdldEVsZW1lbnQpIHtcbiAgdmFyIG1pblJvd3MgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDE7XG4gIHZhciBtYXhSb3dzID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBudWxsO1xuXG4gIGlmICghaGlkZGVuVGV4dGFyZWEpIHtcbiAgICBoaWRkZW5UZXh0YXJlYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChoaWRkZW5UZXh0YXJlYSk7XG4gIH1cblxuICB2YXIgX2NhbGN1bGF0ZU5vZGVTdHlsaW5nID0gY2FsY3VsYXRlTm9kZVN0eWxpbmcodGFyZ2V0RWxlbWVudCksXG4gICAgICBwYWRkaW5nU2l6ZSA9IF9jYWxjdWxhdGVOb2RlU3R5bGluZy5wYWRkaW5nU2l6ZSxcbiAgICAgIGJvcmRlclNpemUgPSBfY2FsY3VsYXRlTm9kZVN0eWxpbmcuYm9yZGVyU2l6ZSxcbiAgICAgIGJveFNpemluZyA9IF9jYWxjdWxhdGVOb2RlU3R5bGluZy5ib3hTaXppbmcsXG4gICAgICBjb250ZXh0U3R5bGUgPSBfY2FsY3VsYXRlTm9kZVN0eWxpbmcuY29udGV4dFN0eWxlO1xuXG4gIGhpZGRlblRleHRhcmVhLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCBjb250ZXh0U3R5bGUgKyAnOycgKyBISURERU5fU1RZTEUpO1xuICBoaWRkZW5UZXh0YXJlYS52YWx1ZSA9IHRhcmdldEVsZW1lbnQudmFsdWUgfHwgdGFyZ2V0RWxlbWVudC5wbGFjZWhvbGRlciB8fCAnJztcblxuICB2YXIgaGVpZ2h0ID0gaGlkZGVuVGV4dGFyZWEuc2Nyb2xsSGVpZ2h0O1xuICB2YXIgcmVzdWx0ID0ge307XG5cbiAgaWYgKGJveFNpemluZyA9PT0gJ2JvcmRlci1ib3gnKSB7XG4gICAgaGVpZ2h0ID0gaGVpZ2h0ICsgYm9yZGVyU2l6ZTtcbiAgfSBlbHNlIGlmIChib3hTaXppbmcgPT09ICdjb250ZW50LWJveCcpIHtcbiAgICBoZWlnaHQgPSBoZWlnaHQgLSBwYWRkaW5nU2l6ZTtcbiAgfVxuXG4gIGhpZGRlblRleHRhcmVhLnZhbHVlID0gJyc7XG4gIHZhciBzaW5nbGVSb3dIZWlnaHQgPSBoaWRkZW5UZXh0YXJlYS5zY3JvbGxIZWlnaHQgLSBwYWRkaW5nU2l6ZTtcblxuICBpZiAobWluUm93cyAhPT0gbnVsbCkge1xuICAgIHZhciBtaW5IZWlnaHQgPSBzaW5nbGVSb3dIZWlnaHQgKiBtaW5Sb3dzO1xuICAgIGlmIChib3hTaXppbmcgPT09ICdib3JkZXItYm94Jykge1xuICAgICAgbWluSGVpZ2h0ID0gbWluSGVpZ2h0ICsgcGFkZGluZ1NpemUgKyBib3JkZXJTaXplO1xuICAgIH1cbiAgICBoZWlnaHQgPSBNYXRoLm1heChtaW5IZWlnaHQsIGhlaWdodCk7XG4gICAgcmVzdWx0Lm1pbkhlaWdodCA9IG1pbkhlaWdodCArICdweCc7XG4gIH1cbiAgaWYgKG1heFJvd3MgIT09IG51bGwpIHtcbiAgICB2YXIgbWF4SGVpZ2h0ID0gc2luZ2xlUm93SGVpZ2h0ICogbWF4Um93cztcbiAgICBpZiAoYm94U2l6aW5nID09PSAnYm9yZGVyLWJveCcpIHtcbiAgICAgIG1heEhlaWdodCA9IG1heEhlaWdodCArIHBhZGRpbmdTaXplICsgYm9yZGVyU2l6ZTtcbiAgICB9XG4gICAgaGVpZ2h0ID0gTWF0aC5taW4obWF4SGVpZ2h0LCBoZWlnaHQpO1xuICB9XG4gIHJlc3VsdC5oZWlnaHQgPSBoZWlnaHQgKyAncHgnO1xuICBoaWRkZW5UZXh0YXJlYS5wYXJlbnROb2RlICYmIGhpZGRlblRleHRhcmVhLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaGlkZGVuVGV4dGFyZWEpO1xuICBoaWRkZW5UZXh0YXJlYSA9IG51bGw7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCBcImVsZW1lbnQtdWkvbGliL3V0aWxzL21lcmdlXCJcbnZhciBtZXJnZV8gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpO1xudmFyIG1lcmdlX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKG1lcmdlXyk7XG5cbi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgXCJlbGVtZW50LXVpL2xpYi91dGlscy9zaGFyZWRcIlxudmFyIHNoYXJlZF8gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIxKTtcblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvaW5wdXQvc3JjL2lucHV0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cblxuXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIGlucHV0dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfID0gKHtcbiAgbmFtZTogJ0VsSW5wdXQnLFxuXG4gIGNvbXBvbmVudE5hbWU6ICdFbElucHV0JyxcblxuICBtaXhpbnM6IFtlbWl0dGVyX2RlZmF1bHQuYSwgbWlncmF0aW5nX2RlZmF1bHQuYV0sXG5cbiAgaW5oZXJpdEF0dHJzOiBmYWxzZSxcblxuICBpbmplY3Q6IHtcbiAgICBlbEZvcm06IHtcbiAgICAgIGRlZmF1bHQ6ICcnXG4gICAgfSxcbiAgICBlbEZvcm1JdGVtOiB7XG4gICAgICBkZWZhdWx0OiAnJ1xuICAgIH1cbiAgfSxcblxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0ZXh0YXJlYUNhbGNTdHlsZToge30sXG4gICAgICBob3ZlcmluZzogZmFsc2UsXG4gICAgICBmb2N1c2VkOiBmYWxzZSxcbiAgICAgIGlzQ29tcG9zaW5nOiBmYWxzZSxcbiAgICAgIHBhc3N3b3JkVmlzaWJsZTogZmFsc2VcbiAgICB9O1xuICB9LFxuXG5cbiAgcHJvcHM6IHtcbiAgICB2YWx1ZTogW1N0cmluZywgTnVtYmVyXSxcbiAgICBzaXplOiBTdHJpbmcsXG4gICAgcmVzaXplOiBTdHJpbmcsXG4gICAgZm9ybTogU3RyaW5nLFxuICAgIGRpc2FibGVkOiBCb29sZWFuLFxuICAgIHJlYWRvbmx5OiBCb29sZWFuLFxuICAgIHR5cGU6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICd0ZXh0J1xuICAgIH0sXG4gICAgYXV0b3NpemU6IHtcbiAgICAgIHR5cGU6IFtCb29sZWFuLCBPYmplY3RdLFxuICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICB9LFxuICAgIGF1dG9jb21wbGV0ZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ29mZidcbiAgICB9LFxuICAgIC8qKiBARGVwcmVjYXRlZCBpbiBuZXh0IG1ham9yIHZlcnNpb24gKi9cbiAgICBhdXRvQ29tcGxldGU6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCkge1xuICAgICAgICAgZmFsc2UgJiYgZmFsc2U7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0sXG4gICAgdmFsaWRhdGVFdmVudDoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IHRydWVcbiAgICB9LFxuICAgIHN1ZmZpeEljb246IFN0cmluZyxcbiAgICBwcmVmaXhJY29uOiBTdHJpbmcsXG4gICAgbGFiZWw6IFN0cmluZyxcbiAgICBjbGVhcmFibGU6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH0sXG4gICAgc2hvd1Bhc3N3b3JkOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICB9LFxuICAgIHNob3dXb3JkTGltaXQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH0sXG4gICAgdGFiaW5kZXg6IFN0cmluZ1xuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgX2VsRm9ybUl0ZW1TaXplOiBmdW5jdGlvbiBfZWxGb3JtSXRlbVNpemUoKSB7XG4gICAgICByZXR1cm4gKHRoaXMuZWxGb3JtSXRlbSB8fCB7fSkuZWxGb3JtSXRlbVNpemU7XG4gICAgfSxcbiAgICB2YWxpZGF0ZVN0YXRlOiBmdW5jdGlvbiB2YWxpZGF0ZVN0YXRlKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZWxGb3JtSXRlbSA/IHRoaXMuZWxGb3JtSXRlbS52YWxpZGF0ZVN0YXRlIDogJyc7XG4gICAgfSxcbiAgICBuZWVkU3RhdHVzSWNvbjogZnVuY3Rpb24gbmVlZFN0YXR1c0ljb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5lbEZvcm0gPyB0aGlzLmVsRm9ybS5zdGF0dXNJY29uIDogZmFsc2U7XG4gICAgfSxcbiAgICB2YWxpZGF0ZUljb246IGZ1bmN0aW9uIHZhbGlkYXRlSWNvbigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHZhbGlkYXRpbmc6ICdlbC1pY29uLWxvYWRpbmcnLFxuICAgICAgICBzdWNjZXNzOiAnZWwtaWNvbi1jaXJjbGUtY2hlY2snLFxuICAgICAgICBlcnJvcjogJ2VsLWljb24tY2lyY2xlLWNsb3NlJ1xuICAgICAgfVt0aGlzLnZhbGlkYXRlU3RhdGVdO1xuICAgIH0sXG4gICAgdGV4dGFyZWFTdHlsZTogZnVuY3Rpb24gdGV4dGFyZWFTdHlsZSgpIHtcbiAgICAgIHJldHVybiBtZXJnZV9kZWZhdWx0KCkoe30sIHRoaXMudGV4dGFyZWFDYWxjU3R5bGUsIHsgcmVzaXplOiB0aGlzLnJlc2l6ZSB9KTtcbiAgICB9LFxuICAgIGlucHV0U2l6ZTogZnVuY3Rpb24gaW5wdXRTaXplKCkge1xuICAgICAgcmV0dXJuIHRoaXMuc2l6ZSB8fCB0aGlzLl9lbEZvcm1JdGVtU2l6ZSB8fCAodGhpcy4kRUxFTUVOVCB8fCB7fSkuc2l6ZTtcbiAgICB9LFxuICAgIGlucHV0RGlzYWJsZWQ6IGZ1bmN0aW9uIGlucHV0RGlzYWJsZWQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5kaXNhYmxlZCB8fCAodGhpcy5lbEZvcm0gfHwge30pLmRpc2FibGVkO1xuICAgIH0sXG4gICAgbmF0aXZlSW5wdXRWYWx1ZTogZnVuY3Rpb24gbmF0aXZlSW5wdXRWYWx1ZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnZhbHVlID09PSBudWxsIHx8IHRoaXMudmFsdWUgPT09IHVuZGVmaW5lZCA/ICcnIDogU3RyaW5nKHRoaXMudmFsdWUpO1xuICAgIH0sXG4gICAgc2hvd0NsZWFyOiBmdW5jdGlvbiBzaG93Q2xlYXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5jbGVhcmFibGUgJiYgIXRoaXMuaW5wdXREaXNhYmxlZCAmJiAhdGhpcy5yZWFkb25seSAmJiB0aGlzLm5hdGl2ZUlucHV0VmFsdWUgJiYgKHRoaXMuZm9jdXNlZCB8fCB0aGlzLmhvdmVyaW5nKTtcbiAgICB9LFxuICAgIHNob3dQd2RWaXNpYmxlOiBmdW5jdGlvbiBzaG93UHdkVmlzaWJsZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnNob3dQYXNzd29yZCAmJiAhdGhpcy5pbnB1dERpc2FibGVkICYmICF0aGlzLnJlYWRvbmx5ICYmICghIXRoaXMubmF0aXZlSW5wdXRWYWx1ZSB8fCB0aGlzLmZvY3VzZWQpO1xuICAgIH0sXG4gICAgaXNXb3JkTGltaXRWaXNpYmxlOiBmdW5jdGlvbiBpc1dvcmRMaW1pdFZpc2libGUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5zaG93V29yZExpbWl0ICYmIHRoaXMuJGF0dHJzLm1heGxlbmd0aCAmJiAodGhpcy50eXBlID09PSAndGV4dCcgfHwgdGhpcy50eXBlID09PSAndGV4dGFyZWEnKSAmJiAhdGhpcy5pbnB1dERpc2FibGVkICYmICF0aGlzLnJlYWRvbmx5ICYmICF0aGlzLnNob3dQYXNzd29yZDtcbiAgICB9LFxuICAgIHVwcGVyTGltaXQ6IGZ1bmN0aW9uIHVwcGVyTGltaXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kYXR0cnMubWF4bGVuZ3RoO1xuICAgIH0sXG4gICAgdGV4dExlbmd0aDogZnVuY3Rpb24gdGV4dExlbmd0aCgpIHtcbiAgICAgIGlmICh0eXBlb2YgdGhpcy52YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgcmV0dXJuIFN0cmluZyh0aGlzLnZhbHVlKS5sZW5ndGg7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAodGhpcy52YWx1ZSB8fCAnJykubGVuZ3RoO1xuICAgIH0sXG4gICAgaW5wdXRFeGNlZWQ6IGZ1bmN0aW9uIGlucHV0RXhjZWVkKCkge1xuICAgICAgLy8gc2hvdyBleGNlZWQgc3R5bGUgaWYgbGVuZ3RoIG9mIGluaXRpYWwgdmFsdWUgZ3JlYXRlciB0aGVuIG1heGxlbmd0aFxuICAgICAgcmV0dXJuIHRoaXMuaXNXb3JkTGltaXRWaXNpYmxlICYmIHRoaXMudGV4dExlbmd0aCA+IHRoaXMudXBwZXJMaW1pdDtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUodmFsKSB7XG4gICAgICB0aGlzLiRuZXh0VGljayh0aGlzLnJlc2l6ZVRleHRhcmVhKTtcbiAgICAgIGlmICh0aGlzLnZhbGlkYXRlRXZlbnQpIHtcbiAgICAgICAgdGhpcy5kaXNwYXRjaCgnRWxGb3JtSXRlbScsICdlbC5mb3JtLmNoYW5nZScsIFt2YWxdKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8gbmF0aXZlIGlucHV0IHZhbHVlIGlzIHNldCBleHBsaWNpdGx5XG4gICAgLy8gZG8gbm90IHVzZSB2LW1vZGVsIC8gOnZhbHVlIGluIHRlbXBsYXRlXG4gICAgLy8gc2VlOiBodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50L2lzc3Vlcy8xNDUyMVxuICAgIG5hdGl2ZUlucHV0VmFsdWU6IGZ1bmN0aW9uIG5hdGl2ZUlucHV0VmFsdWUoKSB7XG4gICAgICB0aGlzLnNldE5hdGl2ZUlucHV0VmFsdWUoKTtcbiAgICB9LFxuXG4gICAgLy8gd2hlbiBjaGFuZ2UgYmV0d2VlbiA8aW5wdXQ+IGFuZCA8dGV4dGFyZWE+LFxuICAgIC8vIHVwZGF0ZSBET00gZGVwZW5kZW50IHZhbHVlIGFuZCBzdHlsZXNcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50L2lzc3Vlcy8xNDg1N1xuICAgIHR5cGU6IGZ1bmN0aW9uIHR5cGUoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLnNldE5hdGl2ZUlucHV0VmFsdWUoKTtcbiAgICAgICAgX3RoaXMucmVzaXplVGV4dGFyZWEoKTtcbiAgICAgICAgX3RoaXMudXBkYXRlSWNvbk9mZnNldCgpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBmb2N1czogZnVuY3Rpb24gZm9jdXMoKSB7XG4gICAgICB0aGlzLmdldElucHV0KCkuZm9jdXMoKTtcbiAgICB9LFxuICAgIGJsdXI6IGZ1bmN0aW9uIGJsdXIoKSB7XG4gICAgICB0aGlzLmdldElucHV0KCkuYmx1cigpO1xuICAgIH0sXG4gICAgZ2V0TWlncmF0aW5nQ29uZmlnOiBmdW5jdGlvbiBnZXRNaWdyYXRpbmdDb25maWcoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwcm9wczoge1xuICAgICAgICAgICdpY29uJzogJ2ljb24gaXMgcmVtb3ZlZCwgdXNlIHN1ZmZpeC1pY29uIC8gcHJlZml4LWljb24gaW5zdGVhZC4nLFxuICAgICAgICAgICdvbi1pY29uLWNsaWNrJzogJ29uLWljb24tY2xpY2sgaXMgcmVtb3ZlZC4nXG4gICAgICAgIH0sXG4gICAgICAgIGV2ZW50czoge1xuICAgICAgICAgICdjbGljayc6ICdjbGljayBpcyByZW1vdmVkLidcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9LFxuICAgIGhhbmRsZUJsdXI6IGZ1bmN0aW9uIGhhbmRsZUJsdXIoZXZlbnQpIHtcbiAgICAgIHRoaXMuZm9jdXNlZCA9IGZhbHNlO1xuICAgICAgdGhpcy4kZW1pdCgnYmx1cicsIGV2ZW50KTtcbiAgICAgIGlmICh0aGlzLnZhbGlkYXRlRXZlbnQpIHtcbiAgICAgICAgdGhpcy5kaXNwYXRjaCgnRWxGb3JtSXRlbScsICdlbC5mb3JtLmJsdXInLCBbdGhpcy52YWx1ZV0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2VsZWN0OiBmdW5jdGlvbiBzZWxlY3QoKSB7XG4gICAgICB0aGlzLmdldElucHV0KCkuc2VsZWN0KCk7XG4gICAgfSxcbiAgICByZXNpemVUZXh0YXJlYTogZnVuY3Rpb24gcmVzaXplVGV4dGFyZWEoKSB7XG4gICAgICBpZiAodGhpcy4kaXNTZXJ2ZXIpIHJldHVybjtcbiAgICAgIHZhciBhdXRvc2l6ZSA9IHRoaXMuYXV0b3NpemUsXG4gICAgICAgICAgdHlwZSA9IHRoaXMudHlwZTtcblxuICAgICAgaWYgKHR5cGUgIT09ICd0ZXh0YXJlYScpIHJldHVybjtcbiAgICAgIGlmICghYXV0b3NpemUpIHtcbiAgICAgICAgdGhpcy50ZXh0YXJlYUNhbGNTdHlsZSA9IHtcbiAgICAgICAgICBtaW5IZWlnaHQ6IGNhbGNUZXh0YXJlYUhlaWdodCh0aGlzLiRyZWZzLnRleHRhcmVhKS5taW5IZWlnaHRcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdmFyIG1pblJvd3MgPSBhdXRvc2l6ZS5taW5Sb3dzO1xuICAgICAgdmFyIG1heFJvd3MgPSBhdXRvc2l6ZS5tYXhSb3dzO1xuXG4gICAgICB0aGlzLnRleHRhcmVhQ2FsY1N0eWxlID0gY2FsY1RleHRhcmVhSGVpZ2h0KHRoaXMuJHJlZnMudGV4dGFyZWEsIG1pblJvd3MsIG1heFJvd3MpO1xuICAgIH0sXG4gICAgc2V0TmF0aXZlSW5wdXRWYWx1ZTogZnVuY3Rpb24gc2V0TmF0aXZlSW5wdXRWYWx1ZSgpIHtcbiAgICAgIHZhciBpbnB1dCA9IHRoaXMuZ2V0SW5wdXQoKTtcbiAgICAgIGlmICghaW5wdXQpIHJldHVybjtcbiAgICAgIGlmIChpbnB1dC52YWx1ZSA9PT0gdGhpcy5uYXRpdmVJbnB1dFZhbHVlKSByZXR1cm47XG4gICAgICBpbnB1dC52YWx1ZSA9IHRoaXMubmF0aXZlSW5wdXRWYWx1ZTtcbiAgICB9LFxuICAgIGhhbmRsZUZvY3VzOiBmdW5jdGlvbiBoYW5kbGVGb2N1cyhldmVudCkge1xuICAgICAgdGhpcy5mb2N1c2VkID0gdHJ1ZTtcbiAgICAgIHRoaXMuJGVtaXQoJ2ZvY3VzJywgZXZlbnQpO1xuICAgIH0sXG4gICAgaGFuZGxlQ29tcG9zaXRpb25TdGFydDogZnVuY3Rpb24gaGFuZGxlQ29tcG9zaXRpb25TdGFydChldmVudCkge1xuICAgICAgdGhpcy4kZW1pdCgnY29tcG9zaXRpb25zdGFydCcsIGV2ZW50KTtcbiAgICAgIHRoaXMuaXNDb21wb3NpbmcgPSB0cnVlO1xuICAgIH0sXG4gICAgaGFuZGxlQ29tcG9zaXRpb25VcGRhdGU6IGZ1bmN0aW9uIGhhbmRsZUNvbXBvc2l0aW9uVXBkYXRlKGV2ZW50KSB7XG4gICAgICB0aGlzLiRlbWl0KCdjb21wb3NpdGlvbnVwZGF0ZScsIGV2ZW50KTtcbiAgICAgIHZhciB0ZXh0ID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuICAgICAgdmFyIGxhc3RDaGFyYWN0ZXIgPSB0ZXh0W3RleHQubGVuZ3RoIC0gMV0gfHwgJyc7XG4gICAgICB0aGlzLmlzQ29tcG9zaW5nID0gIU9iamVjdChzaGFyZWRfW1wiaXNLb3JlYW5cIl0pKGxhc3RDaGFyYWN0ZXIpO1xuICAgIH0sXG4gICAgaGFuZGxlQ29tcG9zaXRpb25FbmQ6IGZ1bmN0aW9uIGhhbmRsZUNvbXBvc2l0aW9uRW5kKGV2ZW50KSB7XG4gICAgICB0aGlzLiRlbWl0KCdjb21wb3NpdGlvbmVuZCcsIGV2ZW50KTtcbiAgICAgIGlmICh0aGlzLmlzQ29tcG9zaW5nKSB7XG4gICAgICAgIHRoaXMuaXNDb21wb3NpbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5oYW5kbGVJbnB1dChldmVudCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBoYW5kbGVJbnB1dDogZnVuY3Rpb24gaGFuZGxlSW5wdXQoZXZlbnQpIHtcbiAgICAgIC8vIHNob3VsZCBub3QgZW1pdCBpbnB1dCBkdXJpbmcgY29tcG9zaXRpb25cbiAgICAgIC8vIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvZWxlbWVudC9pc3N1ZXMvMTA1MTZcbiAgICAgIGlmICh0aGlzLmlzQ29tcG9zaW5nKSByZXR1cm47XG5cbiAgICAgIC8vIGhhY2sgZm9yIGh0dHBzOi8vZ2l0aHViLmNvbS9FbGVtZUZFL2VsZW1lbnQvaXNzdWVzLzg1NDhcbiAgICAgIC8vIHNob3VsZCByZW1vdmUgdGhlIGZvbGxvd2luZyBsaW5lIHdoZW4gd2UgZG9uJ3Qgc3VwcG9ydCBJRVxuICAgICAgaWYgKGV2ZW50LnRhcmdldC52YWx1ZSA9PT0gdGhpcy5uYXRpdmVJbnB1dFZhbHVlKSByZXR1cm47XG5cbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgZXZlbnQudGFyZ2V0LnZhbHVlKTtcblxuICAgICAgLy8gZW5zdXJlIG5hdGl2ZSBpbnB1dCB2YWx1ZSBpcyBjb250cm9sbGVkXG4gICAgICAvLyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9FbGVtZUZFL2VsZW1lbnQvaXNzdWVzLzEyODUwXG4gICAgICB0aGlzLiRuZXh0VGljayh0aGlzLnNldE5hdGl2ZUlucHV0VmFsdWUpO1xuICAgIH0sXG4gICAgaGFuZGxlQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDaGFuZ2UoZXZlbnQpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIGV2ZW50LnRhcmdldC52YWx1ZSk7XG4gICAgfSxcbiAgICBjYWxjSWNvbk9mZnNldDogZnVuY3Rpb24gY2FsY0ljb25PZmZzZXQocGxhY2UpIHtcbiAgICAgIHZhciBlbExpc3QgPSBbXS5zbGljZS5jYWxsKHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5lbC1pbnB1dF9fJyArIHBsYWNlKSB8fCBbXSk7XG4gICAgICBpZiAoIWVsTGlzdC5sZW5ndGgpIHJldHVybjtcbiAgICAgIHZhciBlbCA9IG51bGw7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGVsTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoZWxMaXN0W2ldLnBhcmVudE5vZGUgPT09IHRoaXMuJGVsKSB7XG4gICAgICAgICAgZWwgPSBlbExpc3RbaV07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmICghZWwpIHJldHVybjtcbiAgICAgIHZhciBwZW5kYW50TWFwID0ge1xuICAgICAgICBzdWZmaXg6ICdhcHBlbmQnLFxuICAgICAgICBwcmVmaXg6ICdwcmVwZW5kJ1xuICAgICAgfTtcblxuICAgICAgdmFyIHBlbmRhbnQgPSBwZW5kYW50TWFwW3BsYWNlXTtcbiAgICAgIGlmICh0aGlzLiRzbG90c1twZW5kYW50XSkge1xuICAgICAgICBlbC5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWCgnICsgKHBsYWNlID09PSAnc3VmZml4JyA/ICctJyA6ICcnKSArIHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3IoJy5lbC1pbnB1dC1ncm91cF9fJyArIHBlbmRhbnQpLm9mZnNldFdpZHRoICsgJ3B4KSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlbC5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJyk7XG4gICAgICB9XG4gICAgfSxcbiAgICB1cGRhdGVJY29uT2Zmc2V0OiBmdW5jdGlvbiB1cGRhdGVJY29uT2Zmc2V0KCkge1xuICAgICAgdGhpcy5jYWxjSWNvbk9mZnNldCgncHJlZml4Jyk7XG4gICAgICB0aGlzLmNhbGNJY29uT2Zmc2V0KCdzdWZmaXgnKTtcbiAgICB9LFxuICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgJycpO1xuICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgJycpO1xuICAgICAgdGhpcy4kZW1pdCgnY2xlYXInKTtcbiAgICB9LFxuICAgIGhhbmRsZVBhc3N3b3JkVmlzaWJsZTogZnVuY3Rpb24gaGFuZGxlUGFzc3dvcmRWaXNpYmxlKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHRoaXMucGFzc3dvcmRWaXNpYmxlID0gIXRoaXMucGFzc3dvcmRWaXNpYmxlO1xuICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczIuZm9jdXMoKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0SW5wdXQ6IGZ1bmN0aW9uIGdldElucHV0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuJHJlZnMuaW5wdXQgfHwgdGhpcy4kcmVmcy50ZXh0YXJlYTtcbiAgICB9LFxuICAgIGdldFN1ZmZpeFZpc2libGU6IGZ1bmN0aW9uIGdldFN1ZmZpeFZpc2libGUoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kc2xvdHMuc3VmZml4IHx8IHRoaXMuc3VmZml4SWNvbiB8fCB0aGlzLnNob3dDbGVhciB8fCB0aGlzLnNob3dQYXNzd29yZCB8fCB0aGlzLmlzV29yZExpbWl0VmlzaWJsZSB8fCB0aGlzLnZhbGlkYXRlU3RhdGUgJiYgdGhpcy5uZWVkU3RhdHVzSWNvbjtcbiAgICB9XG4gIH0sXG5cbiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHtcbiAgICB0aGlzLiRvbignaW5wdXRTZWxlY3QnLCB0aGlzLnNlbGVjdCk7XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5zZXROYXRpdmVJbnB1dFZhbHVlKCk7XG4gICAgdGhpcy5yZXNpemVUZXh0YXJlYSgpO1xuICAgIHRoaXMudXBkYXRlSWNvbk9mZnNldCgpO1xuICB9LFxuICB1cGRhdGVkOiBmdW5jdGlvbiB1cGRhdGVkKCkge1xuICAgIHRoaXMuJG5leHRUaWNrKHRoaXMudXBkYXRlSWNvbk9mZnNldCk7XG4gIH1cbn0pO1xuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9pbnB1dC9zcmMvaW5wdXQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlxuIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIHNyY19pbnB1dHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyA9IChpbnB1dHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyk7IFxuLy8gRVhURVJOQUwgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcbnZhciBjb21wb25lbnROb3JtYWxpemVyID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9pbnB1dC9zcmMvaW5wdXQudnVlXG5cblxuXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuXG52YXIgY29tcG9uZW50ID0gT2JqZWN0KGNvbXBvbmVudE5vcm1hbGl6ZXJbXCJhXCIgLyogZGVmYXVsdCAqL10pKFxuICBzcmNfaW5wdXR2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKGZhbHNlKSB7IHZhciBhcGk7IH1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicGFja2FnZXMvaW5wdXQvc3JjL2lucHV0LnZ1ZVwiXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBpbnB1dCA9IChjb21wb25lbnQuZXhwb3J0cyk7XG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2lucHV0L2luZGV4LmpzXG5cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmlucHV0Lmluc3RhbGwgPSBmdW5jdGlvbiAoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQoaW5wdXQubmFtZSwgaW5wdXQpO1xufTtcblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyB2YXIgcGFja2FnZXNfaW5wdXQgPSBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZGVmYXVsdFwiXSA9IChpbnB1dCk7XG5cbi8qKiovIH0pLFxuXG4vKioqLyA5OlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJlbGVtZW50LXVpL2xpYi91dGlscy9tZXJnZVwiKTtcblxuLyoqKi8gfSlcblxuLyoqKioqKi8gfSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmlzRGVmID0gaXNEZWY7XG5leHBvcnRzLmlzS29yZWFuID0gaXNLb3JlYW47XG5mdW5jdGlvbiBpc0RlZih2YWwpIHtcbiAgcmV0dXJuIHZhbCAhPT0gdW5kZWZpbmVkICYmIHZhbCAhPT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGlzS29yZWFuKHRleHQpIHtcbiAgdmFyIHJlZyA9IC8oWyhcXHVBQzAwLVxcdUQ3QUYpfChcXHUzMTMwLVxcdTMxOEYpXSkrL2dpO1xuICByZXR1cm4gcmVnLnRlc3QodGV4dCk7XG59IiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmVsLWlucHV0X19pbm5lcixcXG4uZWwtdGV4dGFyZWFfX2lubmVyIHtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuMnMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpO1xcbn1cXG4uZWwtcG9wcGVyIC5wb3BwZXJfX2Fycm93LFxcbi5lbC1wb3BwZXIgLnBvcHBlcl9fYXJyb3c6OmFmdGVyIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgd2lkdGg6IDA7XFxuICBoZWlnaHQ6IDA7XFxuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcXG59XFxuLmVsLXBvcHBlciAucG9wcGVyX19hcnJvdyB7XFxuICBib3JkZXItd2lkdGg6IDZweDtcXG4gIGZpbHRlcjogZHJvcC1zaGFkb3coMCAycHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMDMpKTtcXG59XFxuLmVsLXBvcHBlciAucG9wcGVyX19hcnJvdzo6YWZ0ZXIge1xcbiAgY29udGVudDogXFxcIiBcXFwiO1xcbiAgYm9yZGVyLXdpZHRoOiA2cHg7XFxufVxcbi5lbC1wb3BwZXJbeC1wbGFjZW1lbnRePXRvcF0ge1xcbiAgbWFyZ2luLWJvdHRvbTogMTJweDtcXG59XFxuLmVsLXBvcHBlclt4LXBsYWNlbWVudF49dG9wXSAucG9wcGVyX19hcnJvdyB7XFxuICBib3R0b206IC02cHg7XFxuICBsZWZ0OiA1MCU7XFxuICBtYXJnaW4tcmlnaHQ6IDNweDtcXG4gIGJvcmRlci10b3AtY29sb3I6ICNFQkVFRjU7XFxuICBib3JkZXItYm90dG9tLXdpZHRoOiAwO1xcbn1cXG4uZWwtcG9wcGVyW3gtcGxhY2VtZW50Xj10b3BdIC5wb3BwZXJfX2Fycm93OjphZnRlciB7XFxuICBib3R0b206IDFweDtcXG4gIG1hcmdpbi1sZWZ0OiAtNnB4O1xcbiAgYm9yZGVyLXRvcC1jb2xvcjogI0ZGRjtcXG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDA7XFxufVxcbi5lbC1wb3BwZXJbeC1wbGFjZW1lbnRePWJvdHRvbV0ge1xcbiAgbWFyZ2luLXRvcDogMTJweDtcXG59XFxuLmVsLXBvcHBlclt4LXBsYWNlbWVudF49Ym90dG9tXSAucG9wcGVyX19hcnJvdyB7XFxuICB0b3A6IC02cHg7XFxuICBsZWZ0OiA1MCU7XFxuICBtYXJnaW4tcmlnaHQ6IDNweDtcXG4gIGJvcmRlci10b3Atd2lkdGg6IDA7XFxuICBib3JkZXItYm90dG9tLWNvbG9yOiAjRUJFRUY1O1xcbn1cXG4uZWwtcG9wcGVyW3gtcGxhY2VtZW50Xj1ib3R0b21dIC5wb3BwZXJfX2Fycm93OjphZnRlciB7XFxuICB0b3A6IDFweDtcXG4gIG1hcmdpbi1sZWZ0OiAtNnB4O1xcbiAgYm9yZGVyLXRvcC13aWR0aDogMDtcXG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICNGRkY7XFxufVxcbi5lbC1wb3BwZXJbeC1wbGFjZW1lbnRePXJpZ2h0XSB7XFxuICBtYXJnaW4tbGVmdDogMTJweDtcXG59XFxuLmVsLXBvcHBlclt4LXBsYWNlbWVudF49cmlnaHRdIC5wb3BwZXJfX2Fycm93IHtcXG4gIHRvcDogNTAlO1xcbiAgbGVmdDogLTZweDtcXG4gIG1hcmdpbi1ib3R0b206IDNweDtcXG4gIGJvcmRlci1yaWdodC1jb2xvcjogI0VCRUVGNTtcXG4gIGJvcmRlci1sZWZ0LXdpZHRoOiAwO1xcbn1cXG4uZWwtcG9wcGVyW3gtcGxhY2VtZW50Xj1yaWdodF0gLnBvcHBlcl9fYXJyb3c6OmFmdGVyIHtcXG4gIGJvdHRvbTogLTZweDtcXG4gIGxlZnQ6IDFweDtcXG4gIGJvcmRlci1yaWdodC1jb2xvcjogI0ZGRjtcXG4gIGJvcmRlci1sZWZ0LXdpZHRoOiAwO1xcbn1cXG4uZWwtcG9wcGVyW3gtcGxhY2VtZW50Xj1sZWZ0XSB7XFxuICBtYXJnaW4tcmlnaHQ6IDEycHg7XFxufVxcbi5lbC1wb3BwZXJbeC1wbGFjZW1lbnRePWxlZnRdIC5wb3BwZXJfX2Fycm93IHtcXG4gIHRvcDogNTAlO1xcbiAgcmlnaHQ6IC02cHg7XFxuICBtYXJnaW4tYm90dG9tOiAzcHg7XFxuICBib3JkZXItcmlnaHQtd2lkdGg6IDA7XFxuICBib3JkZXItbGVmdC1jb2xvcjogI0VCRUVGNTtcXG59XFxuLmVsLXBvcHBlclt4LXBsYWNlbWVudF49bGVmdF0gLnBvcHBlcl9fYXJyb3c6OmFmdGVyIHtcXG4gIHJpZ2h0OiAxcHg7XFxuICBib3R0b206IC02cHg7XFxuICBtYXJnaW4tbGVmdDogLTZweDtcXG4gIGJvcmRlci1yaWdodC13aWR0aDogMDtcXG4gIGJvcmRlci1sZWZ0LWNvbG9yOiAjRkZGO1xcbn1cXG4uZWwtc2VsZWN0LWRyb3Bkb3duIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHotaW5kZXg6IDEwMDE7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjRTRFN0VEO1xcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcXG4gIGJveC1zaGFkb3c6IDAgMnB4IDEycHggMCByZ2JhKDAsIDAsIDAsIDAuMSk7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgbWFyZ2luOiA1cHggMDtcXG59XFxuLmVsLWlucHV0X19pbm5lcixcXG4uZWwtc2VsZWN0LWRyb3Bkb3duX19saXN0LFxcbi5lbC10YWcsXFxuLmVsLXRleHRhcmVhX19pbm5lciB7XFxuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcbi5lbC1zZWxlY3QtZHJvcGRvd24uaXMtbXVsdGlwbGUgLmVsLXNlbGVjdC1kcm9wZG93bl9faXRlbSB7XFxuICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xcbn1cXG4uZWwtc2VsZWN0LWRyb3Bkb3duLmlzLW11bHRpcGxlIC5lbC1zZWxlY3QtZHJvcGRvd25fX2l0ZW0uc2VsZWN0ZWQge1xcbiAgY29sb3I6ICM0MDlFRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xcbn1cXG4uZWwtc2VsZWN0LWRyb3Bkb3duLmlzLW11bHRpcGxlIC5lbC1zZWxlY3QtZHJvcGRvd25fX2l0ZW0uc2VsZWN0ZWQuaG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0Y1RjdGQTtcXG59XFxuLmVsLXNlbGVjdC1kcm9wZG93bi5pcy1tdWx0aXBsZSAuZWwtc2VsZWN0LWRyb3Bkb3duX19pdGVtLnNlbGVjdGVkOjphZnRlciB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogMjBweDtcXG4gIGZvbnQtZmFtaWx5OiBlbGVtZW50LWljb25zO1xcbiAgY29udGVudDogXFxcIlxcXFxlNmRhXFxcIjtcXG4gIGZvbnQtc2l6ZTogMTJweDtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XFxufVxcbi5lbC1zZWxlY3QtZHJvcGRvd24gLmVsLXNjcm9sbGJhci5pcy1lbXB0eSAuZWwtc2VsZWN0LWRyb3Bkb3duX19saXN0IHtcXG4gIHBhZGRpbmc6IDA7XFxufVxcbi5lbC1zZWxlY3QtZHJvcGRvd25fX2VtcHR5IHtcXG4gIHBhZGRpbmc6IDEwcHggMDtcXG4gIG1hcmdpbjogMDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGNvbG9yOiAjOTk5O1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbn1cXG4uZWwtc2VsZWN0LWRyb3Bkb3duX193cmFwIHtcXG4gIG1heC1oZWlnaHQ6IDI3NHB4O1xcbn1cXG4uZWwtc2VsZWN0LWRyb3Bkb3duX19saXN0IHtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICBwYWRkaW5nOiA2cHggMDtcXG4gIG1hcmdpbjogMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcbi5lbC10ZXh0YXJlYSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICB3aWR0aDogMTAwJTtcXG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XFxuICBmb250LXNpemU6IDE0cHg7XFxufVxcbi5lbC10ZXh0YXJlYV9faW5uZXIge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICByZXNpemU6IHZlcnRpY2FsO1xcbiAgcGFkZGluZzogNXB4IDE1cHg7XFxuICBsaW5lLWhlaWdodDogMS41O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZm9udC1zaXplOiBpbmhlcml0O1xcbiAgY29sb3I6ICM2MDYyNjY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNEQ0RGRTY7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4ycyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMSk7XFxufVxcbi5lbC10ZXh0YXJlYV9faW5uZXI6Oi1tb3otcGxhY2Vob2xkZXIge1xcbiAgY29sb3I6ICNDMEM0Q0M7XFxufVxcbi5lbC10ZXh0YXJlYV9faW5uZXI6OnBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiAjQzBDNENDO1xcbn1cXG4uZWwtdGV4dGFyZWFfX2lubmVyOmhvdmVyIHtcXG4gIGJvcmRlci1jb2xvcjogI0MwQzRDQztcXG59XFxuLmVsLXRleHRhcmVhX19pbm5lcjpmb2N1cyB7XFxuICBvdXRsaW5lOiAwO1xcbiAgYm9yZGVyLWNvbG9yOiAjNDA5RUZGO1xcbn1cXG4uZWwtdGV4dGFyZWEgLmVsLWlucHV0X19jb3VudCB7XFxuICBjb2xvcjogIzkwOTM5OTtcXG4gIGJhY2tncm91bmQ6ICNGRkY7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBmb250LXNpemU6IDEycHg7XFxuICBib3R0b206IDVweDtcXG4gIHJpZ2h0OiAxMHB4O1xcbn1cXG4uZWwtdGV4dGFyZWEuaXMtZGlzYWJsZWQgLmVsLXRleHRhcmVhX19pbm5lciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjVGN0ZBO1xcbiAgYm9yZGVyLWNvbG9yOiAjRTRFN0VEO1xcbiAgY29sb3I6ICNDMEM0Q0M7XFxuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xcbn1cXG4uZWwtdGV4dGFyZWEuaXMtZGlzYWJsZWQgLmVsLXRleHRhcmVhX19pbm5lcjo6LW1vei1wbGFjZWhvbGRlciB7XFxuICBjb2xvcjogI0MwQzRDQztcXG59XFxuLmVsLXRleHRhcmVhLmlzLWRpc2FibGVkIC5lbC10ZXh0YXJlYV9faW5uZXI6OnBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiAjQzBDNENDO1xcbn1cXG4uZWwtdGV4dGFyZWEuaXMtZXhjZWVkIC5lbC10ZXh0YXJlYV9faW5uZXIge1xcbiAgYm9yZGVyLWNvbG9yOiAjRjU2QzZDO1xcbn1cXG4uZWwtdGV4dGFyZWEuaXMtZXhjZWVkIC5lbC1pbnB1dF9fY291bnQge1xcbiAgY29sb3I6ICNGNTZDNkM7XFxufVxcbi5lbC1pbnB1dCB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuLmVsLWlucHV0Ojotd2Via2l0LXNjcm9sbGJhciB7XFxuICB6LWluZGV4OiAxMTtcXG4gIHdpZHRoOiA2cHg7XFxufVxcbi5lbC1pbnB1dDo6LXdlYmtpdC1zY3JvbGxiYXI6aG9yaXpvbnRhbCB7XFxuICBoZWlnaHQ6IDZweDtcXG59XFxuLmVsLWlucHV0Ojotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICB3aWR0aDogNnB4O1xcbiAgYmFja2dyb3VuZDogI2I0YmNjYztcXG59XFxuLmVsLWlucHV0Ojotd2Via2l0LXNjcm9sbGJhci1jb3JuZXIge1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG59XFxuLmVsLWlucHV0Ojotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XFxuICBiYWNrZ3JvdW5kOiAjZmZmO1xcbn1cXG4uZWwtaW5wdXQ6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrLXBpZWNlIHtcXG4gIGJhY2tncm91bmQ6ICNmZmY7XFxuICB3aWR0aDogNnB4O1xcbn1cXG4uZWwtaW5wdXRfX2lubmVyLFxcbi5lbC1zZWxlY3QtZHJvcGRvd25fX2l0ZW0uaXMtZGlzYWJsZWQ6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcXG59XFxuLmVsLWlucHV0IC5lbC1pbnB1dF9fY2xlYXIge1xcbiAgY29sb3I6ICNDMEM0Q0M7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKTtcXG59XFxuLmVsLWlucHV0IC5lbC1pbnB1dF9fY2xlYXI6aG92ZXIge1xcbiAgY29sb3I6ICM5MDkzOTk7XFxufVxcbi5lbC1pbnB1dCAuZWwtaW5wdXRfX2NvdW50IHtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGNvbG9yOiAjOTA5Mzk5O1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbn1cXG4uZWwtaW5wdXQgLmVsLWlucHV0X19jb3VudCAuZWwtaW5wdXRfX2NvdW50LWlubmVyIHtcXG4gIGJhY2tncm91bmQ6ICNGRkY7XFxuICBsaW5lLWhlaWdodDogaW5pdGlhbDtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHBhZGRpbmc6IDAgNXB4O1xcbn1cXG4uZWwtaW5wdXRfX2lubmVyIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjRENERkU2O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGNvbG9yOiAjNjA2MjY2O1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgZm9udC1zaXplOiBpbmhlcml0O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XFxuICBvdXRsaW5lOiAwO1xcbiAgcGFkZGluZzogMCAxNXB4O1xcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuMnMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpO1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcbi5lbC1pbnB1dF9faW5uZXI6aG92ZXIsXFxuLmVsLXNlbGVjdDpob3ZlciAuZWwtaW5wdXRfX2lubmVyIHtcXG4gIGJvcmRlci1jb2xvcjogI0MwQzRDQztcXG59XFxuLmVsLWlucHV0X19wcmVmaXgsXFxuLmVsLWlucHV0X19zdWZmaXgge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcztcXG4gIGhlaWdodDogMTAwJTtcXG4gIGNvbG9yOiAjQzBDNENDO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG4uZWwtaW5wdXRfX2lubmVyOjotbXMtcmV2ZWFsIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcbi5lbC1pbnB1dF9faW5uZXI6Oi1tb3otcGxhY2Vob2xkZXIge1xcbiAgY29sb3I6ICNDMEM0Q0M7XFxufVxcbi5lbC1pbnB1dF9faW5uZXI6OnBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiAjQzBDNENDO1xcbn1cXG4uZWwtaW5wdXQuaXMtYWN0aXZlIC5lbC1pbnB1dF9faW5uZXIsXFxuLmVsLWlucHV0X19pbm5lcjpmb2N1cyB7XFxuICBib3JkZXItY29sb3I6ICM0MDlFRkY7XFxuICBvdXRsaW5lOiAwO1xcbn1cXG4uZWwtaW5wdXRfX3N1ZmZpeCB7XFxuICByaWdodDogNXB4O1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG59XFxuLmVsLWlucHV0X19zdWZmaXgtaW5uZXIge1xcbiAgcG9pbnRlci1ldmVudHM6IGFsbDtcXG59XFxuLmVsLWlucHV0X19wcmVmaXgge1xcbiAgbGVmdDogNXB4O1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XFxufVxcbi5lbC1pbnB1dF9faWNvbiB7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB3aWR0aDogMjVweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XFxufVxcbi5lbC1pbnB1dF9faWNvbjphZnRlciB7XFxuICBjb250ZW50OiAnJztcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiAwO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG59XFxuLmVsLWlucHV0X192YWxpZGF0ZUljb24ge1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxufVxcbi5lbC1pbnB1dC5pcy1kaXNhYmxlZCAuZWwtaW5wdXRfX2lubmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGNUY3RkE7XFxuICBib3JkZXItY29sb3I6ICNFNEU3RUQ7XFxuICBjb2xvcjogI0MwQzRDQztcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcbi5lbC1pbnB1dC5pcy1kaXNhYmxlZCAuZWwtaW5wdXRfX2lubmVyOjotbW96LXBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiAjQzBDNENDO1xcbn1cXG4uZWwtaW5wdXQuaXMtZGlzYWJsZWQgLmVsLWlucHV0X19pbm5lcjo6cGxhY2Vob2xkZXIge1xcbiAgY29sb3I6ICNDMEM0Q0M7XFxufVxcbi5lbC1pbnB1dC5pcy1kaXNhYmxlZCAuZWwtaW5wdXRfX2ljb24ge1xcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcXG59XFxuLmVsLWlucHV0LmlzLWV4Y2VlZCAuZWwtaW5wdXRfX2lubmVyIHtcXG4gIGJvcmRlci1jb2xvcjogI0Y1NkM2QztcXG59XFxuLmVsLWlucHV0LmlzLWV4Y2VlZCAuZWwtaW5wdXRfX3N1ZmZpeCAuZWwtaW5wdXRfX2NvdW50IHtcXG4gIGNvbG9yOiAjRjU2QzZDO1xcbn1cXG4uZWwtaW5wdXQtLXN1ZmZpeCAuZWwtaW5wdXRfX2lubmVyIHtcXG4gIHBhZGRpbmctcmlnaHQ6IDMwcHg7XFxufVxcbi5lbC1pbnB1dC0tcHJlZml4IC5lbC1pbnB1dF9faW5uZXIge1xcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xcbn1cXG4uZWwtaW5wdXQtLW1lZGl1bSB7XFxuICBmb250LXNpemU6IDE0cHg7XFxufVxcbi5lbC1pbnB1dC0tbWVkaXVtIC5lbC1pbnB1dF9faW5uZXIge1xcbiAgaGVpZ2h0OiAzNnB4O1xcbiAgbGluZS1oZWlnaHQ6IDM2cHg7XFxufVxcbi5lbC1pbnB1dC0tbWVkaXVtIC5lbC1pbnB1dF9faWNvbiB7XFxuICBsaW5lLWhlaWdodDogMzZweDtcXG59XFxuLmVsLWlucHV0LS1zbWFsbCB7XFxuICBmb250LXNpemU6IDEzcHg7XFxufVxcbi5lbC1pbnB1dC0tc21hbGwgLmVsLWlucHV0X19pbm5lciB7XFxuICBoZWlnaHQ6IDMycHg7XFxuICBsaW5lLWhlaWdodDogMzJweDtcXG59XFxuLmVsLWlucHV0LS1zbWFsbCAuZWwtaW5wdXRfX2ljb24ge1xcbiAgbGluZS1oZWlnaHQ6IDMycHg7XFxufVxcbi5lbC1pbnB1dC0tbWluaSB7XFxuICBmb250LXNpemU6IDEycHg7XFxufVxcbi5lbC1pbnB1dC0tbWluaSAuZWwtaW5wdXRfX2lubmVyIHtcXG4gIGhlaWdodDogMjhweDtcXG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xcbn1cXG4uZWwtaW5wdXQtLW1pbmkgLmVsLWlucHV0X19pY29uIHtcXG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xcbn1cXG4uZWwtaW5wdXQtZ3JvdXAge1xcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcXG4gIGRpc3BsYXk6IGlubGluZS10YWJsZTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTtcXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xcbn1cXG4uZWwtaW5wdXQtZ3JvdXAgPiAuZWwtaW5wdXRfX2lubmVyIHtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xcbn1cXG4uZWwtaW5wdXQtZ3JvdXBfX2FwcGVuZCxcXG4uZWwtaW5wdXQtZ3JvdXBfX3ByZXBlbmQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0Y1RjdGQTtcXG4gIGNvbG9yOiAjOTA5Mzk5O1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjRENERkU2O1xcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgcGFkZGluZzogMCAyMHB4O1xcbiAgd2lkdGg6IDFweDtcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxufVxcbi5lbC1pbnB1dC1ncm91cC0tcHJlcGVuZCAuZWwtaW5wdXRfX2lubmVyLFxcbi5lbC1pbnB1dC1ncm91cF9fYXBwZW5kIHtcXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XFxuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xcbn1cXG4uZWwtaW5wdXQtZ3JvdXAtLWFwcGVuZCAuZWwtaW5wdXRfX2lubmVyLFxcbi5lbC1pbnB1dC1ncm91cF9fcHJlcGVuZCB7XFxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcXG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xcbn1cXG4uZWwtaW5wdXQtZ3JvdXBfX2FwcGVuZDpmb2N1cyxcXG4uZWwtaW5wdXQtZ3JvdXBfX3ByZXBlbmQ6Zm9jdXMge1xcbiAgb3V0bGluZTogMDtcXG59XFxuLmVsLWlucHV0LWdyb3VwX19hcHBlbmQgLmVsLWJ1dHRvbixcXG4uZWwtaW5wdXQtZ3JvdXBfX2FwcGVuZCAuZWwtc2VsZWN0LFxcbi5lbC1pbnB1dC1ncm91cF9fcHJlcGVuZCAuZWwtYnV0dG9uLFxcbi5lbC1pbnB1dC1ncm91cF9fcHJlcGVuZCAuZWwtc2VsZWN0IHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIG1hcmdpbjogLTEwcHggLTIwcHg7XFxufVxcbi5lbC1pbnB1dC1ncm91cF9fYXBwZW5kIGJ1dHRvbi5lbC1idXR0b24sXFxuLmVsLWlucHV0LWdyb3VwX19hcHBlbmQgZGl2LmVsLXNlbGVjdCAuZWwtaW5wdXRfX2lubmVyLFxcbi5lbC1pbnB1dC1ncm91cF9fYXBwZW5kIGRpdi5lbC1zZWxlY3Q6aG92ZXIgLmVsLWlucHV0X19pbm5lcixcXG4uZWwtaW5wdXQtZ3JvdXBfX3ByZXBlbmQgYnV0dG9uLmVsLWJ1dHRvbixcXG4uZWwtaW5wdXQtZ3JvdXBfX3ByZXBlbmQgZGl2LmVsLXNlbGVjdCAuZWwtaW5wdXRfX2lubmVyLFxcbi5lbC1pbnB1dC1ncm91cF9fcHJlcGVuZCBkaXYuZWwtc2VsZWN0OmhvdmVyIC5lbC1pbnB1dF9faW5uZXIge1xcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBib3JkZXItdG9wOiAwO1xcbiAgYm9yZGVyLWJvdHRvbTogMDtcXG59XFxuLmVsLWlucHV0LWdyb3VwX19hcHBlbmQgLmVsLWJ1dHRvbixcXG4uZWwtaW5wdXQtZ3JvdXBfX2FwcGVuZCAuZWwtaW5wdXQsXFxuLmVsLWlucHV0LWdyb3VwX19wcmVwZW5kIC5lbC1idXR0b24sXFxuLmVsLWlucHV0LWdyb3VwX19wcmVwZW5kIC5lbC1pbnB1dCB7XFxuICBmb250LXNpemU6IGluaGVyaXQ7XFxufVxcbi5lbC1pbnB1dC1ncm91cF9fcHJlcGVuZCB7XFxuICBib3JkZXItcmlnaHQ6IDA7XFxufVxcbi5lbC1pbnB1dC1ncm91cF9fYXBwZW5kIHtcXG4gIGJvcmRlci1sZWZ0OiAwO1xcbn1cXG4uZWwtaW5wdXQtZ3JvdXAtLWFwcGVuZCAuZWwtc2VsZWN0IC5lbC1pbnB1dC5pcy1mb2N1cyAuZWwtaW5wdXRfX2lubmVyLFxcbi5lbC1pbnB1dC1ncm91cC0tcHJlcGVuZCAuZWwtc2VsZWN0IC5lbC1pbnB1dC5pcy1mb2N1cyAuZWwtaW5wdXRfX2lubmVyIHtcXG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XFxufVxcbi5lbC1pbnB1dF9faW5uZXI6Oi1tcy1jbGVhciB7XFxuICBkaXNwbGF5OiBub25lO1xcbiAgd2lkdGg6IDA7XFxuICBoZWlnaHQ6IDA7XFxufVxcbi5lbC10YWcge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZjVmZjtcXG4gIGJvcmRlci1jb2xvcjogI2Q5ZWNmZjtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIGhlaWdodDogMzJweDtcXG4gIHBhZGRpbmc6IDAgMTBweDtcXG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbiAgY29sb3I6ICM0MDlFRkY7XFxuICBib3JkZXItd2lkdGg6IDFweDtcXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG59XFxuLmVsLXRhZy5pcy1oaXQge1xcbiAgYm9yZGVyLWNvbG9yOiAjNDA5RUZGO1xcbn1cXG4uZWwtdGFnIC5lbC10YWdfX2Nsb3NlIHtcXG4gIGNvbG9yOiAjNDA5ZWZmO1xcbn1cXG4uZWwtdGFnIC5lbC10YWdfX2Nsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQwOWVmZjtcXG59XFxuLmVsLXRhZy5lbC10YWctLWluZm8ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNTtcXG4gIGJvcmRlci1jb2xvcjogI2U5ZTllYjtcXG4gIGNvbG9yOiAjOTA5Mzk5O1xcbn1cXG4uZWwtdGFnLmVsLXRhZy0taW5mby5pcy1oaXQge1xcbiAgYm9yZGVyLWNvbG9yOiAjOTA5Mzk5O1xcbn1cXG4uZWwtdGFnLmVsLXRhZy0taW5mbyAuZWwtdGFnX19jbG9zZSB7XFxuICBjb2xvcjogIzkwOTM5OTtcXG59XFxuLmVsLXRhZy5lbC10YWctLWluZm8gLmVsLXRhZ19fY2xvc2U6aG92ZXIge1xcbiAgY29sb3I6ICNGRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTA5Mzk5O1xcbn1cXG4uZWwtdGFnLmVsLXRhZy0tc3VjY2VzcyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmOWViO1xcbiAgYm9yZGVyLWNvbG9yOiAjZTFmM2Q4O1xcbiAgY29sb3I6ICM2N2MyM2E7XFxufVxcbi5lbC10YWcuZWwtdGFnLS1zdWNjZXNzLmlzLWhpdCB7XFxuICBib3JkZXItY29sb3I6ICM2N0MyM0E7XFxufVxcbi5lbC10YWcuZWwtdGFnLS1zdWNjZXNzIC5lbC10YWdfX2Nsb3NlIHtcXG4gIGNvbG9yOiAjNjdjMjNhO1xcbn1cXG4uZWwtdGFnLmVsLXRhZy0tc3VjY2VzcyAuZWwtdGFnX19jbG9zZTpob3ZlciB7XFxuICBjb2xvcjogI0ZGRjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM2N2MyM2E7XFxufVxcbi5lbC10YWcuZWwtdGFnLS13YXJuaW5nIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZGY2ZWM7XFxuICBib3JkZXItY29sb3I6ICNmYWVjZDg7XFxuICBjb2xvcjogI2U2YTIzYztcXG59XFxuLmVsLXRhZy5lbC10YWctLXdhcm5pbmcuaXMtaGl0IHtcXG4gIGJvcmRlci1jb2xvcjogI0U2QTIzQztcXG59XFxuLmVsLXRhZy5lbC10YWctLXdhcm5pbmcgLmVsLXRhZ19fY2xvc2Uge1xcbiAgY29sb3I6ICNlNmEyM2M7XFxufVxcbi5lbC10YWcuZWwtdGFnLS13YXJuaW5nIC5lbC10YWdfX2Nsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2YTIzYztcXG59XFxuLmVsLXRhZy5lbC10YWctLWRhbmdlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmMGYwO1xcbiAgYm9yZGVyLWNvbG9yOiAjZmRlMmUyO1xcbiAgY29sb3I6ICNmNTZjNmM7XFxufVxcbi5lbC10YWcuZWwtdGFnLS1kYW5nZXIuaXMtaGl0IHtcXG4gIGJvcmRlci1jb2xvcjogI0Y1NkM2QztcXG59XFxuLmVsLXRhZy5lbC10YWctLWRhbmdlciAuZWwtdGFnX19jbG9zZSB7XFxuICBjb2xvcjogI2Y1NmM2YztcXG59XFxuLmVsLXRhZy5lbC10YWctLWRhbmdlciAuZWwtdGFnX19jbG9zZTpob3ZlciB7XFxuICBjb2xvcjogI0ZGRjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNTZjNmM7XFxufVxcbi5lbC10YWcgLmVsLWljb24tY2xvc2Uge1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbiAgaGVpZ2h0OiAxNnB4O1xcbiAgd2lkdGg6IDE2cHg7XFxuICBsaW5lLWhlaWdodDogMTZweDtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICB0b3A6IC0xcHg7XFxuICByaWdodDogLTVweDtcXG59XFxuLmVsLXRhZyAuZWwtaWNvbi1jbG9zZTo6YmVmb3JlIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG4uZWwtdGFnLS1kYXJrIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM0MDllZmY7XFxuICBib3JkZXItY29sb3I6ICM0MDllZmY7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuLmVsLXRhZy0tZGFyay5pcy1oaXQge1xcbiAgYm9yZGVyLWNvbG9yOiAjNDA5RUZGO1xcbn1cXG4uZWwtdGFnLS1kYXJrIC5lbC10YWdfX2Nsb3NlIHtcXG4gIGNvbG9yOiAjZmZmO1xcbn1cXG4uZWwtdGFnLS1kYXJrIC5lbC10YWdfX2Nsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY2YjFmZjtcXG59XFxuLmVsLXRhZy0tZGFyay5lbC10YWctLWluZm8ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzkwOTM5OTtcXG4gIGJvcmRlci1jb2xvcjogIzkwOTM5OTtcXG4gIGNvbG9yOiAjZmZmO1xcbn1cXG4uZWwtdGFnLS1kYXJrLmVsLXRhZy0taW5mby5pcy1oaXQge1xcbiAgYm9yZGVyLWNvbG9yOiAjOTA5Mzk5O1xcbn1cXG4uZWwtdGFnLS1kYXJrLmVsLXRhZy0taW5mbyAuZWwtdGFnX19jbG9zZSB7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuLmVsLXRhZy0tZGFyay5lbC10YWctLWluZm8gLmVsLXRhZ19fY2xvc2U6aG92ZXIge1xcbiAgY29sb3I6ICNGRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTZhOWFkO1xcbn1cXG4uZWwtdGFnLS1kYXJrLmVsLXRhZy0tc3VjY2VzcyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjdjMjNhO1xcbiAgYm9yZGVyLWNvbG9yOiAjNjdjMjNhO1xcbiAgY29sb3I6ICNmZmY7XFxufVxcbi5lbC10YWctLWRhcmsuZWwtdGFnLS1zdWNjZXNzLmlzLWhpdCB7XFxuICBib3JkZXItY29sb3I6ICM2N0MyM0E7XFxufVxcbi5lbC10YWctLWRhcmsuZWwtdGFnLS1zdWNjZXNzIC5lbC10YWdfX2Nsb3NlIHtcXG4gIGNvbG9yOiAjZmZmO1xcbn1cXG4uZWwtdGFnLS1kYXJrLmVsLXRhZy0tc3VjY2VzcyAuZWwtdGFnX19jbG9zZTpob3ZlciB7XFxuICBjb2xvcjogI0ZGRjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM4NWNlNjE7XFxufVxcbi5lbC10YWctLWRhcmsuZWwtdGFnLS13YXJuaW5nIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmEyM2M7XFxuICBib3JkZXItY29sb3I6ICNlNmEyM2M7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuLmVsLXRhZy0tZGFyay5lbC10YWctLXdhcm5pbmcuaXMtaGl0IHtcXG4gIGJvcmRlci1jb2xvcjogI0U2QTIzQztcXG59XFxuLmVsLXRhZy0tZGFyay5lbC10YWctLXdhcm5pbmcgLmVsLXRhZ19fY2xvc2Uge1xcbiAgY29sb3I6ICNmZmY7XFxufVxcbi5lbC10YWctLWRhcmsuZWwtdGFnLS13YXJuaW5nIC5lbC10YWdfX2Nsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ViYjU2MztcXG59XFxuLmVsLXRhZy0tZGFyay5lbC10YWctLWRhbmdlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjU2YzZjO1xcbiAgYm9yZGVyLWNvbG9yOiAjZjU2YzZjO1xcbiAgY29sb3I6ICNmZmY7XFxufVxcbi5lbC10YWctLWRhcmsuZWwtdGFnLS1kYW5nZXIuaXMtaGl0IHtcXG4gIGJvcmRlci1jb2xvcjogI0Y1NkM2QztcXG59XFxuLmVsLXRhZy0tZGFyay5lbC10YWctLWRhbmdlciAuZWwtdGFnX19jbG9zZSB7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuLmVsLXRhZy0tZGFyay5lbC10YWctLWRhbmdlciAuZWwtdGFnX19jbG9zZTpob3ZlciB7XFxuICBjb2xvcjogI0ZGRjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNzg5ODk7XFxufVxcbi5lbC10YWctLXBsYWluIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICBib3JkZXItY29sb3I6ICNiM2Q4ZmY7XFxuICBjb2xvcjogIzQwOWVmZjtcXG59XFxuLmVsLXRhZy0tcGxhaW4uaXMtaGl0IHtcXG4gIGJvcmRlci1jb2xvcjogIzQwOUVGRjtcXG59XFxuLmVsLXRhZy0tcGxhaW4gLmVsLXRhZ19fY2xvc2Uge1xcbiAgY29sb3I6ICM0MDllZmY7XFxufVxcbi5lbC10YWctLXBsYWluIC5lbC10YWdfX2Nsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQwOWVmZjtcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS1pbmZvIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICBib3JkZXItY29sb3I6ICNkM2Q0ZDY7XFxuICBjb2xvcjogIzkwOTM5OTtcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS1pbmZvLmlzLWhpdCB7XFxuICBib3JkZXItY29sb3I6ICM5MDkzOTk7XFxufVxcbi5lbC10YWctLXBsYWluLmVsLXRhZy0taW5mbyAuZWwtdGFnX19jbG9zZSB7XFxuICBjb2xvcjogIzkwOTM5OTtcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS1pbmZvIC5lbC10YWdfX2Nsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzkwOTM5OTtcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS1zdWNjZXNzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICBib3JkZXItY29sb3I6ICNjMmU3YjA7XFxuICBjb2xvcjogIzY3YzIzYTtcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS1zdWNjZXNzLmlzLWhpdCB7XFxuICBib3JkZXItY29sb3I6ICM2N0MyM0E7XFxufVxcbi5lbC10YWctLXBsYWluLmVsLXRhZy0tc3VjY2VzcyAuZWwtdGFnX19jbG9zZSB7XFxuICBjb2xvcjogIzY3YzIzYTtcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS1zdWNjZXNzIC5lbC10YWdfX2Nsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY3YzIzYTtcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS13YXJuaW5nIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICBib3JkZXItY29sb3I6ICNmNWRhYjE7XFxuICBjb2xvcjogI2U2YTIzYztcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS13YXJuaW5nLmlzLWhpdCB7XFxuICBib3JkZXItY29sb3I6ICNFNkEyM0M7XFxufVxcbi5lbC10YWctLXBsYWluLmVsLXRhZy0td2FybmluZyAuZWwtdGFnX19jbG9zZSB7XFxuICBjb2xvcjogI2U2YTIzYztcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS13YXJuaW5nIC5lbC10YWdfX2Nsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2YTIzYztcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS1kYW5nZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIGJvcmRlci1jb2xvcjogI2ZiYzRjNDtcXG4gIGNvbG9yOiAjZjU2YzZjO1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLWRhbmdlci5pcy1oaXQge1xcbiAgYm9yZGVyLWNvbG9yOiAjRjU2QzZDO1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLWRhbmdlciAuZWwtdGFnX19jbG9zZSB7XFxuICBjb2xvcjogI2Y1NmM2YztcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS1kYW5nZXIgLmVsLXRhZ19fY2xvc2U6aG92ZXIge1xcbiAgY29sb3I6ICNGRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjU2YzZjO1xcbn1cXG4uZWwtdGFnLS1tZWRpdW0ge1xcbiAgaGVpZ2h0OiAyOHB4O1xcbiAgbGluZS1oZWlnaHQ6IDI2cHg7XFxufVxcbi5lbC10YWctLW1lZGl1bSAuZWwtaWNvbi1jbG9zZSB7XFxuICB0cmFuc2Zvcm06IHNjYWxlKDAuOCk7XFxufVxcbi5lbC10YWctLXNtYWxsIHtcXG4gIGhlaWdodDogMjRweDtcXG4gIHBhZGRpbmc6IDAgOHB4O1xcbiAgbGluZS1oZWlnaHQ6IDIycHg7XFxufVxcbi5lbC10YWctLXNtYWxsIC5lbC1pY29uLWNsb3NlIHtcXG4gIHRyYW5zZm9ybTogc2NhbGUoMC44KTtcXG59XFxuLmVsLXRhZy0tbWluaSB7XFxuICBoZWlnaHQ6IDIwcHg7XFxuICBwYWRkaW5nOiAwIDVweDtcXG4gIGxpbmUtaGVpZ2h0OiAxOXB4O1xcbn1cXG4uZWwtdGFnLS1taW5pIC5lbC1pY29uLWNsb3NlIHtcXG4gIG1hcmdpbi1sZWZ0OiAtM3B4O1xcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLjcpO1xcbn1cXG4uZWwtc2VsZWN0LWRyb3Bkb3duX19pdGVtIHtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIHBhZGRpbmc6IDAgMjBweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxuICBjb2xvcjogIzYwNjI2NjtcXG4gIGhlaWdodDogMzRweDtcXG4gIGxpbmUtaGVpZ2h0OiAzNHB4O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuLmVsLXNlbGVjdC1kcm9wZG93bl9faXRlbS5pcy1kaXNhYmxlZCB7XFxuICBjb2xvcjogI0MwQzRDQztcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcbi5lbC1zZWxlY3QtZHJvcGRvd25fX2l0ZW0uaG92ZXIsXFxuLmVsLXNlbGVjdC1kcm9wZG93bl9faXRlbTpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjVGN0ZBO1xcbn1cXG4uZWwtc2VsZWN0LWRyb3Bkb3duX19pdGVtLnNlbGVjdGVkIHtcXG4gIGNvbG9yOiAjNDA5RUZGO1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG59XFxuLmVsLXNlbGVjdC1ncm91cCB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG4uZWwtc2VsZWN0LWdyb3VwX193cmFwIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG4uZWwtc2VsZWN0LWdyb3VwX193cmFwOm5vdCg6bGFzdC1vZi10eXBlKSB7XFxuICBwYWRkaW5nLWJvdHRvbTogMjRweDtcXG59XFxuLmVsLXNlbGVjdC1ncm91cF9fd3JhcDpub3QoOmxhc3Qtb2YtdHlwZSk6OmFmdGVyIHtcXG4gIGNvbnRlbnQ6ICcnO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBsZWZ0OiAyMHB4O1xcbiAgcmlnaHQ6IDIwcHg7XFxuICBib3R0b206IDEycHg7XFxuICBoZWlnaHQ6IDFweDtcXG4gIGJhY2tncm91bmQ6ICNFNEU3RUQ7XFxufVxcbi5lbC1zZWxlY3QtZ3JvdXBfX3RpdGxlIHtcXG4gIHBhZGRpbmctbGVmdDogMjBweDtcXG4gIGZvbnQtc2l6ZTogMTJweDtcXG4gIGNvbG9yOiAjOTA5Mzk5O1xcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XFxufVxcbi5lbC1zZWxlY3QtZ3JvdXAgLmVsLXNlbGVjdC1kcm9wZG93bl9faXRlbSB7XFxuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XFxufVxcbi5lbC1zY3JvbGxiYXIge1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuLmVsLXNjcm9sbGJhcjphY3RpdmUgPiAuZWwtc2Nyb2xsYmFyX19iYXIsXFxuLmVsLXNjcm9sbGJhcjpmb2N1cyA+IC5lbC1zY3JvbGxiYXJfX2JhcixcXG4uZWwtc2Nyb2xsYmFyOmhvdmVyID4gLmVsLXNjcm9sbGJhcl9fYmFyIHtcXG4gIG9wYWNpdHk6IDE7XFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDM0MG1zIGVhc2Utb3V0O1xcbn1cXG4uZWwtc2Nyb2xsYmFyX193cmFwIHtcXG4gIG92ZXJmbG93OiBzY3JvbGw7XFxuICBoZWlnaHQ6IDEwMCU7XFxufVxcbi5lbC1zY3JvbGxiYXJfX3dyYXAtLWhpZGRlbi1kZWZhdWx0IHtcXG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTtcXG59XFxuLmVsLXNjcm9sbGJhcl9fd3JhcC0taGlkZGVuLWRlZmF1bHQ6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXG4gIHdpZHRoOiAwO1xcbiAgaGVpZ2h0OiAwO1xcbn1cXG4uZWwtc2Nyb2xsYmFyX190aHVtYiB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHdpZHRoOiAwO1xcbiAgaGVpZ2h0OiAwO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTQ0LCAxNDcsIDE1MywgMC4zKTtcXG4gIHRyYW5zaXRpb246IDAuM3MgYmFja2dyb3VuZC1jb2xvcjtcXG59XFxuLmVsLXNjcm9sbGJhcl9fdGh1bWI6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNDQsIDE0NywgMTUzLCAwLjUpO1xcbn1cXG4uZWwtc2Nyb2xsYmFyX19iYXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDJweDtcXG4gIGJvdHRvbTogMnB4O1xcbiAgei1pbmRleDogMTtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIG9wYWNpdHk6IDA7XFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDEyMG1zIGVhc2Utb3V0O1xcbn1cXG4uZWwtc2Nyb2xsYmFyX19iYXIuaXMtdmVydGljYWwge1xcbiAgd2lkdGg6IDZweDtcXG4gIHRvcDogMnB4O1xcbn1cXG4uZWwtc2Nyb2xsYmFyX19iYXIuaXMtdmVydGljYWwgPiBkaXYge1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcbi5lbC1zY3JvbGxiYXJfX2Jhci5pcy1ob3Jpem9udGFsIHtcXG4gIGhlaWdodDogNnB4O1xcbiAgbGVmdDogMnB4O1xcbn1cXG4uZWwtc2Nyb2xsYmFyX19iYXIuaXMtaG9yaXpvbnRhbCA+IGRpdiB7XFxuICBoZWlnaHQ6IDEwMCU7XFxufVxcbi5lbC1zZWxlY3Qge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG4uZWwtc2VsZWN0IC5lbC1zZWxlY3RfX3RhZ3MgPiBzcGFuIHtcXG4gIGRpc3BsYXk6IGNvbnRlbnRzO1xcbn1cXG4uZWwtc2VsZWN0IC5lbC1pbnB1dF9faW5uZXIge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgcGFkZGluZy1yaWdodDogMzVweDtcXG59XFxuLmVsLXNlbGVjdCAuZWwtaW5wdXRfX2lubmVyOmZvY3VzIHtcXG4gIGJvcmRlci1jb2xvcjogIzQwOUVGRjtcXG59XFxuLmVsLXNlbGVjdCAuZWwtaW5wdXQgLmVsLXNlbGVjdF9fY2FyZXQge1xcbiAgY29sb3I6ICNDMEM0Q0M7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcztcXG4gIHRyYW5zZm9ybTogcm90YXRlWigxODBkZWcpO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4uZWwtc2VsZWN0IC5lbC1pbnB1dCAuZWwtc2VsZWN0X19jYXJldC5pcy1yZXZlcnNlIHtcXG4gIHRyYW5zZm9ybTogcm90YXRlWigwKTtcXG59XFxuLmVsLXNlbGVjdCAuZWwtaW5wdXQgLmVsLXNlbGVjdF9fY2FyZXQuaXMtc2hvdy1jbG9zZSB7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB0cmFuc2Zvcm06IHJvdGF0ZVooMTgwZGVnKTtcXG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XFxuICBjb2xvcjogI0MwQzRDQztcXG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMnMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpO1xcbn1cXG4uZWwtc2VsZWN0IC5lbC1pbnB1dCAuZWwtc2VsZWN0X19jYXJldC5pcy1zaG93LWNsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjOTA5Mzk5O1xcbn1cXG4uZWwtc2VsZWN0IC5lbC1pbnB1dC5pcy1kaXNhYmxlZCAuZWwtaW5wdXRfX2lubmVyIHtcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcbi5lbC1zZWxlY3QgLmVsLWlucHV0LmlzLWRpc2FibGVkIC5lbC1pbnB1dF9faW5uZXI6aG92ZXIge1xcbiAgYm9yZGVyLWNvbG9yOiAjRTRFN0VEO1xcbn1cXG4uZWwtc2VsZWN0IC5lbC1pbnB1dC5pcy1mb2N1cyAuZWwtaW5wdXRfX2lubmVyIHtcXG4gIGJvcmRlci1jb2xvcjogIzQwOUVGRjtcXG59XFxuLmVsLXNlbGVjdCA+IC5lbC1pbnB1dCB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuLmVsLXNlbGVjdF9faW5wdXQge1xcbiAgYm9yZGVyOiBub25lO1xcbiAgb3V0bGluZTogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBtYXJnaW4tbGVmdDogMTVweDtcXG4gIGNvbG9yOiAjNjY2O1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xcbiAgYXBwZWFyYW5jZTogbm9uZTtcXG4gIGhlaWdodDogMjhweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG4uZWwtc2VsZWN0X19pbnB1dC5pcy1taW5pIHtcXG4gIGhlaWdodDogMTRweDtcXG59XFxuLmVsLXNlbGVjdF9fY2xvc2Uge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiA4cHg7XFxuICB6LWluZGV4OiAxMDAwO1xcbiAgcmlnaHQ6IDI1cHg7XFxuICBjb2xvcjogI0MwQzRDQztcXG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbn1cXG4uZWwtc2VsZWN0X19jbG9zZTpob3ZlciB7XFxuICBjb2xvcjogIzkwOTM5OTtcXG59XFxuLmVsLXNlbGVjdF9fdGFncyB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBsaW5lLWhlaWdodDogbm9ybWFsO1xcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcXG4gIHotaW5kZXg6IDE7XFxuICB0b3A6IDUwJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZmxleC13cmFwOiB3cmFwO1xcbn1cXG4uZWwtc2VsZWN0X190YWdzLXRleHQge1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbn1cXG4uZWwtc2VsZWN0IC5lbC10YWcge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBtYXJnaW46IDJweCAwIDJweCA2cHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMmY1O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIG1heC13aWR0aDogMTAwJTtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5lbC1zZWxlY3QgLmVsLXRhZ19fY2xvc2UuZWwtaWNvbi1jbG9zZSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzBDNENDO1xcbiAgdG9wOiAwO1xcbiAgY29sb3I6ICNGRkY7XFxuICBmbGV4LXNocmluazogMDtcXG59XFxuLmVsLXNlbGVjdCAuZWwtdGFnX19jbG9zZS5lbC1pY29uLWNsb3NlOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM5MDkzOTk7XFxufVxcbi5lbC1zZWxlY3QgLmVsLXRhZ19fY2xvc2UuZWwtaWNvbi1jbG9zZTo6YmVmb3JlIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMC41cHgpO1xcbn1cXG4uZWwtcGFnaW5hdGlvbiB7XFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgcGFkZGluZzogMnB4IDVweDtcXG4gIGNvbG9yOiAjMzAzMTMzO1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG59XFxuLmVsLXBhZ2luYXRpb246OmFmdGVyLFxcbi5lbC1wYWdpbmF0aW9uOjpiZWZvcmUge1xcbiAgZGlzcGxheTogdGFibGU7XFxuICBjb250ZW50OiBcXFwiXFxcIjtcXG59XFxuLmVsLXBhZ2luYXRpb246OmFmdGVyIHtcXG4gIGNsZWFyOiBib3RoO1xcbn1cXG4uZWwtcGFnaW5hdGlvbiBidXR0b24sXFxuLmVsLXBhZ2luYXRpb24gc3Bhbjpub3QoW2NsYXNzKj1zdWZmaXhdKSB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBmb250LXNpemU6IDEzcHg7XFxuICBtaW4td2lkdGg6IDM1LjVweDtcXG4gIGhlaWdodDogMjhweDtcXG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcbi5lbC1wYWdpbmF0aW9uIC5lbC1pbnB1dF9faW5uZXIge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XFxuICBsaW5lLWhlaWdodDogbm9ybWFsO1xcbn1cXG4uZWwtcGFnaW5hdGlvbiAuZWwtaW5wdXRfX3N1ZmZpeCB7XFxuICByaWdodDogMDtcXG4gIHRyYW5zZm9ybTogc2NhbGUoMC44KTtcXG59XFxuLmVsLXBhZ2luYXRpb24gLmVsLXNlbGVjdCAuZWwtaW5wdXQge1xcbiAgd2lkdGg6IDEwMHB4O1xcbiAgbWFyZ2luOiAwIDVweDtcXG59XFxuLmVsLXBhZ2luYXRpb24gLmVsLXNlbGVjdCAuZWwtaW5wdXQgLmVsLWlucHV0X19pbm5lciB7XFxuICBwYWRkaW5nLXJpZ2h0OiAyNXB4O1xcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xcbn1cXG4uZWwtcGFnaW5hdGlvbiBidXR0b24ge1xcbiAgYm9yZGVyOiBub25lO1xcbiAgcGFkZGluZzogMCA2cHg7XFxuICBiYWNrZ3JvdW5kOiAwIDA7XFxufVxcbi5lbC1wYWdpbmF0aW9uIGJ1dHRvbjpmb2N1cyB7XFxuICBvdXRsaW5lOiAwO1xcbn1cXG4uZWwtcGFnaW5hdGlvbiBidXR0b246aG92ZXIge1xcbiAgY29sb3I6ICM0MDlFRkY7XFxufVxcbi5lbC1wYWdpbmF0aW9uIGJ1dHRvbjpkaXNhYmxlZCB7XFxuICBjb2xvcjogI0MwQzRDQztcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XFxuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xcbn1cXG4uZWwtcGFnaW5hdGlvbiAuYnRuLW5leHQsXFxuLmVsLXBhZ2luYXRpb24gLmJ0bi1wcmV2IHtcXG4gIGJhY2tncm91bmQ6IGNlbnRlciBjZW50ZXIgbm8tcmVwZWF0ICNGRkY7XFxuICBiYWNrZ3JvdW5kLXNpemU6IDE2cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBtYXJnaW46IDA7XFxuICBjb2xvcjogIzMwMzEzMztcXG59XFxuLmVsLXBhZ2luYXRpb24gLmJ0bi1uZXh0IC5lbC1pY29uLFxcbi5lbC1wYWdpbmF0aW9uIC5idG4tcHJldiAuZWwtaWNvbiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIGZvbnQtc2l6ZTogMTJweDtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxufVxcbi5lbC1wYWdpbmF0aW9uIC5idG4tcHJldiB7XFxuICBwYWRkaW5nLXJpZ2h0OiAxMnB4O1xcbn1cXG4uZWwtcGFnaW5hdGlvbiAuYnRuLW5leHQge1xcbiAgcGFkZGluZy1sZWZ0OiAxMnB4O1xcbn1cXG4uZWwtcGFnaW5hdGlvbiAuZWwtcGFnZXIgbGkuZGlzYWJsZWQge1xcbiAgY29sb3I6ICNDMEM0Q0M7XFxuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xcbn1cXG4uZWwtcGFnZXIgbGksXFxuLmVsLXBhZ2VyIGxpLmJ0bi1xdWlja25leHQ6aG92ZXIsXFxuLmVsLXBhZ2VyIGxpLmJ0bi1xdWlja3ByZXY6aG92ZXIge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4uZWwtcGFnaW5hdGlvbi0tc21hbGwgLmJ0bi1uZXh0LFxcbi5lbC1wYWdpbmF0aW9uLS1zbWFsbCAuYnRuLXByZXYsXFxuLmVsLXBhZ2luYXRpb24tLXNtYWxsIC5lbC1wYWdlciBsaSxcXG4uZWwtcGFnaW5hdGlvbi0tc21hbGwgLmVsLXBhZ2VyIGxpLmJ0bi1xdWlja25leHQsXFxuLmVsLXBhZ2luYXRpb24tLXNtYWxsIC5lbC1wYWdlciBsaS5idG4tcXVpY2twcmV2LFxcbi5lbC1wYWdpbmF0aW9uLS1zbWFsbCAuZWwtcGFnZXIgbGk6bGFzdC1jaGlsZCB7XFxuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbiAgbGluZS1oZWlnaHQ6IDIycHg7XFxuICBoZWlnaHQ6IDIycHg7XFxuICBtaW4td2lkdGg6IDIycHg7XFxufVxcbi5lbC1wYWdpbmF0aW9uLS1zbWFsbCAuYXJyb3cuZGlzYWJsZWQge1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbn1cXG4uZWwtcGFnaW5hdGlvbi0tc21hbGwgLm1vcmU6OmJlZm9yZSxcXG4uZWwtcGFnaW5hdGlvbi0tc21hbGwgbGkubW9yZTo6YmVmb3JlIHtcXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xcbn1cXG4uZWwtcGFnaW5hdGlvbi0tc21hbGwgYnV0dG9uLFxcbi5lbC1wYWdpbmF0aW9uLS1zbWFsbCBzcGFuOm5vdChbY2xhc3MqPXN1ZmZpeF0pIHtcXG4gIGhlaWdodDogMjJweDtcXG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xcbn1cXG4uZWwtcGFnaW5hdGlvbi0tc21hbGwgLmVsLXBhZ2luYXRpb25fX2VkaXRvcixcXG4uZWwtcGFnaW5hdGlvbi0tc21hbGwgLmVsLXBhZ2luYXRpb25fX2VkaXRvci5lbC1pbnB1dCAuZWwtaW5wdXRfX2lubmVyIHtcXG4gIGhlaWdodDogMjJweDtcXG59XFxuLmVsLXBhZ2luYXRpb25fX3NpemVzIHtcXG4gIG1hcmdpbjogMCAxMHB4IDAgMDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBjb2xvcjogIzYwNjI2NjtcXG59XFxuLmVsLXBhZ2luYXRpb25fX3NpemVzIC5lbC1pbnB1dCAuZWwtaW5wdXRfX2lubmVyIHtcXG4gIGZvbnQtc2l6ZTogMTNweDtcXG4gIHBhZGRpbmctbGVmdDogOHB4O1xcbn1cXG4uZWwtcGFnaW5hdGlvbl9fc2l6ZXMgLmVsLWlucHV0IC5lbC1pbnB1dF9faW5uZXI6aG92ZXIge1xcbiAgYm9yZGVyLWNvbG9yOiAjNDA5RUZGO1xcbn1cXG4uZWwtcGFnaW5hdGlvbl9fdG90YWwge1xcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIGNvbG9yOiAjNjA2MjY2O1xcbn1cXG4uZWwtcGFnaW5hdGlvbl9fanVtcCB7XFxuICBtYXJnaW4tbGVmdDogMjRweDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBjb2xvcjogIzYwNjI2NjtcXG59XFxuLmVsLXBhZ2luYXRpb25fX2p1bXAgLmVsLWlucHV0X19pbm5lciB7XFxuICBwYWRkaW5nOiAwIDNweDtcXG59XFxuLmVsLXBhZ2luYXRpb25fX3JpZ2h0d3JhcHBlciB7XFxuICBmbG9hdDogcmlnaHQ7XFxufVxcbi5lbC1wYWdpbmF0aW9uX19lZGl0b3Ige1xcbiAgbGluZS1oZWlnaHQ6IDE4cHg7XFxuICBwYWRkaW5nOiAwIDJweDtcXG4gIGhlaWdodDogMjhweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIG1hcmdpbjogMCAycHg7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xcbn1cXG4uZWwtcGFnZXIsXFxuLmVsLXBhZ2luYXRpb24uaXMtYmFja2dyb3VuZCAuYnRuLW5leHQsXFxuLmVsLXBhZ2luYXRpb24uaXMtYmFja2dyb3VuZCAuYnRuLXByZXYge1xcbiAgcGFkZGluZzogMDtcXG59XFxuLmVsLXBhZ2luYXRpb25fX2VkaXRvci5lbC1pbnB1dCB7XFxuICB3aWR0aDogNTBweDtcXG59XFxuLmVsLXBhZ2luYXRpb25fX2VkaXRvci5lbC1pbnB1dCAuZWwtaW5wdXRfX2lubmVyIHtcXG4gIGhlaWdodDogMjhweDtcXG59XFxuLmVsLXBhZ2luYXRpb25fX2VkaXRvciAuZWwtaW5wdXRfX2lubmVyOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxcbi5lbC1wYWdpbmF0aW9uX19lZGl0b3IgLmVsLWlucHV0X19pbm5lcjo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XFxuICBtYXJnaW46IDA7XFxufVxcbi5lbC1wYWdpbmF0aW9uLmlzLWJhY2tncm91bmQgLmJ0bi1uZXh0LFxcbi5lbC1wYWdpbmF0aW9uLmlzLWJhY2tncm91bmQgLmJ0bi1wcmV2LFxcbi5lbC1wYWdpbmF0aW9uLmlzLWJhY2tncm91bmQgLmVsLXBhZ2VyIGxpIHtcXG4gIG1hcmdpbjogMCA1cHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY1O1xcbiAgY29sb3I6ICM2MDYyNjY7XFxuICBtaW4td2lkdGg6IDMwcHg7XFxuICBib3JkZXItcmFkaXVzOiAycHg7XFxufVxcbi5lbC1wYWdpbmF0aW9uLmlzLWJhY2tncm91bmQgLmJ0bi1uZXh0LmRpc2FibGVkLFxcbi5lbC1wYWdpbmF0aW9uLmlzLWJhY2tncm91bmQgLmJ0bi1uZXh0OmRpc2FibGVkLFxcbi5lbC1wYWdpbmF0aW9uLmlzLWJhY2tncm91bmQgLmJ0bi1wcmV2LmRpc2FibGVkLFxcbi5lbC1wYWdpbmF0aW9uLmlzLWJhY2tncm91bmQgLmJ0bi1wcmV2OmRpc2FibGVkLFxcbi5lbC1wYWdpbmF0aW9uLmlzLWJhY2tncm91bmQgLmVsLXBhZ2VyIGxpLmRpc2FibGVkIHtcXG4gIGNvbG9yOiAjQzBDNENDO1xcbn1cXG4uZWwtcGFnaW5hdGlvbi5pcy1iYWNrZ3JvdW5kIC5lbC1wYWdlciBsaTpub3QoLmRpc2FibGVkKTpob3ZlciB7XFxuICBjb2xvcjogIzQwOUVGRjtcXG59XFxuLmVsLXBhZ2luYXRpb24uaXMtYmFja2dyb3VuZCAuZWwtcGFnZXIgbGk6bm90KC5kaXNhYmxlZCkuYWN0aXZlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM0MDlFRkY7XFxuICBjb2xvcjogI0ZGRjtcXG59XFxuLmVsLXBhZ2luYXRpb24uaXMtYmFja2dyb3VuZC5lbC1wYWdpbmF0aW9uLS1zbWFsbCAuYnRuLW5leHQsXFxuLmVsLXBhZ2luYXRpb24uaXMtYmFja2dyb3VuZC5lbC1wYWdpbmF0aW9uLS1zbWFsbCAuYnRuLXByZXYsXFxuLmVsLXBhZ2luYXRpb24uaXMtYmFja2dyb3VuZC5lbC1wYWdpbmF0aW9uLS1zbWFsbCAuZWwtcGFnZXIgbGkge1xcbiAgbWFyZ2luOiAwIDNweDtcXG4gIG1pbi13aWR0aDogMjJweDtcXG59XFxuLmVsLXBhZ2VyLFxcbi5lbC1wYWdlciBsaSB7XFxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgbWFyZ2luOiAwO1xcbn1cXG4uZWwtcGFnZXIge1xcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XFxuICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICBmb250LXNpemU6IDA7XFxufVxcbi5lbC1wYWdlciAubW9yZTo6YmVmb3JlIHtcXG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xcbn1cXG4uZWwtcGFnZXIgbGkge1xcbiAgcGFkZGluZzogMCA0cHg7XFxuICBiYWNrZ3JvdW5kOiAjRkZGO1xcbiAgZm9udC1zaXplOiAxM3B4O1xcbiAgbWluLXdpZHRoOiAzNS41cHg7XFxuICBoZWlnaHQ6IDI4cHg7XFxuICBsaW5lLWhlaWdodDogMjhweDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcbi5lbC1wYWdlciBsaS5idG4tcXVpY2tuZXh0LFxcbi5lbC1wYWdlciBsaS5idG4tcXVpY2twcmV2IHtcXG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xcbiAgY29sb3I6ICMzMDMxMzM7XFxufVxcbi5lbC1wYWdlciBsaS5idG4tcXVpY2tuZXh0LmRpc2FibGVkLFxcbi5lbC1wYWdlciBsaS5idG4tcXVpY2twcmV2LmRpc2FibGVkIHtcXG4gIGNvbG9yOiAjQzBDNENDO1xcbn1cXG4uZWwtcGFnZXIgbGkuYWN0aXZlICsgbGkge1xcbiAgYm9yZGVyLWxlZnQ6IDA7XFxufVxcbi5lbC1wYWdlciBsaTpob3ZlciB7XFxuICBjb2xvcjogIzQwOUVGRjtcXG59XFxuLmVsLXBhZ2VyIGxpLmFjdGl2ZSB7XFxuICBjb2xvcjogIzQwOUVGRjtcXG4gIGN1cnNvcjogZGVmYXVsdDtcXG59XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsIm1vZHVsZS5leHBvcnRzID1cbi8qKioqKiovIChmdW5jdGlvbihtb2R1bGVzKSB7IC8vIHdlYnBhY2tCb290c3RyYXBcbi8qKioqKiovIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbi8qKioqKiovIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbi8qKioqKiovIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuLyoqKioqKi8gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4vKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuLyoqKioqKi8gXHRcdFx0aTogbW9kdWxlSWQsXG4vKioqKioqLyBcdFx0XHRsOiBmYWxzZSxcbi8qKioqKiovIFx0XHRcdGV4cG9ydHM6IHt9XG4vKioqKioqLyBcdFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4vKioqKioqLyBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbi8qKioqKiovIFx0XHRtb2R1bGUubCA9IHRydWU7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4vKioqKioqLyBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuLyoqKioqKi8gXHR9XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4vKioqKioqLyBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4vKioqKioqLyBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4vKioqKioqLyBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuLyoqKioqKi8gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4vKioqKioqLyBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuLyoqKioqKi8gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbi8qKioqKiovIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuLyoqKioqKi8gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbi8qKioqKiovIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuLyoqKioqKi8gXHRcdHJldHVybiBucztcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuLyoqKioqKi8gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuLyoqKioqKi8gXHRcdHJldHVybiBnZXR0ZXI7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIvZGlzdC9cIjtcbi8qKioqKiovXG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNjIpO1xuLyoqKioqKi8gfSlcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqLyAoe1xuXG4vKioqLyAwOlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJhXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gbm9ybWFsaXplQ29tcG9uZW50OyB9KTtcbi8qIGdsb2JhbHMgX19WVUVfU1NSX0NPTlRFWFRfXyAqL1xuXG4vLyBJTVBPUlRBTlQ6IERvIE5PVCB1c2UgRVMyMDE1IGZlYXR1cmVzIGluIHRoaXMgZmlsZSAoZXhjZXB0IGZvciBtb2R1bGVzKS5cbi8vIFRoaXMgbW9kdWxlIGlzIGEgcnVudGltZSB1dGlsaXR5IGZvciBjbGVhbmVyIGNvbXBvbmVudCBtb2R1bGUgb3V0cHV0IGFuZCB3aWxsXG4vLyBiZSBpbmNsdWRlZCBpbiB0aGUgZmluYWwgd2VicGFjayB1c2VyIGJ1bmRsZS5cblxuZnVuY3Rpb24gbm9ybWFsaXplQ29tcG9uZW50IChcbiAgc2NyaXB0RXhwb3J0cyxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZ1bmN0aW9uYWxUZW1wbGF0ZSxcbiAgaW5qZWN0U3R5bGVzLFxuICBzY29wZUlkLFxuICBtb2R1bGVJZGVudGlmaWVyLCAvKiBzZXJ2ZXIgb25seSAqL1xuICBzaGFkb3dNb2RlIC8qIHZ1ZS1jbGkgb25seSAqL1xuKSB7XG4gIC8vIFZ1ZS5leHRlbmQgY29uc3RydWN0b3IgZXhwb3J0IGludGVyb3BcbiAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygc2NyaXB0RXhwb3J0cyA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gc2NyaXB0RXhwb3J0cy5vcHRpb25zXG4gICAgOiBzY3JpcHRFeHBvcnRzXG5cbiAgLy8gcmVuZGVyIGZ1bmN0aW9uc1xuICBpZiAocmVuZGVyKSB7XG4gICAgb3B0aW9ucy5yZW5kZXIgPSByZW5kZXJcbiAgICBvcHRpb25zLnN0YXRpY1JlbmRlckZucyA9IHN0YXRpY1JlbmRlckZuc1xuICAgIG9wdGlvbnMuX2NvbXBpbGVkID0gdHJ1ZVxuICB9XG5cbiAgLy8gZnVuY3Rpb25hbCB0ZW1wbGF0ZVxuICBpZiAoZnVuY3Rpb25hbFRlbXBsYXRlKSB7XG4gICAgb3B0aW9ucy5mdW5jdGlvbmFsID0gdHJ1ZVxuICB9XG5cbiAgLy8gc2NvcGVkSWRcbiAgaWYgKHNjb3BlSWQpIHtcbiAgICBvcHRpb25zLl9zY29wZUlkID0gJ2RhdGEtdi0nICsgc2NvcGVJZFxuICB9XG5cbiAgdmFyIGhvb2tcbiAgaWYgKG1vZHVsZUlkZW50aWZpZXIpIHsgLy8gc2VydmVyIGJ1aWxkXG4gICAgaG9vayA9IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAvLyAyLjMgaW5qZWN0aW9uXG4gICAgICBjb250ZXh0ID1cbiAgICAgICAgY29udGV4dCB8fCAvLyBjYWNoZWQgY2FsbFxuICAgICAgICAodGhpcy4kdm5vZGUgJiYgdGhpcy4kdm5vZGUuc3NyQ29udGV4dCkgfHwgLy8gc3RhdGVmdWxcbiAgICAgICAgKHRoaXMucGFyZW50ICYmIHRoaXMucGFyZW50LiR2bm9kZSAmJiB0aGlzLnBhcmVudC4kdm5vZGUuc3NyQ29udGV4dCkgLy8gZnVuY3Rpb25hbFxuICAgICAgLy8gMi4yIHdpdGggcnVuSW5OZXdDb250ZXh0OiB0cnVlXG4gICAgICBpZiAoIWNvbnRleHQgJiYgdHlwZW9mIF9fVlVFX1NTUl9DT05URVhUX18gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnRleHQgPSBfX1ZVRV9TU1JfQ09OVEVYVF9fXG4gICAgICB9XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHN0eWxlc1xuICAgICAgaWYgKGluamVjdFN0eWxlcykge1xuICAgICAgICBpbmplY3RTdHlsZXMuY2FsbCh0aGlzLCBjb250ZXh0KVxuICAgICAgfVxuICAgICAgLy8gcmVnaXN0ZXIgY29tcG9uZW50IG1vZHVsZSBpZGVudGlmaWVyIGZvciBhc3luYyBjaHVuayBpbmZlcnJlbmNlXG4gICAgICBpZiAoY29udGV4dCAmJiBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cykge1xuICAgICAgICBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cy5hZGQobW9kdWxlSWRlbnRpZmllcilcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gdXNlZCBieSBzc3IgaW4gY2FzZSBjb21wb25lbnQgaXMgY2FjaGVkIGFuZCBiZWZvcmVDcmVhdGVcbiAgICAvLyBuZXZlciBnZXRzIGNhbGxlZFxuICAgIG9wdGlvbnMuX3NzclJlZ2lzdGVyID0gaG9va1xuICB9IGVsc2UgaWYgKGluamVjdFN0eWxlcykge1xuICAgIGhvb2sgPSBzaGFkb3dNb2RlXG4gICAgICA/IGZ1bmN0aW9uICgpIHsgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgdGhpcy4kcm9vdC4kb3B0aW9ucy5zaGFkb3dSb290KSB9XG4gICAgICA6IGluamVjdFN0eWxlc1xuICB9XG5cbiAgaWYgKGhvb2spIHtcbiAgICBpZiAob3B0aW9ucy5mdW5jdGlvbmFsKSB7XG4gICAgICAvLyBmb3IgdGVtcGxhdGUtb25seSBob3QtcmVsb2FkIGJlY2F1c2UgaW4gdGhhdCBjYXNlIHRoZSByZW5kZXIgZm4gZG9lc24ndFxuICAgICAgLy8gZ28gdGhyb3VnaCB0aGUgbm9ybWFsaXplclxuICAgICAgb3B0aW9ucy5faW5qZWN0U3R5bGVzID0gaG9va1xuICAgICAgLy8gcmVnaXN0ZXIgZm9yIGZ1bmN0aW9hbCBjb21wb25lbnQgaW4gdnVlIGZpbGVcbiAgICAgIHZhciBvcmlnaW5hbFJlbmRlciA9IG9wdGlvbnMucmVuZGVyXG4gICAgICBvcHRpb25zLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcldpdGhTdHlsZUluamVjdGlvbiAoaCwgY29udGV4dCkge1xuICAgICAgICBob29rLmNhbGwoY29udGV4dClcbiAgICAgICAgcmV0dXJuIG9yaWdpbmFsUmVuZGVyKGgsIGNvbnRleHQpXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGluamVjdCBjb21wb25lbnQgcmVnaXN0cmF0aW9uIGFzIGJlZm9yZUNyZWF0ZSBob29rXG4gICAgICB2YXIgZXhpc3RpbmcgPSBvcHRpb25zLmJlZm9yZUNyZWF0ZVxuICAgICAgb3B0aW9ucy5iZWZvcmVDcmVhdGUgPSBleGlzdGluZ1xuICAgICAgICA/IFtdLmNvbmNhdChleGlzdGluZywgaG9vaylcbiAgICAgICAgOiBbaG9va11cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGV4cG9ydHM6IHNjcmlwdEV4cG9ydHMsXG4gICAgb3B0aW9uczogb3B0aW9uc1xuICB9XG59XG5cblxuLyoqKi8gfSksXG5cbi8qKiovIDEwOlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJlbGVtZW50LXVpL2xpYi9pbnB1dFwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDEyOlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJlbGVtZW50LXVpL2xpYi91dGlscy9jbGlja291dHNpZGVcIik7XG5cbi8qKiovIH0pLFxuXG4vKioqLyAxNTpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvc2Nyb2xsYmFyXCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gMTY6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImVsZW1lbnQtdWkvbGliL3V0aWxzL3Jlc2l6ZS1ldmVudFwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDE5OlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJ0aHJvdHRsZS1kZWJvdW5jZS9kZWJvdW5jZVwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDIxOlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJlbGVtZW50LXVpL2xpYi91dGlscy9zaGFyZWRcIik7XG5cbi8qKiovIH0pLFxuXG4vKioqLyAyMjpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvbWl4aW5zL2ZvY3VzXCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gMzpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvdXRpbHMvdXRpbFwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDMxOlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJlbGVtZW50LXVpL2xpYi91dGlscy9zY3JvbGwtaW50by12aWV3XCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gMzM6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03YTQ0YzY0MiZcbnZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJsaVwiLFxuICAgIHtcbiAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6IFwic2hvd1wiLFxuICAgICAgICAgIHJhd05hbWU6IFwidi1zaG93XCIsXG4gICAgICAgICAgdmFsdWU6IF92bS52aXNpYmxlLFxuICAgICAgICAgIGV4cHJlc3Npb246IFwidmlzaWJsZVwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBzdGF0aWNDbGFzczogXCJlbC1zZWxlY3QtZHJvcGRvd25fX2l0ZW1cIixcbiAgICAgIGNsYXNzOiB7XG4gICAgICAgIHNlbGVjdGVkOiBfdm0uaXRlbVNlbGVjdGVkLFxuICAgICAgICBcImlzLWRpc2FibGVkXCI6IF92bS5kaXNhYmxlZCB8fCBfdm0uZ3JvdXBEaXNhYmxlZCB8fCBfdm0ubGltaXRSZWFjaGVkLFxuICAgICAgICBob3ZlcjogX3ZtLmhvdmVyXG4gICAgICB9LFxuICAgICAgb246IHtcbiAgICAgICAgbW91c2VlbnRlcjogX3ZtLmhvdmVySXRlbSxcbiAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKVxuICAgICAgICAgIHJldHVybiBfdm0uc2VsZWN0T3B0aW9uQ2xpY2soJGV2ZW50KVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBbX3ZtLl90KFwiZGVmYXVsdFwiLCBbX2MoXCJzcGFuXCIsIFtfdm0uX3YoX3ZtLl9zKF92bS5jdXJyZW50TGFiZWwpKV0pXSldLFxuICAgIDJcbiAgKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03YTQ0YzY0MiZcblxuLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCBcImVsZW1lbnQtdWkvbGliL21peGlucy9lbWl0dGVyXCJcbnZhciBlbWl0dGVyXyA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG52YXIgZW1pdHRlcl9kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihlbWl0dGVyXyk7XG5cbi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgXCJlbGVtZW50LXVpL2xpYi91dGlscy91dGlsXCJcbnZhciB1dGlsXyA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIG9wdGlvbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyA9ICh7XG4gIG1peGluczogW2VtaXR0ZXJfZGVmYXVsdC5hXSxcblxuICBuYW1lOiAnRWxPcHRpb24nLFxuXG4gIGNvbXBvbmVudE5hbWU6ICdFbE9wdGlvbicsXG5cbiAgaW5qZWN0OiBbJ3NlbGVjdCddLFxuXG4gIHByb3BzOiB7XG4gICAgdmFsdWU6IHtcbiAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICBsYWJlbDogW1N0cmluZywgTnVtYmVyXSxcbiAgICBjcmVhdGVkOiBCb29sZWFuLFxuICAgIGRpc2FibGVkOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICB9XG4gIH0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5kZXg6IC0xLFxuICAgICAgZ3JvdXBEaXNhYmxlZDogZmFsc2UsXG4gICAgICB2aXNpYmxlOiB0cnVlLFxuICAgICAgaGl0U3RhdGU6IGZhbHNlLFxuICAgICAgaG92ZXI6IGZhbHNlXG4gICAgfTtcbiAgfSxcblxuXG4gIGNvbXB1dGVkOiB7XG4gICAgaXNPYmplY3Q6IGZ1bmN0aW9uIGlzT2JqZWN0KCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0aGlzLnZhbHVlKS50b0xvd2VyQ2FzZSgpID09PSAnW29iamVjdCBvYmplY3RdJztcbiAgICB9LFxuICAgIGN1cnJlbnRMYWJlbDogZnVuY3Rpb24gY3VycmVudExhYmVsKCkge1xuICAgICAgcmV0dXJuIHRoaXMubGFiZWwgfHwgKHRoaXMuaXNPYmplY3QgPyAnJyA6IHRoaXMudmFsdWUpO1xuICAgIH0sXG4gICAgY3VycmVudFZhbHVlOiBmdW5jdGlvbiBjdXJyZW50VmFsdWUoKSB7XG4gICAgICByZXR1cm4gdGhpcy52YWx1ZSB8fCB0aGlzLmxhYmVsIHx8ICcnO1xuICAgIH0sXG4gICAgaXRlbVNlbGVjdGVkOiBmdW5jdGlvbiBpdGVtU2VsZWN0ZWQoKSB7XG4gICAgICBpZiAoIXRoaXMuc2VsZWN0Lm11bHRpcGxlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzRXF1YWwodGhpcy52YWx1ZSwgdGhpcy5zZWxlY3QudmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGFpbnModGhpcy5zZWxlY3QudmFsdWUsIHRoaXMudmFsdWUpO1xuICAgICAgfVxuICAgIH0sXG4gICAgbGltaXRSZWFjaGVkOiBmdW5jdGlvbiBsaW1pdFJlYWNoZWQoKSB7XG4gICAgICBpZiAodGhpcy5zZWxlY3QubXVsdGlwbGUpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLml0ZW1TZWxlY3RlZCAmJiAodGhpcy5zZWxlY3QudmFsdWUgfHwgW10pLmxlbmd0aCA+PSB0aGlzLnNlbGVjdC5tdWx0aXBsZUxpbWl0ICYmIHRoaXMuc2VsZWN0Lm11bHRpcGxlTGltaXQgPiAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICB3YXRjaDoge1xuICAgIGN1cnJlbnRMYWJlbDogZnVuY3Rpb24gY3VycmVudExhYmVsKCkge1xuICAgICAgaWYgKCF0aGlzLmNyZWF0ZWQgJiYgIXRoaXMuc2VsZWN0LnJlbW90ZSkgdGhpcy5kaXNwYXRjaCgnRWxTZWxlY3QnLCAnc2V0U2VsZWN0ZWQnKTtcbiAgICB9LFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSh2YWwsIG9sZFZhbCkge1xuICAgICAgdmFyIF9zZWxlY3QgPSB0aGlzLnNlbGVjdCxcbiAgICAgICAgICByZW1vdGUgPSBfc2VsZWN0LnJlbW90ZSxcbiAgICAgICAgICB2YWx1ZUtleSA9IF9zZWxlY3QudmFsdWVLZXk7XG5cbiAgICAgIGlmICghdGhpcy5jcmVhdGVkICYmICFyZW1vdGUpIHtcbiAgICAgICAgaWYgKHZhbHVlS2V5ICYmICh0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZih2YWwpKSA9PT0gJ29iamVjdCcgJiYgKHR5cGVvZiBvbGRWYWwgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKG9sZFZhbCkpID09PSAnb2JqZWN0JyAmJiB2YWxbdmFsdWVLZXldID09PSBvbGRWYWxbdmFsdWVLZXldKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZGlzcGF0Y2goJ0VsU2VsZWN0JywgJ3NldFNlbGVjdGVkJyk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBpc0VxdWFsOiBmdW5jdGlvbiBpc0VxdWFsKGEsIGIpIHtcbiAgICAgIGlmICghdGhpcy5pc09iamVjdCkge1xuICAgICAgICByZXR1cm4gYSA9PT0gYjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciB2YWx1ZUtleSA9IHRoaXMuc2VsZWN0LnZhbHVlS2V5O1xuICAgICAgICByZXR1cm4gT2JqZWN0KHV0aWxfW1wiZ2V0VmFsdWVCeVBhdGhcIl0pKGEsIHZhbHVlS2V5KSA9PT0gT2JqZWN0KHV0aWxfW1wiZ2V0VmFsdWVCeVBhdGhcIl0pKGIsIHZhbHVlS2V5KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGNvbnRhaW5zOiBmdW5jdGlvbiBjb250YWlucygpIHtcbiAgICAgIHZhciBhcnIgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICAgICAgdmFyIHRhcmdldCA9IGFyZ3VtZW50c1sxXTtcblxuICAgICAgaWYgKCF0aGlzLmlzT2JqZWN0KSB7XG4gICAgICAgIHJldHVybiBhcnIgJiYgYXJyLmluZGV4T2YodGFyZ2V0KSA+IC0xO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHZhbHVlS2V5ID0gdGhpcy5zZWxlY3QudmFsdWVLZXk7XG4gICAgICAgIHJldHVybiBhcnIgJiYgYXJyLnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICByZXR1cm4gT2JqZWN0KHV0aWxfW1wiZ2V0VmFsdWVCeVBhdGhcIl0pKGl0ZW0sIHZhbHVlS2V5KSA9PT0gT2JqZWN0KHV0aWxfW1wiZ2V0VmFsdWVCeVBhdGhcIl0pKHRhcmdldCwgdmFsdWVLZXkpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGhhbmRsZUdyb3VwRGlzYWJsZWQ6IGZ1bmN0aW9uIGhhbmRsZUdyb3VwRGlzYWJsZWQodmFsKSB7XG4gICAgICB0aGlzLmdyb3VwRGlzYWJsZWQgPSB2YWw7XG4gICAgfSxcbiAgICBob3Zlckl0ZW06IGZ1bmN0aW9uIGhvdmVySXRlbSgpIHtcbiAgICAgIGlmICghdGhpcy5kaXNhYmxlZCAmJiAhdGhpcy5ncm91cERpc2FibGVkKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0LmhvdmVySW5kZXggPSB0aGlzLnNlbGVjdC5vcHRpb25zLmluZGV4T2YodGhpcyk7XG4gICAgICB9XG4gICAgfSxcbiAgICBzZWxlY3RPcHRpb25DbGljazogZnVuY3Rpb24gc2VsZWN0T3B0aW9uQ2xpY2soKSB7XG4gICAgICBpZiAodGhpcy5kaXNhYmxlZCAhPT0gdHJ1ZSAmJiB0aGlzLmdyb3VwRGlzYWJsZWQgIT09IHRydWUpIHtcbiAgICAgICAgdGhpcy5kaXNwYXRjaCgnRWxTZWxlY3QnLCAnaGFuZGxlT3B0aW9uQ2xpY2snLCBbdGhpcywgdHJ1ZV0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgcXVlcnlDaGFuZ2U6IGZ1bmN0aW9uIHF1ZXJ5Q2hhbmdlKHF1ZXJ5KSB7XG4gICAgICB0aGlzLnZpc2libGUgPSBuZXcgUmVnRXhwKE9iamVjdCh1dGlsX1tcImVzY2FwZVJlZ2V4cFN0cmluZ1wiXSkocXVlcnkpLCAnaScpLnRlc3QodGhpcy5jdXJyZW50TGFiZWwpIHx8IHRoaXMuY3JlYXRlZDtcbiAgICAgIGlmICghdGhpcy52aXNpYmxlKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0LmZpbHRlcmVkT3B0aW9uc0NvdW50LS07XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7XG4gICAgdGhpcy5zZWxlY3Qub3B0aW9ucy5wdXNoKHRoaXMpO1xuICAgIHRoaXMuc2VsZWN0LmNhY2hlZE9wdGlvbnMucHVzaCh0aGlzKTtcbiAgICB0aGlzLnNlbGVjdC5vcHRpb25zQ291bnQrKztcbiAgICB0aGlzLnNlbGVjdC5maWx0ZXJlZE9wdGlvbnNDb3VudCsrO1xuXG4gICAgdGhpcy4kb24oJ3F1ZXJ5Q2hhbmdlJywgdGhpcy5xdWVyeUNoYW5nZSk7XG4gICAgdGhpcy4kb24oJ2hhbmRsZUdyb3VwRGlzYWJsZWQnLCB0aGlzLmhhbmRsZUdyb3VwRGlzYWJsZWQpO1xuICB9LFxuICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkge1xuICAgIHZhciBfc2VsZWN0MiA9IHRoaXMuc2VsZWN0LFxuICAgICAgICBzZWxlY3RlZCA9IF9zZWxlY3QyLnNlbGVjdGVkLFxuICAgICAgICBtdWx0aXBsZSA9IF9zZWxlY3QyLm11bHRpcGxlO1xuXG4gICAgdmFyIHNlbGVjdGVkT3B0aW9ucyA9IG11bHRpcGxlID8gc2VsZWN0ZWQgOiBbc2VsZWN0ZWRdO1xuICAgIHZhciBpbmRleCA9IHRoaXMuc2VsZWN0LmNhY2hlZE9wdGlvbnMuaW5kZXhPZih0aGlzKTtcbiAgICB2YXIgc2VsZWN0ZWRJbmRleCA9IHNlbGVjdGVkT3B0aW9ucy5pbmRleE9mKHRoaXMpO1xuXG4gICAgLy8gaWYgb3B0aW9uIGlzIG5vdCBzZWxlY3RlZCwgcmVtb3ZlIGl0IGZyb20gY2FjaGVcbiAgICBpZiAoaW5kZXggPiAtMSAmJiBzZWxlY3RlZEluZGV4IDwgMCkge1xuICAgICAgdGhpcy5zZWxlY3QuY2FjaGVkT3B0aW9ucy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgICB0aGlzLnNlbGVjdC5vbk9wdGlvbkRlc3Ryb3kodGhpcy5zZWxlY3Qub3B0aW9ucy5pbmRleE9mKHRoaXMpKTtcbiAgfVxufSk7XG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcbiAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBzcmNfb3B0aW9udnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfID0gKG9wdGlvbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyk7IFxuLy8gRVhURVJOQUwgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcbnZhciBjb21wb25lbnROb3JtYWxpemVyID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL29wdGlvbi52dWVcblxuXG5cblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5cbnZhciBjb21wb25lbnQgPSBPYmplY3QoY29tcG9uZW50Tm9ybWFsaXplcltcImFcIiAvKiBkZWZhdWx0ICovXSkoXG4gIHNyY19vcHRpb252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKGZhbHNlKSB7IHZhciBhcGk7IH1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicGFja2FnZXMvc2VsZWN0L3NyYy9vcHRpb24udnVlXCJcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIHNyY19vcHRpb24gPSBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9IChjb21wb25lbnQuZXhwb3J0cyk7XG5cbi8qKiovIH0pLFxuXG4vKioqLyAzODpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvdGFnXCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gNDpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvbWl4aW5zL2VtaXR0ZXJcIik7XG5cbi8qKiovIH0pLFxuXG4vKioqLyA1OlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJlbGVtZW50LXVpL2xpYi91dGlscy92dWUtcG9wcGVyXCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gNjpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvbWl4aW5zL2xvY2FsZVwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDYyOlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL3NlbGVjdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MGU0YWFkZTYmXG52YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJjbGlja291dHNpZGVcIixcbiAgICAgICAgICByYXdOYW1lOiBcInYtY2xpY2tvdXRzaWRlXCIsXG4gICAgICAgICAgdmFsdWU6IF92bS5oYW5kbGVDbG9zZSxcbiAgICAgICAgICBleHByZXNzaW9uOiBcImhhbmRsZUNsb3NlXCJcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIHN0YXRpY0NsYXNzOiBcImVsLXNlbGVjdFwiLFxuICAgICAgY2xhc3M6IFtfdm0uc2VsZWN0U2l6ZSA/IFwiZWwtc2VsZWN0LS1cIiArIF92bS5zZWxlY3RTaXplIDogXCJcIl0sXG4gICAgICBvbjoge1xuICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgICAgcmV0dXJuIF92bS50b2dnbGVNZW51KCRldmVudClcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgW1xuICAgICAgX3ZtLm11bHRpcGxlXG4gICAgICAgID8gX2MoXG4gICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICByZWY6IFwidGFnc1wiLFxuICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJlbC1zZWxlY3RfX3RhZ3NcIixcbiAgICAgICAgICAgICAgc3R5bGU6IHsgXCJtYXgtd2lkdGhcIjogX3ZtLmlucHV0V2lkdGggLSAzMiArIFwicHhcIiwgd2lkdGg6IFwiMTAwJVwiIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgIF92bS5jb2xsYXBzZVRhZ3MgJiYgX3ZtLnNlbGVjdGVkLmxlbmd0aFxuICAgICAgICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgICAgICAgIFwic3BhblwiLFxuICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICBcImVsLXRhZ1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsb3NhYmxlOiAhX3ZtLnNlbGVjdERpc2FibGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU6IF92bS5jb2xsYXBzZVRhZ1NpemUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGl0OiBfdm0uc2VsZWN0ZWRbMF0uaGl0U3RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJpbmZvXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXNhYmxlLXRyYW5zaXRpb25zXCI6IFwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9zZTogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZGVsZXRlVGFnKCRldmVudCwgX3ZtLnNlbGVjdGVkWzBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJzcGFuXCIsIHsgc3RhdGljQ2xhc3M6IFwiZWwtc2VsZWN0X190YWdzLXRleHRcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uc2VsZWN0ZWRbMF0uY3VycmVudExhYmVsKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgIF92bS5zZWxlY3RlZC5sZW5ndGggPiAxXG4gICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZWwtdGFnXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xvc2FibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplOiBfdm0uY29sbGFwc2VUYWdTaXplLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImluZm9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXNhYmxlLXRyYW5zaXRpb25zXCI6IFwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNwYW5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJlbC1zZWxlY3RfX3RhZ3MtdGV4dFwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoXCIrIFwiICsgX3ZtLl9zKF92bS5zZWxlY3RlZC5sZW5ndGggLSAxKSldXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAhX3ZtLmNvbGxhcHNlVGFnc1xuICAgICAgICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgICAgICAgIFwidHJhbnNpdGlvbi1ncm91cFwiLFxuICAgICAgICAgICAgICAgICAgICB7IG9uOiB7IFwiYWZ0ZXItbGVhdmVcIjogX3ZtLnJlc2V0SW5wdXRIZWlnaHQgfSB9LFxuICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLnNlbGVjdGVkLCBmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJlbC10YWdcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBfdm0uZ2V0VmFsdWVLZXkoaXRlbSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xvc2FibGU6ICFfdm0uc2VsZWN0RGlzYWJsZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZTogX3ZtLmNvbGxhcHNlVGFnU2l6ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXQ6IGl0ZW0uaGl0U3RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJpbmZvXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXNhYmxlLXRyYW5zaXRpb25zXCI6IFwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9zZTogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZGVsZXRlVGFnKCRldmVudCwgaXRlbSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwic3BhblwiLCB7IHN0YXRpY0NsYXNzOiBcImVsLXNlbGVjdF9fdGFncy10ZXh0XCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoaXRlbS5jdXJyZW50TGFiZWwpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICBfdm0uZmlsdGVyYWJsZVxuICAgICAgICAgICAgICAgID8gX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtbW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ucXVlcnksXG4gICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcInF1ZXJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIHJlZjogXCJpbnB1dFwiLFxuICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJlbC1zZWxlY3RfX2lucHV0XCIsXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzOiBbX3ZtLnNlbGVjdFNpemUgPyBcImlzLVwiICsgX3ZtLnNlbGVjdFNpemUgOiBcIlwiXSxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICBcImZsZXgtZ3Jvd1wiOiBcIjFcIixcbiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogX3ZtLmlucHV0TGVuZ3RoIC8gKF92bS5pbnB1dFdpZHRoIC0gMzIpICsgXCIlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJtYXgtd2lkdGhcIjogX3ZtLmlucHV0V2lkdGggLSA0MiArIFwicHhcIlxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiBfdm0uc2VsZWN0RGlzYWJsZWQsXG4gICAgICAgICAgICAgICAgICAgICAgYXV0b2NvbXBsZXRlOiBfdm0uYXV0b0NvbXBsZXRlIHx8IF92bS5hdXRvY29tcGxldGVcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5xdWVyeSB9LFxuICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgIGZvY3VzOiBfdm0uaGFuZGxlRm9jdXMsXG4gICAgICAgICAgICAgICAgICAgICAgYmx1cjogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uc29mdEZvY3VzID0gZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIGtleXVwOiBfdm0ubWFuYWdlUGxhY2Vob2xkZXIsXG4gICAgICAgICAgICAgICAgICAgICAga2V5ZG93bjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnJlc2V0SW5wdXRTdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIShcImJ1dHRvblwiIGluICRldmVudCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2soJGV2ZW50LmtleUNvZGUsIFwiZG93blwiLCA0MCwgJGV2ZW50LmtleSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJEb3duXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkFycm93RG93blwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uaGFuZGxlTmF2aWdhdGUoXCJuZXh0XCIpXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhKFwiYnV0dG9uXCIgaW4gJGV2ZW50KSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5faygkZXZlbnQua2V5Q29kZSwgXCJ1cFwiLCAzOCwgJGV2ZW50LmtleSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJVcFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJBcnJvd1VwXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5oYW5kbGVOYXZpZ2F0ZShcInByZXZcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICEoXCJidXR0b25cIiBpbiAkZXZlbnQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9rKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LmtleUNvZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImVudGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxMyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5rZXksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkVudGVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zZWxlY3RPcHRpb24oJGV2ZW50KVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIShcImJ1dHRvblwiIGluICRldmVudCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2soJGV2ZW50LmtleUNvZGUsIFwiZXNjXCIsIDI3LCAkZXZlbnQua2V5LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkVzY1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJFc2NhcGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS52aXNpYmxlID0gZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICEoXCJidXR0b25cIiBpbiAkZXZlbnQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9rKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LmtleUNvZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRlbGV0ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWzgsIDQ2XSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5rZXksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXCJCYWNrc3BhY2VcIiwgXCJEZWxldGVcIiwgXCJEZWxcIl1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5kZWxldGVQcmV2VGFnKCRldmVudClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICEoXCJidXR0b25cIiBpbiAkZXZlbnQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9rKCRldmVudC5rZXlDb2RlLCBcInRhYlwiLCA5LCAkZXZlbnQua2V5LCBcIlRhYlwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS52aXNpYmxlID0gZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgIGNvbXBvc2l0aW9uc3RhcnQ6IF92bS5oYW5kbGVDb21wb3NpdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICBjb21wb3NpdGlvbnVwZGF0ZTogX3ZtLmhhbmRsZUNvbXBvc2l0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgIGNvbXBvc2l0aW9uZW5kOiBfdm0uaGFuZGxlQ29tcG9zaXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0ucXVlcnkgPSAkZXZlbnQudGFyZ2V0LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmRlYm91bmNlZFF1ZXJ5Q2hhbmdlXG4gICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIDogX3ZtLl9lKClcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAxXG4gICAgICAgICAgKVxuICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgX2MoXG4gICAgICAgIFwiZWwtaW5wdXRcIixcbiAgICAgICAge1xuICAgICAgICAgIHJlZjogXCJyZWZlcmVuY2VcIixcbiAgICAgICAgICBjbGFzczogeyBcImlzLWZvY3VzXCI6IF92bS52aXNpYmxlIH0sXG4gICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICAgICAgcGxhY2Vob2xkZXI6IF92bS5jdXJyZW50UGxhY2Vob2xkZXIsXG4gICAgICAgICAgICBuYW1lOiBfdm0ubmFtZSxcbiAgICAgICAgICAgIGlkOiBfdm0uaWQsXG4gICAgICAgICAgICBhdXRvY29tcGxldGU6IF92bS5hdXRvQ29tcGxldGUgfHwgX3ZtLmF1dG9jb21wbGV0ZSxcbiAgICAgICAgICAgIHNpemU6IF92bS5zZWxlY3RTaXplLFxuICAgICAgICAgICAgZGlzYWJsZWQ6IF92bS5zZWxlY3REaXNhYmxlZCxcbiAgICAgICAgICAgIHJlYWRvbmx5OiBfdm0ucmVhZG9ubHksXG4gICAgICAgICAgICBcInZhbGlkYXRlLWV2ZW50XCI6IGZhbHNlLFxuICAgICAgICAgICAgdGFiaW5kZXg6IF92bS5tdWx0aXBsZSAmJiBfdm0uZmlsdGVyYWJsZSA/IFwiLTFcIiA6IG51bGxcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICBmb2N1czogX3ZtLmhhbmRsZUZvY3VzLFxuICAgICAgICAgICAgYmx1cjogX3ZtLmhhbmRsZUJsdXIsXG4gICAgICAgICAgICBpbnB1dDogX3ZtLmRlYm91bmNlZE9uSW5wdXRDaGFuZ2UsXG4gICAgICAgICAgICBjb21wb3NpdGlvbnN0YXJ0OiBfdm0uaGFuZGxlQ29tcG9zaXRpb24sXG4gICAgICAgICAgICBjb21wb3NpdGlvbnVwZGF0ZTogX3ZtLmhhbmRsZUNvbXBvc2l0aW9uLFxuICAgICAgICAgICAgY29tcG9zaXRpb25lbmQ6IF92bS5oYW5kbGVDb21wb3NpdGlvblxuICAgICAgICAgIH0sXG4gICAgICAgICAgbmF0aXZlT246IHtcbiAgICAgICAgICAgIGtleWRvd246IFtcbiAgICAgICAgICAgICAgZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgIShcImJ1dHRvblwiIGluICRldmVudCkgJiZcbiAgICAgICAgICAgICAgICAgIF92bS5faygkZXZlbnQua2V5Q29kZSwgXCJkb3duXCIsIDQwLCAkZXZlbnQua2V5LCBbXG4gICAgICAgICAgICAgICAgICAgIFwiRG93blwiLFxuICAgICAgICAgICAgICAgICAgICBcIkFycm93RG93blwiXG4gICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgICAgICAgICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgICAgICAgICBfdm0uaGFuZGxlTmF2aWdhdGUoXCJuZXh0XCIpXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICEoXCJidXR0b25cIiBpbiAkZXZlbnQpICYmXG4gICAgICAgICAgICAgICAgICBfdm0uX2soJGV2ZW50LmtleUNvZGUsIFwidXBcIiwgMzgsICRldmVudC5rZXksIFtcbiAgICAgICAgICAgICAgICAgICAgXCJVcFwiLFxuICAgICAgICAgICAgICAgICAgICBcIkFycm93VXBcIlxuICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKVxuICAgICAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgICAgICAgICAgX3ZtLmhhbmRsZU5hdmlnYXRlKFwicHJldlwiKVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAhKFwiYnV0dG9uXCIgaW4gJGV2ZW50KSAmJlxuICAgICAgICAgICAgICAgICAgX3ZtLl9rKCRldmVudC5rZXlDb2RlLCBcImVudGVyXCIsIDEzLCAkZXZlbnQua2V5LCBcIkVudGVyXCIpXG4gICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgICAgIHJldHVybiBfdm0uc2VsZWN0T3B0aW9uKCRldmVudClcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgIShcImJ1dHRvblwiIGluICRldmVudCkgJiZcbiAgICAgICAgICAgICAgICAgIF92bS5faygkZXZlbnQua2V5Q29kZSwgXCJlc2NcIiwgMjcsICRldmVudC5rZXksIFtcbiAgICAgICAgICAgICAgICAgICAgXCJFc2NcIixcbiAgICAgICAgICAgICAgICAgICAgXCJFc2NhcGVcIlxuICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKVxuICAgICAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgICAgICAgICAgX3ZtLnZpc2libGUgPSBmYWxzZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAhKFwiYnV0dG9uXCIgaW4gJGV2ZW50KSAmJlxuICAgICAgICAgICAgICAgICAgX3ZtLl9rKCRldmVudC5rZXlDb2RlLCBcInRhYlwiLCA5LCAkZXZlbnQua2V5LCBcIlRhYlwiKVxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgX3ZtLnZpc2libGUgPSBmYWxzZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgbW91c2VlbnRlcjogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgIF92bS5pbnB1dEhvdmVyaW5nID0gdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1vdXNlbGVhdmU6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICBfdm0uaW5wdXRIb3ZlcmluZyA9IGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBtb2RlbDoge1xuICAgICAgICAgICAgdmFsdWU6IF92bS5zZWxlY3RlZExhYmVsLFxuICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikge1xuICAgICAgICAgICAgICBfdm0uc2VsZWN0ZWRMYWJlbCA9ICQkdlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGV4cHJlc3Npb246IFwic2VsZWN0ZWRMYWJlbFwiXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBbXG4gICAgICAgICAgX3ZtLiRzbG90cy5wcmVmaXhcbiAgICAgICAgICAgID8gX2MoXCJ0ZW1wbGF0ZVwiLCB7IHNsb3Q6IFwicHJlZml4XCIgfSwgW192bS5fdChcInByZWZpeFwiKV0sIDIpXG4gICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgIF9jKFwidGVtcGxhdGVcIiwgeyBzbG90OiBcInN1ZmZpeFwiIH0sIFtcbiAgICAgICAgICAgIF9jKFwiaVwiLCB7XG4gICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBuYW1lOiBcInNob3dcIixcbiAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1zaG93XCIsXG4gICAgICAgICAgICAgICAgICB2YWx1ZTogIV92bS5zaG93Q2xvc2UsXG4gICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcIiFzaG93Q2xvc2VcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgY2xhc3M6IFtcbiAgICAgICAgICAgICAgICBcImVsLXNlbGVjdF9fY2FyZXRcIixcbiAgICAgICAgICAgICAgICBcImVsLWlucHV0X19pY29uXCIsXG4gICAgICAgICAgICAgICAgXCJlbC1pY29uLVwiICsgX3ZtLmljb25DbGFzc1xuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIF92bS5zaG93Q2xvc2VcbiAgICAgICAgICAgICAgPyBfYyhcImlcIiwge1xuICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6XG4gICAgICAgICAgICAgICAgICAgIFwiZWwtc2VsZWN0X19jYXJldCBlbC1pbnB1dF9faWNvbiBlbC1pY29uLWNpcmNsZS1jbG9zZVwiLFxuICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5oYW5kbGVDbGVhckNsaWNrIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgICAgXSlcbiAgICAgICAgXSxcbiAgICAgICAgMlxuICAgICAgKSxcbiAgICAgIF9jKFxuICAgICAgICBcInRyYW5zaXRpb25cIixcbiAgICAgICAge1xuICAgICAgICAgIGF0dHJzOiB7IG5hbWU6IFwiZWwtem9vbS1pbi10b3BcIiB9LFxuICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICBcImJlZm9yZS1lbnRlclwiOiBfdm0uaGFuZGxlTWVudUVudGVyLFxuICAgICAgICAgICAgXCJhZnRlci1sZWF2ZVwiOiBfdm0uZG9EZXN0cm95XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBbXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcImVsLXNlbGVjdC1tZW51XCIsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBuYW1lOiBcInNob3dcIixcbiAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1zaG93XCIsXG4gICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnZpc2libGUgJiYgX3ZtLmVtcHR5VGV4dCAhPT0gZmFsc2UsXG4gICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcInZpc2libGUgJiYgZW1wdHlUZXh0ICE9PSBmYWxzZVwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICByZWY6IFwicG9wcGVyXCIsXG4gICAgICAgICAgICAgIGF0dHJzOiB7IFwiYXBwZW5kLXRvLWJvZHlcIjogX3ZtLnBvcHBlckFwcGVuZFRvQm9keSB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICBcImVsLXNjcm9sbGJhclwiLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic2hvd1wiLFxuICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1zaG93XCIsXG4gICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5vcHRpb25zLmxlbmd0aCA+IDAgJiYgIV92bS5sb2FkaW5nLFxuICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwib3B0aW9ucy5sZW5ndGggPiAwICYmICFsb2FkaW5nXCJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgIHJlZjogXCJzY3JvbGxiYXJcIixcbiAgICAgICAgICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiaXMtZW1wdHlcIjpcbiAgICAgICAgICAgICAgICAgICAgICAhX3ZtLmFsbG93Q3JlYXRlICYmXG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLnF1ZXJ5ICYmXG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLmZpbHRlcmVkT3B0aW9uc0NvdW50ID09PSAwXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgdGFnOiBcInVsXCIsXG4gICAgICAgICAgICAgICAgICAgIFwid3JhcC1jbGFzc1wiOiBcImVsLXNlbGVjdC1kcm9wZG93bl9fd3JhcFwiLFxuICAgICAgICAgICAgICAgICAgICBcInZpZXctY2xhc3NcIjogXCJlbC1zZWxlY3QtZHJvcGRvd25fX2xpc3RcIlxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgX3ZtLnNob3dOZXdPcHRpb25cbiAgICAgICAgICAgICAgICAgICAgPyBfYyhcImVsLW9wdGlvblwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB2YWx1ZTogX3ZtLnF1ZXJ5LCBjcmVhdGVkOiBcIlwiIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgX3ZtLl90KFwiZGVmYXVsdFwiKVxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgMlxuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICBfdm0uZW1wdHlUZXh0ICYmXG4gICAgICAgICAgICAgICghX3ZtLmFsbG93Q3JlYXRlIHx8XG4gICAgICAgICAgICAgICAgX3ZtLmxvYWRpbmcgfHxcbiAgICAgICAgICAgICAgICAoX3ZtLmFsbG93Q3JlYXRlICYmIF92bS5vcHRpb25zLmxlbmd0aCA9PT0gMCkpXG4gICAgICAgICAgICAgICAgPyBbXG4gICAgICAgICAgICAgICAgICAgIF92bS4kc2xvdHMuZW1wdHlcbiAgICAgICAgICAgICAgICAgICAgICA/IF92bS5fdChcImVtcHR5XCIpXG4gICAgICAgICAgICAgICAgICAgICAgOiBfYyhcInBcIiwgeyBzdGF0aWNDbGFzczogXCJlbC1zZWxlY3QtZHJvcGRvd25fX2VtcHR5XCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS5lbXB0eVRleHQpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIDogX3ZtLl9lKClcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAyXG4gICAgICAgICAgKVxuICAgICAgICBdLFxuICAgICAgICAxXG4gICAgICApXG4gICAgXSxcbiAgICAxXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL3NlbGVjdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MGU0YWFkZTYmXG5cbi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgXCJlbGVtZW50LXVpL2xpYi9taXhpbnMvZW1pdHRlclwiXG52YXIgZW1pdHRlcl8gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xudmFyIGVtaXR0ZXJfZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oZW1pdHRlcl8pO1xuXG4vLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsIFwiZWxlbWVudC11aS9saWIvbWl4aW5zL2ZvY3VzXCJcbnZhciBmb2N1c18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIyKTtcbnZhciBmb2N1c19kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihmb2N1c18pO1xuXG4vLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsIFwiZWxlbWVudC11aS9saWIvbWl4aW5zL2xvY2FsZVwiXG52YXIgbG9jYWxlXyA9IF9fd2VicGFja19yZXF1aXJlX18oNik7XG52YXIgbG9jYWxlX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGxvY2FsZV8pO1xuXG4vLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsIFwiZWxlbWVudC11aS9saWIvaW5wdXRcIlxudmFyIGlucHV0XyA9IF9fd2VicGFja19yZXF1aXJlX18oMTApO1xudmFyIGlucHV0X2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGlucHV0Xyk7XG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvc2VsZWN0L3NyYy9zZWxlY3QtZHJvcGRvd24udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTA2ODI4NzQ4JlxudmFyIHNlbGVjdF9kcm9wZG93bnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA2ODI4NzQ4X3JlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcbiAgICBcImRpdlwiLFxuICAgIHtcbiAgICAgIHN0YXRpY0NsYXNzOiBcImVsLXNlbGVjdC1kcm9wZG93biBlbC1wb3BwZXJcIixcbiAgICAgIGNsYXNzOiBbeyBcImlzLW11bHRpcGxlXCI6IF92bS4kcGFyZW50Lm11bHRpcGxlIH0sIF92bS5wb3BwZXJDbGFzc10sXG4gICAgICBzdHlsZTogeyBtaW5XaWR0aDogX3ZtLm1pbldpZHRoIH1cbiAgICB9LFxuICAgIFtfdm0uX3QoXCJkZWZhdWx0XCIpXSxcbiAgICAyXG4gIClcbn1cbnZhciBzZWxlY3RfZHJvcGRvd252dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjgyODc0OF9zdGF0aWNSZW5kZXJGbnMgPSBbXVxuc2VsZWN0X2Ryb3Bkb3dudnVlX3R5cGVfdGVtcGxhdGVfaWRfMDY4Mjg3NDhfcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL3NlbGVjdC1kcm9wZG93bi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MDY4Mjg3NDgmXG5cbi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgXCJlbGVtZW50LXVpL2xpYi91dGlscy92dWUtcG9wcGVyXCJcbnZhciB2dWVfcG9wcGVyXyA9IF9fd2VicGFja19yZXF1aXJlX18oNSk7XG52YXIgdnVlX3BvcHBlcl9kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfcG9wcGVyXyk7XG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3NlbGVjdC9zcmMvc2VsZWN0LWRyb3Bkb3duLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIHNlbGVjdF9kcm9wZG93bnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyA9ICh7XG4gIG5hbWU6ICdFbFNlbGVjdERyb3Bkb3duJyxcblxuICBjb21wb25lbnROYW1lOiAnRWxTZWxlY3REcm9wZG93bicsXG5cbiAgbWl4aW5zOiBbdnVlX3BvcHBlcl9kZWZhdWx0LmFdLFxuXG4gIHByb3BzOiB7XG4gICAgcGxhY2VtZW50OiB7XG4gICAgICBkZWZhdWx0OiAnYm90dG9tLXN0YXJ0J1xuICAgIH0sXG5cbiAgICBib3VuZGFyaWVzUGFkZGluZzoge1xuICAgICAgZGVmYXVsdDogMFxuICAgIH0sXG5cbiAgICBwb3BwZXJPcHRpb25zOiB7XG4gICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBncHVBY2NlbGVyYXRpb246IGZhbHNlXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSxcblxuICAgIHZpc2libGVBcnJvdzoge1xuICAgICAgZGVmYXVsdDogdHJ1ZVxuICAgIH0sXG5cbiAgICBhcHBlbmRUb0JvZHk6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiB0cnVlXG4gICAgfVxuICB9LFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG1pbldpZHRoOiAnJ1xuICAgIH07XG4gIH0sXG5cblxuICBjb21wdXRlZDoge1xuICAgIHBvcHBlckNsYXNzOiBmdW5jdGlvbiBwb3BwZXJDbGFzcygpIHtcbiAgICAgIHJldHVybiB0aGlzLiRwYXJlbnQucG9wcGVyQ2xhc3M7XG4gICAgfVxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgJyRwYXJlbnQuaW5wdXRXaWR0aCc6IGZ1bmN0aW9uICRwYXJlbnRJbnB1dFdpZHRoKCkge1xuICAgICAgdGhpcy5taW5XaWR0aCA9IHRoaXMuJHBhcmVudC4kZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggKyAncHgnO1xuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICB0aGlzLnJlZmVyZW5jZUVsbSA9IHRoaXMuJHBhcmVudC4kcmVmcy5yZWZlcmVuY2UuJGVsO1xuICAgIHRoaXMuJHBhcmVudC5wb3BwZXJFbG0gPSB0aGlzLnBvcHBlckVsbSA9IHRoaXMuJGVsO1xuICAgIHRoaXMuJG9uKCd1cGRhdGVQb3BwZXInLCBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoX3RoaXMuJHBhcmVudC52aXNpYmxlKSBfdGhpcy51cGRhdGVQb3BwZXIoKTtcbiAgICB9KTtcbiAgICB0aGlzLiRvbignZGVzdHJveVBvcHBlcicsIHRoaXMuZGVzdHJveVBvcHBlcik7XG4gIH1cbn0pO1xuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL3NlbGVjdC1kcm9wZG93bi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXG4gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyB2YXIgc3JjX3NlbGVjdF9kcm9wZG93bnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyA9IChzZWxlY3RfZHJvcGRvd252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18pOyBcbi8vIEVYVEVSTkFMIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXG52YXIgY29tcG9uZW50Tm9ybWFsaXplciA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc2VsZWN0L3NyYy9zZWxlY3QtZHJvcGRvd24udnVlXG5cblxuXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuXG52YXIgY29tcG9uZW50ID0gT2JqZWN0KGNvbXBvbmVudE5vcm1hbGl6ZXJbXCJhXCIgLyogZGVmYXVsdCAqL10pKFxuICBzcmNfc2VsZWN0X2Ryb3Bkb3dudnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLFxuICBzZWxlY3RfZHJvcGRvd252dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjgyODc0OF9yZW5kZXIsXG4gIHNlbGVjdF9kcm9wZG93bnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA2ODI4NzQ4X3N0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChmYWxzZSkgeyB2YXIgYXBpOyB9XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInBhY2thZ2VzL3NlbGVjdC9zcmMvc2VsZWN0LWRyb3Bkb3duLnZ1ZVwiXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBzZWxlY3RfZHJvcGRvd24gPSAoY29tcG9uZW50LmV4cG9ydHMpO1xuLy8gRVhURVJOQUwgTU9EVUxFOiAuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLnZ1ZSArIDQgbW9kdWxlc1xudmFyIHNyY19vcHRpb24gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMzKTtcblxuLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCBcImVsZW1lbnQtdWkvbGliL3RhZ1wiXG52YXIgdGFnXyA9IF9fd2VicGFja19yZXF1aXJlX18oMzgpO1xudmFyIHRhZ19kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih0YWdfKTtcblxuLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCBcImVsZW1lbnQtdWkvbGliL3Njcm9sbGJhclwiXG52YXIgc2Nyb2xsYmFyXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTUpO1xudmFyIHNjcm9sbGJhcl9kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihzY3JvbGxiYXJfKTtcblxuLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCBcInRocm90dGxlLWRlYm91bmNlL2RlYm91bmNlXCJcbnZhciBkZWJvdW5jZV8gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE5KTtcbnZhciBkZWJvdW5jZV9kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihkZWJvdW5jZV8pO1xuXG4vLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsIFwiZWxlbWVudC11aS9saWIvdXRpbHMvY2xpY2tvdXRzaWRlXCJcbnZhciBjbGlja291dHNpZGVfID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMik7XG52YXIgY2xpY2tvdXRzaWRlX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGNsaWNrb3V0c2lkZV8pO1xuXG4vLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsIFwiZWxlbWVudC11aS9saWIvdXRpbHMvcmVzaXplLWV2ZW50XCJcbnZhciByZXNpemVfZXZlbnRfID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNik7XG5cbi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgXCJlbGVtZW50LXVpL2xpYi91dGlscy9zY3JvbGwtaW50by12aWV3XCJcbnZhciBzY3JvbGxfaW50b192aWV3XyA9IF9fd2VicGFja19yZXF1aXJlX18oMzEpO1xudmFyIHNjcm9sbF9pbnRvX3ZpZXdfZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oc2Nyb2xsX2ludG9fdmlld18pO1xuXG4vLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsIFwiZWxlbWVudC11aS9saWIvdXRpbHMvdXRpbFwiXG52YXIgdXRpbF8gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NlbGVjdC9zcmMvbmF2aWdhdGlvbi1taXhpbi5qc1xuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyB2YXIgbmF2aWdhdGlvbl9taXhpbiA9ICh7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGhvdmVyT3B0aW9uOiAtMVxuICAgIH07XG4gIH0sXG5cblxuICBjb21wdXRlZDoge1xuICAgIG9wdGlvbnNBbGxEaXNhYmxlZDogZnVuY3Rpb24gb3B0aW9uc0FsbERpc2FibGVkKCkge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5maWx0ZXIoZnVuY3Rpb24gKG9wdGlvbikge1xuICAgICAgICByZXR1cm4gb3B0aW9uLnZpc2libGU7XG4gICAgICB9KS5ldmVyeShmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgICAgIHJldHVybiBvcHRpb24uZGlzYWJsZWQ7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBob3ZlckluZGV4OiBmdW5jdGlvbiBob3ZlckluZGV4KHZhbCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInICYmIHZhbCA+IC0xKSB7XG4gICAgICAgIHRoaXMuaG92ZXJPcHRpb24gPSB0aGlzLm9wdGlvbnNbdmFsXSB8fCB7fTtcbiAgICAgIH1cbiAgICAgIHRoaXMub3B0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChvcHRpb24pIHtcbiAgICAgICAgb3B0aW9uLmhvdmVyID0gX3RoaXMuaG92ZXJPcHRpb24gPT09IG9wdGlvbjtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgbmF2aWdhdGVPcHRpb25zOiBmdW5jdGlvbiBuYXZpZ2F0ZU9wdGlvbnMoZGlyZWN0aW9uKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgaWYgKCF0aGlzLnZpc2libGUpIHtcbiAgICAgICAgdGhpcy52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5sZW5ndGggPT09IDAgfHwgdGhpcy5maWx0ZXJlZE9wdGlvbnNDb3VudCA9PT0gMCkgcmV0dXJuO1xuICAgICAgaWYgKCF0aGlzLm9wdGlvbnNBbGxEaXNhYmxlZCkge1xuICAgICAgICBpZiAoZGlyZWN0aW9uID09PSAnbmV4dCcpIHtcbiAgICAgICAgICB0aGlzLmhvdmVySW5kZXgrKztcbiAgICAgICAgICBpZiAodGhpcy5ob3ZlckluZGV4ID09PSB0aGlzLm9wdGlvbnMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLmhvdmVySW5kZXggPSAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT09ICdwcmV2Jykge1xuICAgICAgICAgIHRoaXMuaG92ZXJJbmRleC0tO1xuICAgICAgICAgIGlmICh0aGlzLmhvdmVySW5kZXggPCAwKSB7XG4gICAgICAgICAgICB0aGlzLmhvdmVySW5kZXggPSB0aGlzLm9wdGlvbnMubGVuZ3RoIC0gMTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG9wdGlvbiA9IHRoaXMub3B0aW9uc1t0aGlzLmhvdmVySW5kZXhdO1xuICAgICAgICBpZiAob3B0aW9uLmRpc2FibGVkID09PSB0cnVlIHx8IG9wdGlvbi5ncm91cERpc2FibGVkID09PSB0cnVlIHx8ICFvcHRpb24udmlzaWJsZSkge1xuICAgICAgICAgIHRoaXMubmF2aWdhdGVPcHRpb25zKGRpcmVjdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczIuc2Nyb2xsVG9PcHRpb24oX3RoaXMyLmhvdmVyT3B0aW9uKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59KTtcbi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgXCJlbGVtZW50LXVpL2xpYi91dGlscy9zaGFyZWRcIlxudmFyIHNoYXJlZF8gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIxKTtcblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvc2VsZWN0L3NyYy9zZWxlY3QudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlxuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyB2YXIgc2VsZWN0dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfID0gKHtcbiAgbWl4aW5zOiBbZW1pdHRlcl9kZWZhdWx0LmEsIGxvY2FsZV9kZWZhdWx0LmEsIGZvY3VzX2RlZmF1bHQoKSgncmVmZXJlbmNlJyksIG5hdmlnYXRpb25fbWl4aW5dLFxuXG4gIG5hbWU6ICdFbFNlbGVjdCcsXG5cbiAgY29tcG9uZW50TmFtZTogJ0VsU2VsZWN0JyxcblxuICBpbmplY3Q6IHtcbiAgICBlbEZvcm06IHtcbiAgICAgIGRlZmF1bHQ6ICcnXG4gICAgfSxcblxuICAgIGVsRm9ybUl0ZW06IHtcbiAgICAgIGRlZmF1bHQ6ICcnXG4gICAgfVxuICB9LFxuXG4gIHByb3ZpZGU6IGZ1bmN0aW9uIHByb3ZpZGUoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICdzZWxlY3QnOiB0aGlzXG4gICAgfTtcbiAgfSxcblxuXG4gIGNvbXB1dGVkOiB7XG4gICAgX2VsRm9ybUl0ZW1TaXplOiBmdW5jdGlvbiBfZWxGb3JtSXRlbVNpemUoKSB7XG4gICAgICByZXR1cm4gKHRoaXMuZWxGb3JtSXRlbSB8fCB7fSkuZWxGb3JtSXRlbVNpemU7XG4gICAgfSxcbiAgICByZWFkb25seTogZnVuY3Rpb24gcmVhZG9ubHkoKSB7XG4gICAgICByZXR1cm4gIXRoaXMuZmlsdGVyYWJsZSB8fCB0aGlzLm11bHRpcGxlIHx8ICFPYmplY3QodXRpbF9bXCJpc0lFXCJdKSgpICYmICFPYmplY3QodXRpbF9bXCJpc0VkZ2VcIl0pKCkgJiYgIXRoaXMudmlzaWJsZTtcbiAgICB9LFxuICAgIHNob3dDbG9zZTogZnVuY3Rpb24gc2hvd0Nsb3NlKCkge1xuICAgICAgdmFyIGhhc1ZhbHVlID0gdGhpcy5tdWx0aXBsZSA/IEFycmF5LmlzQXJyYXkodGhpcy52YWx1ZSkgJiYgdGhpcy52YWx1ZS5sZW5ndGggPiAwIDogdGhpcy52YWx1ZSAhPT0gdW5kZWZpbmVkICYmIHRoaXMudmFsdWUgIT09IG51bGwgJiYgdGhpcy52YWx1ZSAhPT0gJyc7XG4gICAgICB2YXIgY3JpdGVyaWEgPSB0aGlzLmNsZWFyYWJsZSAmJiAhdGhpcy5zZWxlY3REaXNhYmxlZCAmJiB0aGlzLmlucHV0SG92ZXJpbmcgJiYgaGFzVmFsdWU7XG4gICAgICByZXR1cm4gY3JpdGVyaWE7XG4gICAgfSxcbiAgICBpY29uQ2xhc3M6IGZ1bmN0aW9uIGljb25DbGFzcygpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlbW90ZSAmJiB0aGlzLmZpbHRlcmFibGUgPyAnJyA6IHRoaXMudmlzaWJsZSA/ICdhcnJvdy11cCBpcy1yZXZlcnNlJyA6ICdhcnJvdy11cCc7XG4gICAgfSxcbiAgICBkZWJvdW5jZTogZnVuY3Rpb24gZGVib3VuY2UoKSB7XG4gICAgICByZXR1cm4gdGhpcy5yZW1vdGUgPyAzMDAgOiAwO1xuICAgIH0sXG4gICAgZW1wdHlUZXh0OiBmdW5jdGlvbiBlbXB0eVRleHQoKSB7XG4gICAgICBpZiAodGhpcy5sb2FkaW5nKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvYWRpbmdUZXh0IHx8IHRoaXMudCgnZWwuc2VsZWN0LmxvYWRpbmcnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICh0aGlzLnJlbW90ZSAmJiB0aGlzLnF1ZXJ5ID09PSAnJyAmJiB0aGlzLm9wdGlvbnMubGVuZ3RoID09PSAwKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIGlmICh0aGlzLmZpbHRlcmFibGUgJiYgdGhpcy5xdWVyeSAmJiB0aGlzLm9wdGlvbnMubGVuZ3RoID4gMCAmJiB0aGlzLmZpbHRlcmVkT3B0aW9uc0NvdW50ID09PSAwKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMubm9NYXRjaFRleHQgfHwgdGhpcy50KCdlbC5zZWxlY3Qubm9NYXRjaCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMubm9EYXRhVGV4dCB8fCB0aGlzLnQoJ2VsLnNlbGVjdC5ub0RhdGEnKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICBzaG93TmV3T3B0aW9uOiBmdW5jdGlvbiBzaG93TmV3T3B0aW9uKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIGhhc0V4aXN0aW5nT3B0aW9uID0gdGhpcy5vcHRpb25zLmZpbHRlcihmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgICAgIHJldHVybiAhb3B0aW9uLmNyZWF0ZWQ7XG4gICAgICB9KS5zb21lKGZ1bmN0aW9uIChvcHRpb24pIHtcbiAgICAgICAgcmV0dXJuIG9wdGlvbi5jdXJyZW50TGFiZWwgPT09IF90aGlzLnF1ZXJ5O1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gdGhpcy5maWx0ZXJhYmxlICYmIHRoaXMuYWxsb3dDcmVhdGUgJiYgdGhpcy5xdWVyeSAhPT0gJycgJiYgIWhhc0V4aXN0aW5nT3B0aW9uO1xuICAgIH0sXG4gICAgc2VsZWN0U2l6ZTogZnVuY3Rpb24gc2VsZWN0U2l6ZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnNpemUgfHwgdGhpcy5fZWxGb3JtSXRlbVNpemUgfHwgKHRoaXMuJEVMRU1FTlQgfHwge30pLnNpemU7XG4gICAgfSxcbiAgICBzZWxlY3REaXNhYmxlZDogZnVuY3Rpb24gc2VsZWN0RGlzYWJsZWQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5kaXNhYmxlZCB8fCAodGhpcy5lbEZvcm0gfHwge30pLmRpc2FibGVkO1xuICAgIH0sXG4gICAgY29sbGFwc2VUYWdTaXplOiBmdW5jdGlvbiBjb2xsYXBzZVRhZ1NpemUoKSB7XG4gICAgICByZXR1cm4gWydzbWFsbCcsICdtaW5pJ10uaW5kZXhPZih0aGlzLnNlbGVjdFNpemUpID4gLTEgPyAnbWluaScgOiAnc21hbGwnO1xuICAgIH0sXG4gICAgcHJvcFBsYWNlaG9sZGVyOiBmdW5jdGlvbiBwcm9wUGxhY2Vob2xkZXIoKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIHRoaXMucGxhY2Vob2xkZXIgIT09ICd1bmRlZmluZWQnID8gdGhpcy5wbGFjZWhvbGRlciA6IHRoaXMudCgnZWwuc2VsZWN0LnBsYWNlaG9sZGVyJyk7XG4gICAgfVxuICB9LFxuXG4gIGNvbXBvbmVudHM6IHtcbiAgICBFbElucHV0OiBpbnB1dF9kZWZhdWx0LmEsXG4gICAgRWxTZWxlY3RNZW51OiBzZWxlY3RfZHJvcGRvd24sXG4gICAgRWxPcHRpb246IHNyY19vcHRpb25bXCJhXCIgLyogZGVmYXVsdCAqL10sXG4gICAgRWxUYWc6IHRhZ19kZWZhdWx0LmEsXG4gICAgRWxTY3JvbGxiYXI6IHNjcm9sbGJhcl9kZWZhdWx0LmFcbiAgfSxcblxuICBkaXJlY3RpdmVzOiB7IENsaWNrb3V0c2lkZTogY2xpY2tvdXRzaWRlX2RlZmF1bHQuYSB9LFxuXG4gIHByb3BzOiB7XG4gICAgbmFtZTogU3RyaW5nLFxuICAgIGlkOiBTdHJpbmcsXG4gICAgdmFsdWU6IHtcbiAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICBhdXRvY29tcGxldGU6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIGRlZmF1bHQ6ICdvZmYnXG4gICAgfSxcbiAgICAvKiogQERlcHJlY2F0ZWQgaW4gbmV4dCBtYWpvciB2ZXJzaW9uICovXG4gICAgYXV0b0NvbXBsZXRlOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcih2YWwpIHtcbiAgICAgICAgIGZhbHNlICYmIGZhbHNlO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGF1dG9tYXRpY0Ryb3Bkb3duOiBCb29sZWFuLFxuICAgIHNpemU6IFN0cmluZyxcbiAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICBjbGVhcmFibGU6IEJvb2xlYW4sXG4gICAgZmlsdGVyYWJsZTogQm9vbGVhbixcbiAgICBhbGxvd0NyZWF0ZTogQm9vbGVhbixcbiAgICBsb2FkaW5nOiBCb29sZWFuLFxuICAgIHBvcHBlckNsYXNzOiBTdHJpbmcsXG4gICAgcmVtb3RlOiBCb29sZWFuLFxuICAgIGxvYWRpbmdUZXh0OiBTdHJpbmcsXG4gICAgbm9NYXRjaFRleHQ6IFN0cmluZyxcbiAgICBub0RhdGFUZXh0OiBTdHJpbmcsXG4gICAgcmVtb3RlTWV0aG9kOiBGdW5jdGlvbixcbiAgICBmaWx0ZXJNZXRob2Q6IEZ1bmN0aW9uLFxuICAgIG11bHRpcGxlOiBCb29sZWFuLFxuICAgIG11bHRpcGxlTGltaXQ6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDBcbiAgICB9LFxuICAgIHBsYWNlaG9sZGVyOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICByZXF1aXJlZDogZmFsc2VcbiAgICB9LFxuICAgIGRlZmF1bHRGaXJzdE9wdGlvbjogQm9vbGVhbixcbiAgICByZXNlcnZlS2V5d29yZDogQm9vbGVhbixcbiAgICB2YWx1ZUtleToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ3ZhbHVlJ1xuICAgIH0sXG4gICAgY29sbGFwc2VUYWdzOiBCb29sZWFuLFxuICAgIHBvcHBlckFwcGVuZFRvQm9keToge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IHRydWVcbiAgICB9XG4gIH0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgb3B0aW9uczogW10sXG4gICAgICBjYWNoZWRPcHRpb25zOiBbXSxcbiAgICAgIGNyZWF0ZWRMYWJlbDogbnVsbCxcbiAgICAgIGNyZWF0ZWRTZWxlY3RlZDogZmFsc2UsXG4gICAgICBzZWxlY3RlZDogdGhpcy5tdWx0aXBsZSA/IFtdIDoge30sXG4gICAgICBpbnB1dExlbmd0aDogMjAsXG4gICAgICBpbnB1dFdpZHRoOiAwLFxuICAgICAgaW5pdGlhbElucHV0SGVpZ2h0OiAwLFxuICAgICAgY2FjaGVkUGxhY2VIb2xkZXI6ICcnLFxuICAgICAgb3B0aW9uc0NvdW50OiAwLFxuICAgICAgZmlsdGVyZWRPcHRpb25zQ291bnQ6IDAsXG4gICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICAgIHNvZnRGb2N1czogZmFsc2UsXG4gICAgICBzZWxlY3RlZExhYmVsOiAnJyxcbiAgICAgIGhvdmVySW5kZXg6IC0xLFxuICAgICAgcXVlcnk6ICcnLFxuICAgICAgcHJldmlvdXNRdWVyeTogbnVsbCxcbiAgICAgIGlucHV0SG92ZXJpbmc6IGZhbHNlLFxuICAgICAgY3VycmVudFBsYWNlaG9sZGVyOiAnJyxcbiAgICAgIG1lbnVWaXNpYmxlT25Gb2N1czogZmFsc2UsXG4gICAgICBpc09uQ29tcG9zaXRpb246IGZhbHNlLFxuICAgICAgaXNTaWxlbnRCbHVyOiBmYWxzZVxuICAgIH07XG4gIH0sXG5cblxuICB3YXRjaDoge1xuICAgIHNlbGVjdERpc2FibGVkOiBmdW5jdGlvbiBzZWxlY3REaXNhYmxlZCgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzMi5yZXNldElucHV0SGVpZ2h0KCk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHByb3BQbGFjZWhvbGRlcjogZnVuY3Rpb24gcHJvcFBsYWNlaG9sZGVyKHZhbCkge1xuICAgICAgdGhpcy5jYWNoZWRQbGFjZUhvbGRlciA9IHRoaXMuY3VycmVudFBsYWNlaG9sZGVyID0gdmFsO1xuICAgIH0sXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKHZhbCwgb2xkVmFsKSB7XG4gICAgICBpZiAodGhpcy5tdWx0aXBsZSkge1xuICAgICAgICB0aGlzLnJlc2V0SW5wdXRIZWlnaHQoKTtcbiAgICAgICAgaWYgKHZhbCAmJiB2YWwubGVuZ3RoID4gMCB8fCB0aGlzLiRyZWZzLmlucHV0ICYmIHRoaXMucXVlcnkgIT09ICcnKSB7XG4gICAgICAgICAgdGhpcy5jdXJyZW50UGxhY2Vob2xkZXIgPSAnJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmN1cnJlbnRQbGFjZWhvbGRlciA9IHRoaXMuY2FjaGVkUGxhY2VIb2xkZXI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZmlsdGVyYWJsZSAmJiAhdGhpcy5yZXNlcnZlS2V5d29yZCkge1xuICAgICAgICAgIHRoaXMucXVlcnkgPSAnJztcbiAgICAgICAgICB0aGlzLmhhbmRsZVF1ZXJ5Q2hhbmdlKHRoaXMucXVlcnkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLnNldFNlbGVjdGVkKCk7XG4gICAgICBpZiAodGhpcy5maWx0ZXJhYmxlICYmICF0aGlzLm11bHRpcGxlKSB7XG4gICAgICAgIHRoaXMuaW5wdXRMZW5ndGggPSAyMDtcbiAgICAgIH1cbiAgICAgIGlmICghT2JqZWN0KHV0aWxfW1widmFsdWVFcXVhbHNcIl0pKHZhbCwgb2xkVmFsKSkge1xuICAgICAgICB0aGlzLmRpc3BhdGNoKCdFbEZvcm1JdGVtJywgJ2VsLmZvcm0uY2hhbmdlJywgdmFsKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHZpc2libGU6IGZ1bmN0aW9uIHZpc2libGUodmFsKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgaWYgKCF2YWwpIHtcbiAgICAgICAgdGhpcy5icm9hZGNhc3QoJ0VsU2VsZWN0RHJvcGRvd24nLCAnZGVzdHJveVBvcHBlcicpO1xuICAgICAgICBpZiAodGhpcy4kcmVmcy5pbnB1dCkge1xuICAgICAgICAgIHRoaXMuJHJlZnMuaW5wdXQuYmx1cigpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucXVlcnkgPSAnJztcbiAgICAgICAgdGhpcy5wcmV2aW91c1F1ZXJ5ID0gbnVsbDtcbiAgICAgICAgdGhpcy5zZWxlY3RlZExhYmVsID0gJyc7XG4gICAgICAgIHRoaXMuaW5wdXRMZW5ndGggPSAyMDtcbiAgICAgICAgdGhpcy5tZW51VmlzaWJsZU9uRm9jdXMgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5yZXNldEhvdmVySW5kZXgoKTtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGlmIChfdGhpczMuJHJlZnMuaW5wdXQgJiYgX3RoaXMzLiRyZWZzLmlucHV0LnZhbHVlID09PSAnJyAmJiBfdGhpczMuc2VsZWN0ZWQubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBfdGhpczMuY3VycmVudFBsYWNlaG9sZGVyID0gX3RoaXMzLmNhY2hlZFBsYWNlSG9sZGVyO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghdGhpcy5tdWx0aXBsZSkge1xuICAgICAgICAgIGlmICh0aGlzLnNlbGVjdGVkKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5maWx0ZXJhYmxlICYmIHRoaXMuYWxsb3dDcmVhdGUgJiYgdGhpcy5jcmVhdGVkU2VsZWN0ZWQgJiYgdGhpcy5jcmVhdGVkTGFiZWwpIHtcbiAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZExhYmVsID0gdGhpcy5jcmVhdGVkTGFiZWw7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkTGFiZWwgPSB0aGlzLnNlbGVjdGVkLmN1cnJlbnRMYWJlbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmZpbHRlcmFibGUpIHRoaXMucXVlcnkgPSB0aGlzLnNlbGVjdGVkTGFiZWw7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHRoaXMuZmlsdGVyYWJsZSkge1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50UGxhY2Vob2xkZXIgPSB0aGlzLmNhY2hlZFBsYWNlSG9sZGVyO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5icm9hZGNhc3QoJ0VsU2VsZWN0RHJvcGRvd24nLCAndXBkYXRlUG9wcGVyJyk7XG4gICAgICAgIGlmICh0aGlzLmZpbHRlcmFibGUpIHtcbiAgICAgICAgICB0aGlzLnF1ZXJ5ID0gdGhpcy5yZW1vdGUgPyAnJyA6IHRoaXMuc2VsZWN0ZWRMYWJlbDtcbiAgICAgICAgICB0aGlzLmhhbmRsZVF1ZXJ5Q2hhbmdlKHRoaXMucXVlcnkpO1xuICAgICAgICAgIGlmICh0aGlzLm11bHRpcGxlKSB7XG4gICAgICAgICAgICB0aGlzLiRyZWZzLmlucHV0LmZvY3VzKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5yZW1vdGUpIHtcbiAgICAgICAgICAgICAgdGhpcy5icm9hZGNhc3QoJ0VsT3B0aW9uJywgJ3F1ZXJ5Q2hhbmdlJywgJycpO1xuICAgICAgICAgICAgICB0aGlzLmJyb2FkY2FzdCgnRWxPcHRpb25Hcm91cCcsICdxdWVyeUNoYW5nZScpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5zZWxlY3RlZExhYmVsKSB7XG4gICAgICAgICAgICAgIHRoaXMuY3VycmVudFBsYWNlaG9sZGVyID0gdGhpcy5zZWxlY3RlZExhYmVsO1xuICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkTGFiZWwgPSAnJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMuJGVtaXQoJ3Zpc2libGUtY2hhbmdlJywgdmFsKTtcbiAgICB9LFxuICAgIG9wdGlvbnM6IGZ1bmN0aW9uIG9wdGlvbnMoKSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgaWYgKHRoaXMuJGlzU2VydmVyKSByZXR1cm47XG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzNC5icm9hZGNhc3QoJ0VsU2VsZWN0RHJvcGRvd24nLCAndXBkYXRlUG9wcGVyJyk7XG4gICAgICB9KTtcbiAgICAgIGlmICh0aGlzLm11bHRpcGxlKSB7XG4gICAgICAgIHRoaXMucmVzZXRJbnB1dEhlaWdodCgpO1xuICAgICAgfVxuICAgICAgdmFyIGlucHV0cyA9IHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0Jyk7XG4gICAgICBpZiAoW10uaW5kZXhPZi5jYWxsKGlucHV0cywgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkgPT09IC0xKSB7XG4gICAgICAgIHRoaXMuc2V0U2VsZWN0ZWQoKTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLmRlZmF1bHRGaXJzdE9wdGlvbiAmJiAodGhpcy5maWx0ZXJhYmxlIHx8IHRoaXMucmVtb3RlKSAmJiB0aGlzLmZpbHRlcmVkT3B0aW9uc0NvdW50KSB7XG4gICAgICAgIHRoaXMuY2hlY2tEZWZhdWx0Rmlyc3RPcHRpb24oKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGhhbmRsZU5hdmlnYXRlOiBmdW5jdGlvbiBoYW5kbGVOYXZpZ2F0ZShkaXJlY3Rpb24pIHtcbiAgICAgIGlmICh0aGlzLmlzT25Db21wb3NpdGlvbikgcmV0dXJuO1xuXG4gICAgICB0aGlzLm5hdmlnYXRlT3B0aW9ucyhkaXJlY3Rpb24pO1xuICAgIH0sXG4gICAgaGFuZGxlQ29tcG9zaXRpb246IGZ1bmN0aW9uIGhhbmRsZUNvbXBvc2l0aW9uKGV2ZW50KSB7XG4gICAgICB2YXIgX3RoaXM1ID0gdGhpcztcblxuICAgICAgdmFyIHRleHQgPSBldmVudC50YXJnZXQudmFsdWU7XG4gICAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ2NvbXBvc2l0aW9uZW5kJykge1xuICAgICAgICB0aGlzLmlzT25Db21wb3NpdGlvbiA9IGZhbHNlO1xuICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoXykge1xuICAgICAgICAgIHJldHVybiBfdGhpczUuaGFuZGxlUXVlcnlDaGFuZ2UodGV4dCk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIGxhc3RDaGFyYWN0ZXIgPSB0ZXh0W3RleHQubGVuZ3RoIC0gMV0gfHwgJyc7XG4gICAgICAgIHRoaXMuaXNPbkNvbXBvc2l0aW9uID0gIU9iamVjdChzaGFyZWRfW1wiaXNLb3JlYW5cIl0pKGxhc3RDaGFyYWN0ZXIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgaGFuZGxlUXVlcnlDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZVF1ZXJ5Q2hhbmdlKHZhbCkge1xuICAgICAgdmFyIF90aGlzNiA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLnByZXZpb3VzUXVlcnkgPT09IHZhbCB8fCB0aGlzLmlzT25Db21wb3NpdGlvbikgcmV0dXJuO1xuICAgICAgaWYgKHRoaXMucHJldmlvdXNRdWVyeSA9PT0gbnVsbCAmJiAodHlwZW9mIHRoaXMuZmlsdGVyTWV0aG9kID09PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiB0aGlzLnJlbW90ZU1ldGhvZCA9PT0gJ2Z1bmN0aW9uJykpIHtcbiAgICAgICAgdGhpcy5wcmV2aW91c1F1ZXJ5ID0gdmFsO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLnByZXZpb3VzUXVlcnkgPSB2YWw7XG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChfdGhpczYudmlzaWJsZSkgX3RoaXM2LmJyb2FkY2FzdCgnRWxTZWxlY3REcm9wZG93bicsICd1cGRhdGVQb3BwZXInKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5ob3ZlckluZGV4ID0gLTE7XG4gICAgICBpZiAodGhpcy5tdWx0aXBsZSAmJiB0aGlzLmZpbHRlcmFibGUpIHtcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHZhciBsZW5ndGggPSBfdGhpczYuJHJlZnMuaW5wdXQudmFsdWUubGVuZ3RoICogMTUgKyAyMDtcbiAgICAgICAgICBfdGhpczYuaW5wdXRMZW5ndGggPSBfdGhpczYuY29sbGFwc2VUYWdzID8gTWF0aC5taW4oNTAsIGxlbmd0aCkgOiBsZW5ndGg7XG4gICAgICAgICAgX3RoaXM2Lm1hbmFnZVBsYWNlaG9sZGVyKCk7XG4gICAgICAgICAgX3RoaXM2LnJlc2V0SW5wdXRIZWlnaHQoKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5yZW1vdGUgJiYgdHlwZW9mIHRoaXMucmVtb3RlTWV0aG9kID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRoaXMuaG92ZXJJbmRleCA9IC0xO1xuICAgICAgICB0aGlzLnJlbW90ZU1ldGhvZCh2YWwpO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdGhpcy5maWx0ZXJNZXRob2QgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhpcy5maWx0ZXJNZXRob2QodmFsKTtcbiAgICAgICAgdGhpcy5icm9hZGNhc3QoJ0VsT3B0aW9uR3JvdXAnLCAncXVlcnlDaGFuZ2UnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZmlsdGVyZWRPcHRpb25zQ291bnQgPSB0aGlzLm9wdGlvbnNDb3VudDtcbiAgICAgICAgdGhpcy5icm9hZGNhc3QoJ0VsT3B0aW9uJywgJ3F1ZXJ5Q2hhbmdlJywgdmFsKTtcbiAgICAgICAgdGhpcy5icm9hZGNhc3QoJ0VsT3B0aW9uR3JvdXAnLCAncXVlcnlDaGFuZ2UnKTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLmRlZmF1bHRGaXJzdE9wdGlvbiAmJiAodGhpcy5maWx0ZXJhYmxlIHx8IHRoaXMucmVtb3RlKSAmJiB0aGlzLmZpbHRlcmVkT3B0aW9uc0NvdW50KSB7XG4gICAgICAgIHRoaXMuY2hlY2tEZWZhdWx0Rmlyc3RPcHRpb24oKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHNjcm9sbFRvT3B0aW9uOiBmdW5jdGlvbiBzY3JvbGxUb09wdGlvbihvcHRpb24pIHtcbiAgICAgIHZhciB0YXJnZXQgPSBBcnJheS5pc0FycmF5KG9wdGlvbikgJiYgb3B0aW9uWzBdID8gb3B0aW9uWzBdLiRlbCA6IG9wdGlvbi4kZWw7XG4gICAgICBpZiAodGhpcy4kcmVmcy5wb3BwZXIgJiYgdGFyZ2V0KSB7XG4gICAgICAgIHZhciBtZW51ID0gdGhpcy4kcmVmcy5wb3BwZXIuJGVsLnF1ZXJ5U2VsZWN0b3IoJy5lbC1zZWxlY3QtZHJvcGRvd25fX3dyYXAnKTtcbiAgICAgICAgc2Nyb2xsX2ludG9fdmlld19kZWZhdWx0KCkobWVudSwgdGFyZ2V0KTtcbiAgICAgIH1cbiAgICAgIHRoaXMuJHJlZnMuc2Nyb2xsYmFyICYmIHRoaXMuJHJlZnMuc2Nyb2xsYmFyLmhhbmRsZVNjcm9sbCgpO1xuICAgIH0sXG4gICAgaGFuZGxlTWVudUVudGVyOiBmdW5jdGlvbiBoYW5kbGVNZW51RW50ZXIoKSB7XG4gICAgICB2YXIgX3RoaXM3ID0gdGhpcztcblxuICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3RoaXM3LnNjcm9sbFRvT3B0aW9uKF90aGlzNy5zZWxlY3RlZCk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGVtaXRDaGFuZ2U6IGZ1bmN0aW9uIGVtaXRDaGFuZ2UodmFsKSB7XG4gICAgICBpZiAoIU9iamVjdCh1dGlsX1tcInZhbHVlRXF1YWxzXCJdKSh0aGlzLnZhbHVlLCB2YWwpKSB7XG4gICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHZhbCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBnZXRPcHRpb246IGZ1bmN0aW9uIGdldE9wdGlvbih2YWx1ZSkge1xuICAgICAgdmFyIG9wdGlvbiA9IHZvaWQgMDtcbiAgICAgIHZhciBpc09iamVjdCA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkudG9Mb3dlckNhc2UoKSA9PT0gJ1tvYmplY3Qgb2JqZWN0XSc7XG4gICAgICB2YXIgaXNOdWxsID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKS50b0xvd2VyQ2FzZSgpID09PSAnW29iamVjdCBudWxsXSc7XG4gICAgICB2YXIgaXNVbmRlZmluZWQgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLnRvTG93ZXJDYXNlKCkgPT09ICdbb2JqZWN0IHVuZGVmaW5lZF0nO1xuXG4gICAgICBmb3IgKHZhciBpID0gdGhpcy5jYWNoZWRPcHRpb25zLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgIHZhciBjYWNoZWRPcHRpb24gPSB0aGlzLmNhY2hlZE9wdGlvbnNbaV07XG4gICAgICAgIHZhciBpc0VxdWFsID0gaXNPYmplY3QgPyBPYmplY3QodXRpbF9bXCJnZXRWYWx1ZUJ5UGF0aFwiXSkoY2FjaGVkT3B0aW9uLnZhbHVlLCB0aGlzLnZhbHVlS2V5KSA9PT0gT2JqZWN0KHV0aWxfW1wiZ2V0VmFsdWVCeVBhdGhcIl0pKHZhbHVlLCB0aGlzLnZhbHVlS2V5KSA6IGNhY2hlZE9wdGlvbi52YWx1ZSA9PT0gdmFsdWU7XG4gICAgICAgIGlmIChpc0VxdWFsKSB7XG4gICAgICAgICAgb3B0aW9uID0gY2FjaGVkT3B0aW9uO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAob3B0aW9uKSByZXR1cm4gb3B0aW9uO1xuICAgICAgdmFyIGxhYmVsID0gIWlzT2JqZWN0ICYmICFpc051bGwgJiYgIWlzVW5kZWZpbmVkID8gU3RyaW5nKHZhbHVlKSA6ICcnO1xuICAgICAgdmFyIG5ld09wdGlvbiA9IHtcbiAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICBjdXJyZW50TGFiZWw6IGxhYmVsXG4gICAgICB9O1xuICAgICAgaWYgKHRoaXMubXVsdGlwbGUpIHtcbiAgICAgICAgbmV3T3B0aW9uLmhpdFN0YXRlID0gZmFsc2U7XG4gICAgICB9XG4gICAgICByZXR1cm4gbmV3T3B0aW9uO1xuICAgIH0sXG4gICAgc2V0U2VsZWN0ZWQ6IGZ1bmN0aW9uIHNldFNlbGVjdGVkKCkge1xuICAgICAgdmFyIF90aGlzOCA9IHRoaXM7XG5cbiAgICAgIGlmICghdGhpcy5tdWx0aXBsZSkge1xuICAgICAgICB2YXIgb3B0aW9uID0gdGhpcy5nZXRPcHRpb24odGhpcy52YWx1ZSk7XG4gICAgICAgIGlmIChvcHRpb24uY3JlYXRlZCkge1xuICAgICAgICAgIHRoaXMuY3JlYXRlZExhYmVsID0gb3B0aW9uLmN1cnJlbnRMYWJlbDtcbiAgICAgICAgICB0aGlzLmNyZWF0ZWRTZWxlY3RlZCA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5jcmVhdGVkU2VsZWN0ZWQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNlbGVjdGVkTGFiZWwgPSBvcHRpb24uY3VycmVudExhYmVsO1xuICAgICAgICB0aGlzLnNlbGVjdGVkID0gb3B0aW9uO1xuICAgICAgICBpZiAodGhpcy5maWx0ZXJhYmxlKSB0aGlzLnF1ZXJ5ID0gdGhpcy5zZWxlY3RlZExhYmVsO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlKSkge1xuICAgICAgICB0aGlzLnZhbHVlLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgcmVzdWx0LnB1c2goX3RoaXM4LmdldE9wdGlvbih2YWx1ZSkpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc2VsZWN0ZWQgPSByZXN1bHQ7XG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzOC5yZXNldElucHV0SGVpZ2h0KCk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGhhbmRsZUZvY3VzOiBmdW5jdGlvbiBoYW5kbGVGb2N1cyhldmVudCkge1xuICAgICAgaWYgKCF0aGlzLnNvZnRGb2N1cykge1xuICAgICAgICBpZiAodGhpcy5hdXRvbWF0aWNEcm9wZG93biB8fCB0aGlzLmZpbHRlcmFibGUpIHtcbiAgICAgICAgICBpZiAodGhpcy5maWx0ZXJhYmxlICYmICF0aGlzLnZpc2libGUpIHtcbiAgICAgICAgICAgIHRoaXMubWVudVZpc2libGVPbkZvY3VzID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLiRlbWl0KCdmb2N1cycsIGV2ZW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuc29mdEZvY3VzID0gZmFsc2U7XG4gICAgICB9XG4gICAgfSxcbiAgICBibHVyOiBmdW5jdGlvbiBibHVyKCkge1xuICAgICAgdGhpcy52aXNpYmxlID0gZmFsc2U7XG4gICAgICB0aGlzLiRyZWZzLnJlZmVyZW5jZS5ibHVyKCk7XG4gICAgfSxcbiAgICBoYW5kbGVCbHVyOiBmdW5jdGlvbiBoYW5kbGVCbHVyKGV2ZW50KSB7XG4gICAgICB2YXIgX3RoaXM5ID0gdGhpcztcblxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChfdGhpczkuaXNTaWxlbnRCbHVyKSB7XG4gICAgICAgICAgX3RoaXM5LmlzU2lsZW50Qmx1ciA9IGZhbHNlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzOS4kZW1pdCgnYmx1cicsIGV2ZW50KTtcbiAgICAgICAgfVxuICAgICAgfSwgNTApO1xuICAgICAgdGhpcy5zb2Z0Rm9jdXMgPSBmYWxzZTtcbiAgICB9LFxuICAgIGhhbmRsZUNsZWFyQ2xpY2s6IGZ1bmN0aW9uIGhhbmRsZUNsZWFyQ2xpY2soZXZlbnQpIHtcbiAgICAgIHRoaXMuZGVsZXRlU2VsZWN0ZWQoZXZlbnQpO1xuICAgIH0sXG4gICAgZG9EZXN0cm95OiBmdW5jdGlvbiBkb0Rlc3Ryb3koKSB7XG4gICAgICB0aGlzLiRyZWZzLnBvcHBlciAmJiB0aGlzLiRyZWZzLnBvcHBlci5kb0Rlc3Ryb3koKTtcbiAgICB9LFxuICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZSgpIHtcbiAgICAgIHRoaXMudmlzaWJsZSA9IGZhbHNlO1xuICAgIH0sXG4gICAgdG9nZ2xlTGFzdE9wdGlvbkhpdFN0YXRlOiBmdW5jdGlvbiB0b2dnbGVMYXN0T3B0aW9uSGl0U3RhdGUoaGl0KSB7XG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkodGhpcy5zZWxlY3RlZCkpIHJldHVybjtcbiAgICAgIHZhciBvcHRpb24gPSB0aGlzLnNlbGVjdGVkW3RoaXMuc2VsZWN0ZWQubGVuZ3RoIC0gMV07XG4gICAgICBpZiAoIW9wdGlvbikgcmV0dXJuO1xuXG4gICAgICBpZiAoaGl0ID09PSB0cnVlIHx8IGhpdCA9PT0gZmFsc2UpIHtcbiAgICAgICAgb3B0aW9uLmhpdFN0YXRlID0gaGl0O1xuICAgICAgICByZXR1cm4gaGl0O1xuICAgICAgfVxuXG4gICAgICBvcHRpb24uaGl0U3RhdGUgPSAhb3B0aW9uLmhpdFN0YXRlO1xuICAgICAgcmV0dXJuIG9wdGlvbi5oaXRTdGF0ZTtcbiAgICB9LFxuICAgIGRlbGV0ZVByZXZUYWc6IGZ1bmN0aW9uIGRlbGV0ZVByZXZUYWcoZSkge1xuICAgICAgaWYgKGUudGFyZ2V0LnZhbHVlLmxlbmd0aCA8PSAwICYmICF0aGlzLnRvZ2dsZUxhc3RPcHRpb25IaXRTdGF0ZSgpKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IHRoaXMudmFsdWUuc2xpY2UoKTtcbiAgICAgICAgdmFsdWUucG9wKCk7XG4gICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdmFsdWUpO1xuICAgICAgICB0aGlzLmVtaXRDaGFuZ2UodmFsdWUpO1xuICAgICAgfVxuICAgIH0sXG4gICAgbWFuYWdlUGxhY2Vob2xkZXI6IGZ1bmN0aW9uIG1hbmFnZVBsYWNlaG9sZGVyKCkge1xuICAgICAgaWYgKHRoaXMuY3VycmVudFBsYWNlaG9sZGVyICE9PSAnJykge1xuICAgICAgICB0aGlzLmN1cnJlbnRQbGFjZWhvbGRlciA9IHRoaXMuJHJlZnMuaW5wdXQudmFsdWUgPyAnJyA6IHRoaXMuY2FjaGVkUGxhY2VIb2xkZXI7XG4gICAgICB9XG4gICAgfSxcbiAgICByZXNldElucHV0U3RhdGU6IGZ1bmN0aW9uIHJlc2V0SW5wdXRTdGF0ZShlKSB7XG4gICAgICBpZiAoZS5rZXlDb2RlICE9PSA4KSB0aGlzLnRvZ2dsZUxhc3RPcHRpb25IaXRTdGF0ZShmYWxzZSk7XG4gICAgICB0aGlzLmlucHV0TGVuZ3RoID0gdGhpcy4kcmVmcy5pbnB1dC52YWx1ZS5sZW5ndGggKiAxNSArIDIwO1xuICAgICAgdGhpcy5yZXNldElucHV0SGVpZ2h0KCk7XG4gICAgfSxcbiAgICByZXNldElucHV0SGVpZ2h0OiBmdW5jdGlvbiByZXNldElucHV0SGVpZ2h0KCkge1xuICAgICAgdmFyIF90aGlzMTAgPSB0aGlzO1xuXG4gICAgICBpZiAodGhpcy5jb2xsYXBzZVRhZ3MgJiYgIXRoaXMuZmlsdGVyYWJsZSkgcmV0dXJuO1xuICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIV90aGlzMTAuJHJlZnMucmVmZXJlbmNlKSByZXR1cm47XG4gICAgICAgIHZhciBpbnB1dENoaWxkTm9kZXMgPSBfdGhpczEwLiRyZWZzLnJlZmVyZW5jZS4kZWwuY2hpbGROb2RlcztcbiAgICAgICAgdmFyIGlucHV0ID0gW10uZmlsdGVyLmNhbGwoaW5wdXRDaGlsZE5vZGVzLCBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgIHJldHVybiBpdGVtLnRhZ05hbWUgPT09ICdJTlBVVCc7XG4gICAgICAgIH0pWzBdO1xuICAgICAgICB2YXIgdGFncyA9IF90aGlzMTAuJHJlZnMudGFncztcbiAgICAgICAgdmFyIHRhZ3NIZWlnaHQgPSB0YWdzID8gTWF0aC5yb3VuZCh0YWdzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodCkgOiAwO1xuICAgICAgICB2YXIgc2l6ZUluTWFwID0gX3RoaXMxMC5pbml0aWFsSW5wdXRIZWlnaHQgfHwgNDA7XG4gICAgICAgIGlucHV0LnN0eWxlLmhlaWdodCA9IF90aGlzMTAuc2VsZWN0ZWQubGVuZ3RoID09PSAwID8gc2l6ZUluTWFwICsgJ3B4JyA6IE1hdGgubWF4KHRhZ3MgPyB0YWdzSGVpZ2h0ICsgKHRhZ3NIZWlnaHQgPiBzaXplSW5NYXAgPyA2IDogMCkgOiAwLCBzaXplSW5NYXApICsgJ3B4JztcbiAgICAgICAgaWYgKF90aGlzMTAudmlzaWJsZSAmJiBfdGhpczEwLmVtcHR5VGV4dCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICBfdGhpczEwLmJyb2FkY2FzdCgnRWxTZWxlY3REcm9wZG93bicsICd1cGRhdGVQb3BwZXInKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICByZXNldEhvdmVySW5kZXg6IGZ1bmN0aW9uIHJlc2V0SG92ZXJJbmRleCgpIHtcbiAgICAgIHZhciBfdGhpczExID0gdGhpcztcblxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghX3RoaXMxMS5tdWx0aXBsZSkge1xuICAgICAgICAgIF90aGlzMTEuaG92ZXJJbmRleCA9IF90aGlzMTEub3B0aW9ucy5pbmRleE9mKF90aGlzMTEuc2VsZWN0ZWQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChfdGhpczExLnNlbGVjdGVkLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIF90aGlzMTEuaG92ZXJJbmRleCA9IE1hdGgubWluLmFwcGx5KG51bGwsIF90aGlzMTEuc2VsZWN0ZWQubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfdGhpczExLm9wdGlvbnMuaW5kZXhPZihpdGVtKTtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgX3RoaXMxMS5ob3ZlckluZGV4ID0gLTE7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCAzMDApO1xuICAgIH0sXG4gICAgaGFuZGxlT3B0aW9uU2VsZWN0OiBmdW5jdGlvbiBoYW5kbGVPcHRpb25TZWxlY3Qob3B0aW9uLCBieUNsaWNrKSB7XG4gICAgICB2YXIgX3RoaXMxMiA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLm11bHRpcGxlKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9ICh0aGlzLnZhbHVlIHx8IFtdKS5zbGljZSgpO1xuICAgICAgICB2YXIgb3B0aW9uSW5kZXggPSB0aGlzLmdldFZhbHVlSW5kZXgodmFsdWUsIG9wdGlvbi52YWx1ZSk7XG4gICAgICAgIGlmIChvcHRpb25JbmRleCA+IC0xKSB7XG4gICAgICAgICAgdmFsdWUuc3BsaWNlKG9wdGlvbkluZGV4LCAxKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLm11bHRpcGxlTGltaXQgPD0gMCB8fCB2YWx1ZS5sZW5ndGggPCB0aGlzLm11bHRpcGxlTGltaXQpIHtcbiAgICAgICAgICB2YWx1ZS5wdXNoKG9wdGlvbi52YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB2YWx1ZSk7XG4gICAgICAgIHRoaXMuZW1pdENoYW5nZSh2YWx1ZSk7XG4gICAgICAgIGlmIChvcHRpb24uY3JlYXRlZCkge1xuICAgICAgICAgIHRoaXMucXVlcnkgPSAnJztcbiAgICAgICAgICB0aGlzLmhhbmRsZVF1ZXJ5Q2hhbmdlKCcnKTtcbiAgICAgICAgICB0aGlzLmlucHV0TGVuZ3RoID0gMjA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZmlsdGVyYWJsZSkgdGhpcy4kcmVmcy5pbnB1dC5mb2N1cygpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBvcHRpb24udmFsdWUpO1xuICAgICAgICB0aGlzLmVtaXRDaGFuZ2Uob3B0aW9uLnZhbHVlKTtcbiAgICAgICAgdGhpcy52aXNpYmxlID0gZmFsc2U7XG4gICAgICB9XG4gICAgICB0aGlzLmlzU2lsZW50Qmx1ciA9IGJ5Q2xpY2s7XG4gICAgICB0aGlzLnNldFNvZnRGb2N1cygpO1xuICAgICAgaWYgKHRoaXMudmlzaWJsZSkgcmV0dXJuO1xuICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczEyLnNjcm9sbFRvT3B0aW9uKG9wdGlvbik7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHNldFNvZnRGb2N1czogZnVuY3Rpb24gc2V0U29mdEZvY3VzKCkge1xuICAgICAgdGhpcy5zb2Z0Rm9jdXMgPSB0cnVlO1xuICAgICAgdmFyIGlucHV0ID0gdGhpcy4kcmVmcy5pbnB1dCB8fCB0aGlzLiRyZWZzLnJlZmVyZW5jZTtcbiAgICAgIGlmIChpbnB1dCkge1xuICAgICAgICBpbnB1dC5mb2N1cygpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0VmFsdWVJbmRleDogZnVuY3Rpb24gZ2V0VmFsdWVJbmRleCgpIHtcbiAgICAgIHZhciBhcnIgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICAgICAgdmFyIHZhbHVlID0gYXJndW1lbnRzWzFdO1xuXG4gICAgICB2YXIgaXNPYmplY3QgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLnRvTG93ZXJDYXNlKCkgPT09ICdbb2JqZWN0IG9iamVjdF0nO1xuICAgICAgaWYgKCFpc09iamVjdCkge1xuICAgICAgICByZXR1cm4gYXJyLmluZGV4T2YodmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHZhbHVlS2V5ID0gdGhpcy52YWx1ZUtleTtcbiAgICAgICAgdmFyIGluZGV4ID0gLTE7XG4gICAgICAgIGFyci5zb21lKGZ1bmN0aW9uIChpdGVtLCBpKSB7XG4gICAgICAgICAgaWYgKE9iamVjdCh1dGlsX1tcImdldFZhbHVlQnlQYXRoXCJdKShpdGVtLCB2YWx1ZUtleSkgPT09IE9iamVjdCh1dGlsX1tcImdldFZhbHVlQnlQYXRoXCJdKSh2YWx1ZSwgdmFsdWVLZXkpKSB7XG4gICAgICAgICAgICBpbmRleCA9IGk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGluZGV4O1xuICAgICAgfVxuICAgIH0sXG4gICAgdG9nZ2xlTWVudTogZnVuY3Rpb24gdG9nZ2xlTWVudSgpIHtcbiAgICAgIGlmICghdGhpcy5zZWxlY3REaXNhYmxlZCkge1xuICAgICAgICBpZiAodGhpcy5tZW51VmlzaWJsZU9uRm9jdXMpIHtcbiAgICAgICAgICB0aGlzLm1lbnVWaXNpYmxlT25Gb2N1cyA9IGZhbHNlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMudmlzaWJsZSA9ICF0aGlzLnZpc2libGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMudmlzaWJsZSkge1xuICAgICAgICAgICh0aGlzLiRyZWZzLmlucHV0IHx8IHRoaXMuJHJlZnMucmVmZXJlbmNlKS5mb2N1cygpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBzZWxlY3RPcHRpb246IGZ1bmN0aW9uIHNlbGVjdE9wdGlvbigpIHtcbiAgICAgIGlmICghdGhpcy52aXNpYmxlKSB7XG4gICAgICAgIHRoaXMudG9nZ2xlTWVudSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9uc1t0aGlzLmhvdmVySW5kZXhdKSB7XG4gICAgICAgICAgdGhpcy5oYW5kbGVPcHRpb25TZWxlY3QodGhpcy5vcHRpb25zW3RoaXMuaG92ZXJJbmRleF0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBkZWxldGVTZWxlY3RlZDogZnVuY3Rpb24gZGVsZXRlU2VsZWN0ZWQoZXZlbnQpIHtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgdmFyIHZhbHVlID0gdGhpcy5tdWx0aXBsZSA/IFtdIDogJyc7XG4gICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHZhbHVlKTtcbiAgICAgIHRoaXMuZW1pdENoYW5nZSh2YWx1ZSk7XG4gICAgICB0aGlzLnZpc2libGUgPSBmYWxzZTtcbiAgICAgIHRoaXMuJGVtaXQoJ2NsZWFyJyk7XG4gICAgfSxcbiAgICBkZWxldGVUYWc6IGZ1bmN0aW9uIGRlbGV0ZVRhZyhldmVudCwgdGFnKSB7XG4gICAgICB2YXIgaW5kZXggPSB0aGlzLnNlbGVjdGVkLmluZGV4T2YodGFnKTtcbiAgICAgIGlmIChpbmRleCA+IC0xICYmICF0aGlzLnNlbGVjdERpc2FibGVkKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IHRoaXMudmFsdWUuc2xpY2UoKTtcbiAgICAgICAgdmFsdWUuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB2YWx1ZSk7XG4gICAgICAgIHRoaXMuZW1pdENoYW5nZSh2YWx1ZSk7XG4gICAgICAgIHRoaXMuJGVtaXQoJ3JlbW92ZS10YWcnLCB0YWcudmFsdWUpO1xuICAgICAgfVxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfSxcbiAgICBvbklucHV0Q2hhbmdlOiBmdW5jdGlvbiBvbklucHV0Q2hhbmdlKCkge1xuICAgICAgaWYgKHRoaXMuZmlsdGVyYWJsZSAmJiB0aGlzLnF1ZXJ5ICE9PSB0aGlzLnNlbGVjdGVkTGFiZWwpIHtcbiAgICAgICAgdGhpcy5xdWVyeSA9IHRoaXMuc2VsZWN0ZWRMYWJlbDtcbiAgICAgICAgdGhpcy5oYW5kbGVRdWVyeUNoYW5nZSh0aGlzLnF1ZXJ5KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uT3B0aW9uRGVzdHJveTogZnVuY3Rpb24gb25PcHRpb25EZXN0cm95KGluZGV4KSB7XG4gICAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICB0aGlzLm9wdGlvbnNDb3VudC0tO1xuICAgICAgICB0aGlzLmZpbHRlcmVkT3B0aW9uc0NvdW50LS07XG4gICAgICAgIHRoaXMub3B0aW9ucy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH0sXG4gICAgcmVzZXRJbnB1dFdpZHRoOiBmdW5jdGlvbiByZXNldElucHV0V2lkdGgoKSB7XG4gICAgICB0aGlzLmlucHV0V2lkdGggPSB0aGlzLiRyZWZzLnJlZmVyZW5jZS4kZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg7XG4gICAgfSxcbiAgICBoYW5kbGVSZXNpemU6IGZ1bmN0aW9uIGhhbmRsZVJlc2l6ZSgpIHtcbiAgICAgIHRoaXMucmVzZXRJbnB1dFdpZHRoKCk7XG4gICAgICBpZiAodGhpcy5tdWx0aXBsZSkgdGhpcy5yZXNldElucHV0SGVpZ2h0KCk7XG4gICAgfSxcbiAgICBjaGVja0RlZmF1bHRGaXJzdE9wdGlvbjogZnVuY3Rpb24gY2hlY2tEZWZhdWx0Rmlyc3RPcHRpb24oKSB7XG4gICAgICB0aGlzLmhvdmVySW5kZXggPSAtMTtcbiAgICAgIC8vIGhpZ2hsaWdodCB0aGUgY3JlYXRlZCBvcHRpb25cbiAgICAgIHZhciBoYXNDcmVhdGVkID0gZmFsc2U7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy5vcHRpb25zLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnNbaV0uY3JlYXRlZCkge1xuICAgICAgICAgIGhhc0NyZWF0ZWQgPSB0cnVlO1xuICAgICAgICAgIHRoaXMuaG92ZXJJbmRleCA9IGk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChoYXNDcmVhdGVkKSByZXR1cm47XG4gICAgICBmb3IgKHZhciBfaSA9IDA7IF9pICE9PSB0aGlzLm9wdGlvbnMubGVuZ3RoOyArK19pKSB7XG4gICAgICAgIHZhciBvcHRpb24gPSB0aGlzLm9wdGlvbnNbX2ldO1xuICAgICAgICBpZiAodGhpcy5xdWVyeSkge1xuICAgICAgICAgIC8vIGhpZ2hsaWdodCBmaXJzdCBvcHRpb25zIHRoYXQgcGFzc2VzIHRoZSBmaWx0ZXJcbiAgICAgICAgICBpZiAoIW9wdGlvbi5kaXNhYmxlZCAmJiAhb3B0aW9uLmdyb3VwRGlzYWJsZWQgJiYgb3B0aW9uLnZpc2libGUpIHtcbiAgICAgICAgICAgIHRoaXMuaG92ZXJJbmRleCA9IF9pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGhpZ2hsaWdodCBjdXJyZW50bHkgc2VsZWN0ZWQgb3B0aW9uXG4gICAgICAgICAgaWYgKG9wdGlvbi5pdGVtU2VsZWN0ZWQpIHtcbiAgICAgICAgICAgIHRoaXMuaG92ZXJJbmRleCA9IF9pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBnZXRWYWx1ZUtleTogZnVuY3Rpb24gZ2V0VmFsdWVLZXkoaXRlbSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpdGVtLnZhbHVlKS50b0xvd2VyQ2FzZSgpICE9PSAnW29iamVjdCBvYmplY3RdJykge1xuICAgICAgICByZXR1cm4gaXRlbS52YWx1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBPYmplY3QodXRpbF9bXCJnZXRWYWx1ZUJ5UGF0aFwiXSkoaXRlbS52YWx1ZSwgdGhpcy52YWx1ZUtleSk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7XG4gICAgdmFyIF90aGlzMTMgPSB0aGlzO1xuXG4gICAgdGhpcy5jYWNoZWRQbGFjZUhvbGRlciA9IHRoaXMuY3VycmVudFBsYWNlaG9sZGVyID0gdGhpcy5wcm9wUGxhY2Vob2xkZXI7XG4gICAgaWYgKHRoaXMubXVsdGlwbGUgJiYgIUFycmF5LmlzQXJyYXkodGhpcy52YWx1ZSkpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgW10pO1xuICAgIH1cbiAgICBpZiAoIXRoaXMubXVsdGlwbGUgJiYgQXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlKSkge1xuICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCAnJyk7XG4gICAgfVxuXG4gICAgdGhpcy5kZWJvdW5jZWRPbklucHV0Q2hhbmdlID0gZGVib3VuY2VfZGVmYXVsdCgpKHRoaXMuZGVib3VuY2UsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzMTMub25JbnB1dENoYW5nZSgpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5kZWJvdW5jZWRRdWVyeUNoYW5nZSA9IGRlYm91bmNlX2RlZmF1bHQoKSh0aGlzLmRlYm91bmNlLCBmdW5jdGlvbiAoZSkge1xuICAgICAgX3RoaXMxMy5oYW5kbGVRdWVyeUNoYW5nZShlLnRhcmdldC52YWx1ZSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLiRvbignaGFuZGxlT3B0aW9uQ2xpY2snLCB0aGlzLmhhbmRsZU9wdGlvblNlbGVjdCk7XG4gICAgdGhpcy4kb24oJ3NldFNlbGVjdGVkJywgdGhpcy5zZXRTZWxlY3RlZCk7XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdmFyIF90aGlzMTQgPSB0aGlzO1xuXG4gICAgaWYgKHRoaXMubXVsdGlwbGUgJiYgQXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlKSAmJiB0aGlzLnZhbHVlLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMuY3VycmVudFBsYWNlaG9sZGVyID0gJyc7XG4gICAgfVxuICAgIE9iamVjdChyZXNpemVfZXZlbnRfW1wiYWRkUmVzaXplTGlzdGVuZXJcIl0pKHRoaXMuJGVsLCB0aGlzLmhhbmRsZVJlc2l6ZSk7XG5cbiAgICB2YXIgcmVmZXJlbmNlID0gdGhpcy4kcmVmcy5yZWZlcmVuY2U7XG4gICAgaWYgKHJlZmVyZW5jZSAmJiByZWZlcmVuY2UuJGVsKSB7XG4gICAgICB2YXIgc2l6ZU1hcCA9IHtcbiAgICAgICAgbWVkaXVtOiAzNixcbiAgICAgICAgc21hbGw6IDMyLFxuICAgICAgICBtaW5pOiAyOFxuICAgICAgfTtcbiAgICAgIHZhciBpbnB1dCA9IHJlZmVyZW5jZS4kZWwucXVlcnlTZWxlY3RvcignaW5wdXQnKTtcbiAgICAgIHRoaXMuaW5pdGlhbElucHV0SGVpZ2h0ID0gaW5wdXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0IHx8IHNpemVNYXBbdGhpcy5zZWxlY3RTaXplXTtcbiAgICB9XG4gICAgaWYgKHRoaXMucmVtb3RlICYmIHRoaXMubXVsdGlwbGUpIHtcbiAgICAgIHRoaXMucmVzZXRJbnB1dEhlaWdodCgpO1xuICAgIH1cbiAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocmVmZXJlbmNlICYmIHJlZmVyZW5jZS4kZWwpIHtcbiAgICAgICAgX3RoaXMxNC5pbnB1dFdpZHRoID0gcmVmZXJlbmNlLiRlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aDtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLnNldFNlbGVjdGVkKCk7XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuJGVsICYmIHRoaXMuaGFuZGxlUmVzaXplKSBPYmplY3QocmVzaXplX2V2ZW50X1tcInJlbW92ZVJlc2l6ZUxpc3RlbmVyXCJdKSh0aGlzLiRlbCwgdGhpcy5oYW5kbGVSZXNpemUpO1xuICB9XG59KTtcbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc2VsZWN0L3NyYy9zZWxlY3QudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlxuIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIHNyY19zZWxlY3R2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18gPSAoc2VsZWN0dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfKTsgXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NlbGVjdC9zcmMvc2VsZWN0LnZ1ZVxuXG5cblxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cblxudmFyIHNlbGVjdF9jb21wb25lbnQgPSBPYmplY3QoY29tcG9uZW50Tm9ybWFsaXplcltcImFcIiAvKiBkZWZhdWx0ICovXSkoXG4gIHNyY19zZWxlY3R2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKGZhbHNlKSB7IHZhciBzZWxlY3RfYXBpOyB9XG5zZWxlY3RfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJwYWNrYWdlcy9zZWxlY3Qvc3JjL3NlbGVjdC52dWVcIlxuLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyB2YXIgc3JjX3NlbGVjdCA9IChzZWxlY3RfY29tcG9uZW50LmV4cG9ydHMpO1xuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3QvaW5kZXguanNcblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuc3JjX3NlbGVjdC5pbnN0YWxsID0gZnVuY3Rpb24gKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KHNyY19zZWxlY3QubmFtZSwgc3JjX3NlbGVjdCk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBwYWNrYWdlc19zZWxlY3QgPSBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZGVmYXVsdFwiXSA9IChzcmNfc2VsZWN0KTtcblxuLyoqKi8gfSlcblxuLyoqKioqKi8gfSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChyZWYpIHtcbiAgcmV0dXJuIHtcbiAgICBtZXRob2RzOiB7XG4gICAgICBmb2N1czogZnVuY3Rpb24gZm9jdXMoKSB7XG4gICAgICAgIHRoaXMuJHJlZnNbcmVmXS5mb2N1cygpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn07XG5cbjsiLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBzY3JvbGxJbnRvVmlldztcblxudmFyIF92dWUgPSByZXF1aXJlKCd2dWUnKTtcblxudmFyIF92dWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdnVlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gc2Nyb2xsSW50b1ZpZXcoY29udGFpbmVyLCBzZWxlY3RlZCkge1xuICBpZiAoX3Z1ZTIuZGVmYXVsdC5wcm90b3R5cGUuJGlzU2VydmVyKSByZXR1cm47XG5cbiAgaWYgKCFzZWxlY3RlZCkge1xuICAgIGNvbnRhaW5lci5zY3JvbGxUb3AgPSAwO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBvZmZzZXRQYXJlbnRzID0gW107XG4gIHZhciBwb2ludGVyID0gc2VsZWN0ZWQub2Zmc2V0UGFyZW50O1xuICB3aGlsZSAocG9pbnRlciAmJiBjb250YWluZXIgIT09IHBvaW50ZXIgJiYgY29udGFpbmVyLmNvbnRhaW5zKHBvaW50ZXIpKSB7XG4gICAgb2Zmc2V0UGFyZW50cy5wdXNoKHBvaW50ZXIpO1xuICAgIHBvaW50ZXIgPSBwb2ludGVyLm9mZnNldFBhcmVudDtcbiAgfVxuICB2YXIgdG9wID0gc2VsZWN0ZWQub2Zmc2V0VG9wICsgb2Zmc2V0UGFyZW50cy5yZWR1Y2UoZnVuY3Rpb24gKHByZXYsIGN1cnIpIHtcbiAgICByZXR1cm4gcHJldiArIGN1cnIub2Zmc2V0VG9wO1xuICB9LCAwKTtcbiAgdmFyIGJvdHRvbSA9IHRvcCArIHNlbGVjdGVkLm9mZnNldEhlaWdodDtcbiAgdmFyIHZpZXdSZWN0VG9wID0gY29udGFpbmVyLnNjcm9sbFRvcDtcbiAgdmFyIHZpZXdSZWN0Qm90dG9tID0gdmlld1JlY3RUb3AgKyBjb250YWluZXIuY2xpZW50SGVpZ2h0O1xuXG4gIGlmICh0b3AgPCB2aWV3UmVjdFRvcCkge1xuICAgIGNvbnRhaW5lci5zY3JvbGxUb3AgPSB0b3A7XG4gIH0gZWxzZSBpZiAoYm90dG9tID4gdmlld1JlY3RCb3R0b20pIHtcbiAgICBjb250YWluZXIuc2Nyb2xsVG9wID0gYm90dG9tIC0gY29udGFpbmVyLmNsaWVudEhlaWdodDtcbiAgfVxufSIsIm1vZHVsZS5leHBvcnRzID1cbi8qKioqKiovIChmdW5jdGlvbihtb2R1bGVzKSB7IC8vIHdlYnBhY2tCb290c3RyYXBcbi8qKioqKiovIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbi8qKioqKiovIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbi8qKioqKiovIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuLyoqKioqKi8gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4vKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuLyoqKioqKi8gXHRcdFx0aTogbW9kdWxlSWQsXG4vKioqKioqLyBcdFx0XHRsOiBmYWxzZSxcbi8qKioqKiovIFx0XHRcdGV4cG9ydHM6IHt9XG4vKioqKioqLyBcdFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4vKioqKioqLyBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbi8qKioqKiovIFx0XHRtb2R1bGUubCA9IHRydWU7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4vKioqKioqLyBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuLyoqKioqKi8gXHR9XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4vKioqKioqLyBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4vKioqKioqLyBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4vKioqKioqLyBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuLyoqKioqKi8gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4vKioqKioqLyBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuLyoqKioqKi8gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbi8qKioqKiovIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuLyoqKioqKi8gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbi8qKioqKiovIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4vKioqKioqLyBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuLyoqKioqKi8gXHRcdHJldHVybiBucztcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuLyoqKioqKi8gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuLyoqKioqKi8gXHRcdHJldHVybiBnZXR0ZXI7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIvZGlzdC9cIjtcbi8qKioqKiovXG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTMyKTtcbi8qKioqKiovIH0pXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gKHtcblxuLyoqKi8gMDpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiYVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIG5vcm1hbGl6ZUNvbXBvbmVudDsgfSk7XG4vKiBnbG9iYWxzIF9fVlVFX1NTUl9DT05URVhUX18gKi9cblxuLy8gSU1QT1JUQU5UOiBEbyBOT1QgdXNlIEVTMjAxNSBmZWF0dXJlcyBpbiB0aGlzIGZpbGUgKGV4Y2VwdCBmb3IgbW9kdWxlcykuXG4vLyBUaGlzIG1vZHVsZSBpcyBhIHJ1bnRpbWUgdXRpbGl0eSBmb3IgY2xlYW5lciBjb21wb25lbnQgbW9kdWxlIG91dHB1dCBhbmQgd2lsbFxuLy8gYmUgaW5jbHVkZWQgaW4gdGhlIGZpbmFsIHdlYnBhY2sgdXNlciBidW5kbGUuXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZUNvbXBvbmVudCAoXG4gIHNjcmlwdEV4cG9ydHMsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmdW5jdGlvbmFsVGVtcGxhdGUsXG4gIGluamVjdFN0eWxlcyxcbiAgc2NvcGVJZCxcbiAgbW9kdWxlSWRlbnRpZmllciwgLyogc2VydmVyIG9ubHkgKi9cbiAgc2hhZG93TW9kZSAvKiB2dWUtY2xpIG9ubHkgKi9cbikge1xuICAvLyBWdWUuZXh0ZW5kIGNvbnN0cnVjdG9yIGV4cG9ydCBpbnRlcm9wXG4gIHZhciBvcHRpb25zID0gdHlwZW9mIHNjcmlwdEV4cG9ydHMgPT09ICdmdW5jdGlvbidcbiAgICA/IHNjcmlwdEV4cG9ydHMub3B0aW9uc1xuICAgIDogc2NyaXB0RXhwb3J0c1xuXG4gIC8vIHJlbmRlciBmdW5jdGlvbnNcbiAgaWYgKHJlbmRlcikge1xuICAgIG9wdGlvbnMucmVuZGVyID0gcmVuZGVyXG4gICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBzdGF0aWNSZW5kZXJGbnNcbiAgICBvcHRpb25zLl9jb21waWxlZCA9IHRydWVcbiAgfVxuXG4gIC8vIGZ1bmN0aW9uYWwgdGVtcGxhdGVcbiAgaWYgKGZ1bmN0aW9uYWxUZW1wbGF0ZSkge1xuICAgIG9wdGlvbnMuZnVuY3Rpb25hbCA9IHRydWVcbiAgfVxuXG4gIC8vIHNjb3BlZElkXG4gIGlmIChzY29wZUlkKSB7XG4gICAgb3B0aW9ucy5fc2NvcGVJZCA9ICdkYXRhLXYtJyArIHNjb3BlSWRcbiAgfVxuXG4gIHZhciBob29rXG4gIGlmIChtb2R1bGVJZGVudGlmaWVyKSB7IC8vIHNlcnZlciBidWlsZFxuICAgIGhvb2sgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgLy8gMi4zIGluamVjdGlvblxuICAgICAgY29udGV4dCA9XG4gICAgICAgIGNvbnRleHQgfHwgLy8gY2FjaGVkIGNhbGxcbiAgICAgICAgKHRoaXMuJHZub2RlICYmIHRoaXMuJHZub2RlLnNzckNvbnRleHQpIHx8IC8vIHN0YXRlZnVsXG4gICAgICAgICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC4kdm5vZGUgJiYgdGhpcy5wYXJlbnQuJHZub2RlLnNzckNvbnRleHQpIC8vIGZ1bmN0aW9uYWxcbiAgICAgIC8vIDIuMiB3aXRoIHJ1bkluTmV3Q29udGV4dDogdHJ1ZVxuICAgICAgaWYgKCFjb250ZXh0ICYmIHR5cGVvZiBfX1ZVRV9TU1JfQ09OVEVYVF9fICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb250ZXh0ID0gX19WVUVfU1NSX0NPTlRFWFRfX1xuICAgICAgfVxuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCBzdHlsZXNcbiAgICAgIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICAgICAgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgY29udGV4dClcbiAgICAgIH1cbiAgICAgIC8vIHJlZ2lzdGVyIGNvbXBvbmVudCBtb2R1bGUgaWRlbnRpZmllciBmb3IgYXN5bmMgY2h1bmsgaW5mZXJyZW5jZVxuICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpIHtcbiAgICAgICAgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMuYWRkKG1vZHVsZUlkZW50aWZpZXIpXG4gICAgICB9XG4gICAgfVxuICAgIC8vIHVzZWQgYnkgc3NyIGluIGNhc2UgY29tcG9uZW50IGlzIGNhY2hlZCBhbmQgYmVmb3JlQ3JlYXRlXG4gICAgLy8gbmV2ZXIgZ2V0cyBjYWxsZWRcbiAgICBvcHRpb25zLl9zc3JSZWdpc3RlciA9IGhvb2tcbiAgfSBlbHNlIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICBob29rID0gc2hhZG93TW9kZVxuICAgICAgPyBmdW5jdGlvbiAoKSB7IGluamVjdFN0eWxlcy5jYWxsKHRoaXMsIHRoaXMuJHJvb3QuJG9wdGlvbnMuc2hhZG93Um9vdCkgfVxuICAgICAgOiBpbmplY3RTdHlsZXNcbiAgfVxuXG4gIGlmIChob29rKSB7XG4gICAgaWYgKG9wdGlvbnMuZnVuY3Rpb25hbCkge1xuICAgICAgLy8gZm9yIHRlbXBsYXRlLW9ubHkgaG90LXJlbG9hZCBiZWNhdXNlIGluIHRoYXQgY2FzZSB0aGUgcmVuZGVyIGZuIGRvZXNuJ3RcbiAgICAgIC8vIGdvIHRocm91Z2ggdGhlIG5vcm1hbGl6ZXJcbiAgICAgIG9wdGlvbnMuX2luamVjdFN0eWxlcyA9IGhvb2tcbiAgICAgIC8vIHJlZ2lzdGVyIGZvciBmdW5jdGlvYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICB2YXIgb3JpZ2luYWxSZW5kZXIgPSBvcHRpb25zLnJlbmRlclxuICAgICAgb3B0aW9ucy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXJXaXRoU3R5bGVJbmplY3Rpb24gKGgsIGNvbnRleHQpIHtcbiAgICAgICAgaG9vay5jYWxsKGNvbnRleHQpXG4gICAgICAgIHJldHVybiBvcmlnaW5hbFJlbmRlcihoLCBjb250ZXh0KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHJlZ2lzdHJhdGlvbiBhcyBiZWZvcmVDcmVhdGUgaG9va1xuICAgICAgdmFyIGV4aXN0aW5nID0gb3B0aW9ucy5iZWZvcmVDcmVhdGVcbiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmdcbiAgICAgICAgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spXG4gICAgICAgIDogW2hvb2tdXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuXG5cbi8qKiovIH0pLFxuXG4vKioqLyAxMzI6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xuXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy90YWcvc3JjL3RhZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIHRhZ3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyA9ICh7XG4gIG5hbWU6ICdFbFRhZycsXG4gIHByb3BzOiB7XG4gICAgdGV4dDogU3RyaW5nLFxuICAgIGNsb3NhYmxlOiBCb29sZWFuLFxuICAgIHR5cGU6IFN0cmluZyxcbiAgICBoaXQ6IEJvb2xlYW4sXG4gICAgZGlzYWJsZVRyYW5zaXRpb25zOiBCb29sZWFuLFxuICAgIGNvbG9yOiBTdHJpbmcsXG4gICAgc2l6ZTogU3RyaW5nLFxuICAgIGVmZmVjdDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2xpZ2h0JyxcbiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCkge1xuICAgICAgICByZXR1cm4gWydkYXJrJywgJ2xpZ2h0JywgJ3BsYWluJ10uaW5kZXhPZih2YWwpICE9PSAtMTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBoYW5kbGVDbG9zZTogZnVuY3Rpb24gaGFuZGxlQ2xvc2UoZXZlbnQpIHtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnLCBldmVudCk7XG4gICAgfSxcbiAgICBoYW5kbGVDbGljazogZnVuY3Rpb24gaGFuZGxlQ2xpY2soZXZlbnQpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ2NsaWNrJywgZXZlbnQpO1xuICAgIH1cbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICB0YWdTaXplOiBmdW5jdGlvbiB0YWdTaXplKCkge1xuICAgICAgcmV0dXJuIHRoaXMuc2l6ZSB8fCAodGhpcy4kRUxFTUVOVCB8fCB7fSkuc2l6ZTtcbiAgICB9XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHtcbiAgICB2YXIgdHlwZSA9IHRoaXMudHlwZSxcbiAgICAgICAgdGFnU2l6ZSA9IHRoaXMudGFnU2l6ZSxcbiAgICAgICAgaGl0ID0gdGhpcy5oaXQsXG4gICAgICAgIGVmZmVjdCA9IHRoaXMuZWZmZWN0O1xuXG4gICAgdmFyIGNsYXNzZXMgPSBbJ2VsLXRhZycsIHR5cGUgPyAnZWwtdGFnLS0nICsgdHlwZSA6ICcnLCB0YWdTaXplID8gJ2VsLXRhZy0tJyArIHRhZ1NpemUgOiAnJywgZWZmZWN0ID8gJ2VsLXRhZy0tJyArIGVmZmVjdCA6ICcnLCBoaXQgJiYgJ2lzLWhpdCddO1xuICAgIHZhciB0YWdFbCA9IGgoXG4gICAgICAnc3BhbicsXG4gICAgICB7XG4gICAgICAgICdjbGFzcyc6IGNsYXNzZXMsXG4gICAgICAgIHN0eWxlOiB7IGJhY2tncm91bmRDb2xvcjogdGhpcy5jb2xvciB9LFxuICAgICAgICBvbjoge1xuICAgICAgICAgICdjbGljayc6IHRoaXMuaGFuZGxlQ2xpY2tcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIFt0aGlzLiRzbG90cy5kZWZhdWx0LCB0aGlzLmNsb3NhYmxlICYmIGgoJ2knLCB7ICdjbGFzcyc6ICdlbC10YWdfX2Nsb3NlIGVsLWljb24tY2xvc2UnLCBvbjoge1xuICAgICAgICAgICdjbGljayc6IHRoaXMuaGFuZGxlQ2xvc2VcbiAgICAgICAgfVxuICAgICAgfSldXG4gICAgKTtcblxuICAgIHJldHVybiB0aGlzLmRpc2FibGVUcmFuc2l0aW9ucyA/IHRhZ0VsIDogaChcbiAgICAgICd0cmFuc2l0aW9uJyxcbiAgICAgIHtcbiAgICAgICAgYXR0cnM6IHsgbmFtZTogJ2VsLXpvb20taW4tY2VudGVyJyB9XG4gICAgICB9LFxuICAgICAgW3RhZ0VsXVxuICAgICk7XG4gIH1cbn0pO1xuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90YWcvc3JjL3RhZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXG4gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyB2YXIgc3JjX3RhZ3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyA9ICh0YWd2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18pOyBcbi8vIEVYVEVSTkFMIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXG52YXIgY29tcG9uZW50Tm9ybWFsaXplciA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFnL3NyYy90YWcudnVlXG52YXIgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnNcblxuXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuXG52YXIgY29tcG9uZW50ID0gT2JqZWN0KGNvbXBvbmVudE5vcm1hbGl6ZXJbXCJhXCIgLyogZGVmYXVsdCAqL10pKFxuICBzcmNfdGFndnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChmYWxzZSkgeyB2YXIgYXBpOyB9XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInBhY2thZ2VzL3RhZy9zcmMvdGFnLnZ1ZVwiXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciB0YWcgPSAoY29tcG9uZW50LmV4cG9ydHMpO1xuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90YWcvaW5kZXguanNcblxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xudGFnLmluc3RhbGwgPSBmdW5jdGlvbiAoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQodGFnLm5hbWUsIHRhZyk7XG59O1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBwYWNrYWdlc190YWcgPSBfX3dlYnBhY2tfZXhwb3J0c19fW1wiZGVmYXVsdFwiXSA9ICh0YWcpO1xuXG4vKioqLyB9KVxuXG4vKioqKioqLyB9KTsiLCJtb2R1bGUuZXhwb3J0cyA9XG4vKioqKioqLyAoZnVuY3Rpb24obW9kdWxlcykgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwXG4vKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbi8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbi8qKioqKiovIFx0XHRcdGk6IG1vZHVsZUlkLFxuLyoqKioqKi8gXHRcdFx0bDogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fVxuLyoqKioqKi8gXHRcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4vKioqKioqLyBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi9cbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuLyoqKioqKi8gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbi8qKioqKiovIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuLyoqKioqKi8gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3Rcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4vKioqKioqLyBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuLyoqKioqKi8gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3Rcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4vKioqKioqLyBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbi8qKioqKiovIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4vKioqKioqLyBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gbnM7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbi8qKioqKiovIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gZ2V0dGVyO1xuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL2Rpc3QvXCI7XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vKioqKioqLyBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDU0KTtcbi8qKioqKiovIH0pXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gKHtcblxuLyoqKi8gMDpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiYVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIG5vcm1hbGl6ZUNvbXBvbmVudDsgfSk7XG4vKiBnbG9iYWxzIF9fVlVFX1NTUl9DT05URVhUX18gKi9cblxuLy8gSU1QT1JUQU5UOiBEbyBOT1QgdXNlIEVTMjAxNSBmZWF0dXJlcyBpbiB0aGlzIGZpbGUgKGV4Y2VwdCBmb3IgbW9kdWxlcykuXG4vLyBUaGlzIG1vZHVsZSBpcyBhIHJ1bnRpbWUgdXRpbGl0eSBmb3IgY2xlYW5lciBjb21wb25lbnQgbW9kdWxlIG91dHB1dCBhbmQgd2lsbFxuLy8gYmUgaW5jbHVkZWQgaW4gdGhlIGZpbmFsIHdlYnBhY2sgdXNlciBidW5kbGUuXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZUNvbXBvbmVudCAoXG4gIHNjcmlwdEV4cG9ydHMsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmdW5jdGlvbmFsVGVtcGxhdGUsXG4gIGluamVjdFN0eWxlcyxcbiAgc2NvcGVJZCxcbiAgbW9kdWxlSWRlbnRpZmllciwgLyogc2VydmVyIG9ubHkgKi9cbiAgc2hhZG93TW9kZSAvKiB2dWUtY2xpIG9ubHkgKi9cbikge1xuICAvLyBWdWUuZXh0ZW5kIGNvbnN0cnVjdG9yIGV4cG9ydCBpbnRlcm9wXG4gIHZhciBvcHRpb25zID0gdHlwZW9mIHNjcmlwdEV4cG9ydHMgPT09ICdmdW5jdGlvbidcbiAgICA/IHNjcmlwdEV4cG9ydHMub3B0aW9uc1xuICAgIDogc2NyaXB0RXhwb3J0c1xuXG4gIC8vIHJlbmRlciBmdW5jdGlvbnNcbiAgaWYgKHJlbmRlcikge1xuICAgIG9wdGlvbnMucmVuZGVyID0gcmVuZGVyXG4gICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBzdGF0aWNSZW5kZXJGbnNcbiAgICBvcHRpb25zLl9jb21waWxlZCA9IHRydWVcbiAgfVxuXG4gIC8vIGZ1bmN0aW9uYWwgdGVtcGxhdGVcbiAgaWYgKGZ1bmN0aW9uYWxUZW1wbGF0ZSkge1xuICAgIG9wdGlvbnMuZnVuY3Rpb25hbCA9IHRydWVcbiAgfVxuXG4gIC8vIHNjb3BlZElkXG4gIGlmIChzY29wZUlkKSB7XG4gICAgb3B0aW9ucy5fc2NvcGVJZCA9ICdkYXRhLXYtJyArIHNjb3BlSWRcbiAgfVxuXG4gIHZhciBob29rXG4gIGlmIChtb2R1bGVJZGVudGlmaWVyKSB7IC8vIHNlcnZlciBidWlsZFxuICAgIGhvb2sgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgLy8gMi4zIGluamVjdGlvblxuICAgICAgY29udGV4dCA9XG4gICAgICAgIGNvbnRleHQgfHwgLy8gY2FjaGVkIGNhbGxcbiAgICAgICAgKHRoaXMuJHZub2RlICYmIHRoaXMuJHZub2RlLnNzckNvbnRleHQpIHx8IC8vIHN0YXRlZnVsXG4gICAgICAgICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC4kdm5vZGUgJiYgdGhpcy5wYXJlbnQuJHZub2RlLnNzckNvbnRleHQpIC8vIGZ1bmN0aW9uYWxcbiAgICAgIC8vIDIuMiB3aXRoIHJ1bkluTmV3Q29udGV4dDogdHJ1ZVxuICAgICAgaWYgKCFjb250ZXh0ICYmIHR5cGVvZiBfX1ZVRV9TU1JfQ09OVEVYVF9fICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb250ZXh0ID0gX19WVUVfU1NSX0NPTlRFWFRfX1xuICAgICAgfVxuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCBzdHlsZXNcbiAgICAgIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICAgICAgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgY29udGV4dClcbiAgICAgIH1cbiAgICAgIC8vIHJlZ2lzdGVyIGNvbXBvbmVudCBtb2R1bGUgaWRlbnRpZmllciBmb3IgYXN5bmMgY2h1bmsgaW5mZXJyZW5jZVxuICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpIHtcbiAgICAgICAgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMuYWRkKG1vZHVsZUlkZW50aWZpZXIpXG4gICAgICB9XG4gICAgfVxuICAgIC8vIHVzZWQgYnkgc3NyIGluIGNhc2UgY29tcG9uZW50IGlzIGNhY2hlZCBhbmQgYmVmb3JlQ3JlYXRlXG4gICAgLy8gbmV2ZXIgZ2V0cyBjYWxsZWRcbiAgICBvcHRpb25zLl9zc3JSZWdpc3RlciA9IGhvb2tcbiAgfSBlbHNlIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICBob29rID0gc2hhZG93TW9kZVxuICAgICAgPyBmdW5jdGlvbiAoKSB7IGluamVjdFN0eWxlcy5jYWxsKHRoaXMsIHRoaXMuJHJvb3QuJG9wdGlvbnMuc2hhZG93Um9vdCkgfVxuICAgICAgOiBpbmplY3RTdHlsZXNcbiAgfVxuXG4gIGlmIChob29rKSB7XG4gICAgaWYgKG9wdGlvbnMuZnVuY3Rpb25hbCkge1xuICAgICAgLy8gZm9yIHRlbXBsYXRlLW9ubHkgaG90LXJlbG9hZCBiZWNhdXNlIGluIHRoYXQgY2FzZSB0aGUgcmVuZGVyIGZuIGRvZXNuJ3RcbiAgICAgIC8vIGdvIHRocm91Z2ggdGhlIG5vcm1hbGl6ZXJcbiAgICAgIG9wdGlvbnMuX2luamVjdFN0eWxlcyA9IGhvb2tcbiAgICAgIC8vIHJlZ2lzdGVyIGZvciBmdW5jdGlvYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICB2YXIgb3JpZ2luYWxSZW5kZXIgPSBvcHRpb25zLnJlbmRlclxuICAgICAgb3B0aW9ucy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXJXaXRoU3R5bGVJbmplY3Rpb24gKGgsIGNvbnRleHQpIHtcbiAgICAgICAgaG9vay5jYWxsKGNvbnRleHQpXG4gICAgICAgIHJldHVybiBvcmlnaW5hbFJlbmRlcihoLCBjb250ZXh0KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHJlZ2lzdHJhdGlvbiBhcyBiZWZvcmVDcmVhdGUgaG9va1xuICAgICAgdmFyIGV4aXN0aW5nID0gb3B0aW9ucy5iZWZvcmVDcmVhdGVcbiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmdcbiAgICAgICAgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spXG4gICAgICAgIDogW2hvb2tdXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuXG5cbi8qKiovIH0pLFxuXG4vKioqLyAzOlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJlbGVtZW50LXVpL2xpYi91dGlscy91dGlsXCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gMzM6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03YTQ0YzY0MiZcbnZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJsaVwiLFxuICAgIHtcbiAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6IFwic2hvd1wiLFxuICAgICAgICAgIHJhd05hbWU6IFwidi1zaG93XCIsXG4gICAgICAgICAgdmFsdWU6IF92bS52aXNpYmxlLFxuICAgICAgICAgIGV4cHJlc3Npb246IFwidmlzaWJsZVwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBzdGF0aWNDbGFzczogXCJlbC1zZWxlY3QtZHJvcGRvd25fX2l0ZW1cIixcbiAgICAgIGNsYXNzOiB7XG4gICAgICAgIHNlbGVjdGVkOiBfdm0uaXRlbVNlbGVjdGVkLFxuICAgICAgICBcImlzLWRpc2FibGVkXCI6IF92bS5kaXNhYmxlZCB8fCBfdm0uZ3JvdXBEaXNhYmxlZCB8fCBfdm0ubGltaXRSZWFjaGVkLFxuICAgICAgICBob3ZlcjogX3ZtLmhvdmVyXG4gICAgICB9LFxuICAgICAgb246IHtcbiAgICAgICAgbW91c2VlbnRlcjogX3ZtLmhvdmVySXRlbSxcbiAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKVxuICAgICAgICAgIHJldHVybiBfdm0uc2VsZWN0T3B0aW9uQ2xpY2soJGV2ZW50KVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBbX3ZtLl90KFwiZGVmYXVsdFwiLCBbX2MoXCJzcGFuXCIsIFtfdm0uX3YoX3ZtLl9zKF92bS5jdXJyZW50TGFiZWwpKV0pXSldLFxuICAgIDJcbiAgKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03YTQ0YzY0MiZcblxuLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCBcImVsZW1lbnQtdWkvbGliL21peGlucy9lbWl0dGVyXCJcbnZhciBlbWl0dGVyXyA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG52YXIgZW1pdHRlcl9kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihlbWl0dGVyXyk7XG5cbi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgXCJlbGVtZW50LXVpL2xpYi91dGlscy91dGlsXCJcbnZhciB1dGlsXyA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIG9wdGlvbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyA9ICh7XG4gIG1peGluczogW2VtaXR0ZXJfZGVmYXVsdC5hXSxcblxuICBuYW1lOiAnRWxPcHRpb24nLFxuXG4gIGNvbXBvbmVudE5hbWU6ICdFbE9wdGlvbicsXG5cbiAgaW5qZWN0OiBbJ3NlbGVjdCddLFxuXG4gIHByb3BzOiB7XG4gICAgdmFsdWU6IHtcbiAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICBsYWJlbDogW1N0cmluZywgTnVtYmVyXSxcbiAgICBjcmVhdGVkOiBCb29sZWFuLFxuICAgIGRpc2FibGVkOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICB9XG4gIH0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW5kZXg6IC0xLFxuICAgICAgZ3JvdXBEaXNhYmxlZDogZmFsc2UsXG4gICAgICB2aXNpYmxlOiB0cnVlLFxuICAgICAgaGl0U3RhdGU6IGZhbHNlLFxuICAgICAgaG92ZXI6IGZhbHNlXG4gICAgfTtcbiAgfSxcblxuXG4gIGNvbXB1dGVkOiB7XG4gICAgaXNPYmplY3Q6IGZ1bmN0aW9uIGlzT2JqZWN0KCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0aGlzLnZhbHVlKS50b0xvd2VyQ2FzZSgpID09PSAnW29iamVjdCBvYmplY3RdJztcbiAgICB9LFxuICAgIGN1cnJlbnRMYWJlbDogZnVuY3Rpb24gY3VycmVudExhYmVsKCkge1xuICAgICAgcmV0dXJuIHRoaXMubGFiZWwgfHwgKHRoaXMuaXNPYmplY3QgPyAnJyA6IHRoaXMudmFsdWUpO1xuICAgIH0sXG4gICAgY3VycmVudFZhbHVlOiBmdW5jdGlvbiBjdXJyZW50VmFsdWUoKSB7XG4gICAgICByZXR1cm4gdGhpcy52YWx1ZSB8fCB0aGlzLmxhYmVsIHx8ICcnO1xuICAgIH0sXG4gICAgaXRlbVNlbGVjdGVkOiBmdW5jdGlvbiBpdGVtU2VsZWN0ZWQoKSB7XG4gICAgICBpZiAoIXRoaXMuc2VsZWN0Lm11bHRpcGxlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzRXF1YWwodGhpcy52YWx1ZSwgdGhpcy5zZWxlY3QudmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGFpbnModGhpcy5zZWxlY3QudmFsdWUsIHRoaXMudmFsdWUpO1xuICAgICAgfVxuICAgIH0sXG4gICAgbGltaXRSZWFjaGVkOiBmdW5jdGlvbiBsaW1pdFJlYWNoZWQoKSB7XG4gICAgICBpZiAodGhpcy5zZWxlY3QubXVsdGlwbGUpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLml0ZW1TZWxlY3RlZCAmJiAodGhpcy5zZWxlY3QudmFsdWUgfHwgW10pLmxlbmd0aCA+PSB0aGlzLnNlbGVjdC5tdWx0aXBsZUxpbWl0ICYmIHRoaXMuc2VsZWN0Lm11bHRpcGxlTGltaXQgPiAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICB3YXRjaDoge1xuICAgIGN1cnJlbnRMYWJlbDogZnVuY3Rpb24gY3VycmVudExhYmVsKCkge1xuICAgICAgaWYgKCF0aGlzLmNyZWF0ZWQgJiYgIXRoaXMuc2VsZWN0LnJlbW90ZSkgdGhpcy5kaXNwYXRjaCgnRWxTZWxlY3QnLCAnc2V0U2VsZWN0ZWQnKTtcbiAgICB9LFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSh2YWwsIG9sZFZhbCkge1xuICAgICAgdmFyIF9zZWxlY3QgPSB0aGlzLnNlbGVjdCxcbiAgICAgICAgICByZW1vdGUgPSBfc2VsZWN0LnJlbW90ZSxcbiAgICAgICAgICB2YWx1ZUtleSA9IF9zZWxlY3QudmFsdWVLZXk7XG5cbiAgICAgIGlmICghdGhpcy5jcmVhdGVkICYmICFyZW1vdGUpIHtcbiAgICAgICAgaWYgKHZhbHVlS2V5ICYmICh0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZih2YWwpKSA9PT0gJ29iamVjdCcgJiYgKHR5cGVvZiBvbGRWYWwgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKG9sZFZhbCkpID09PSAnb2JqZWN0JyAmJiB2YWxbdmFsdWVLZXldID09PSBvbGRWYWxbdmFsdWVLZXldKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZGlzcGF0Y2goJ0VsU2VsZWN0JywgJ3NldFNlbGVjdGVkJyk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBpc0VxdWFsOiBmdW5jdGlvbiBpc0VxdWFsKGEsIGIpIHtcbiAgICAgIGlmICghdGhpcy5pc09iamVjdCkge1xuICAgICAgICByZXR1cm4gYSA9PT0gYjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciB2YWx1ZUtleSA9IHRoaXMuc2VsZWN0LnZhbHVlS2V5O1xuICAgICAgICByZXR1cm4gT2JqZWN0KHV0aWxfW1wiZ2V0VmFsdWVCeVBhdGhcIl0pKGEsIHZhbHVlS2V5KSA9PT0gT2JqZWN0KHV0aWxfW1wiZ2V0VmFsdWVCeVBhdGhcIl0pKGIsIHZhbHVlS2V5KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGNvbnRhaW5zOiBmdW5jdGlvbiBjb250YWlucygpIHtcbiAgICAgIHZhciBhcnIgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICAgICAgdmFyIHRhcmdldCA9IGFyZ3VtZW50c1sxXTtcblxuICAgICAgaWYgKCF0aGlzLmlzT2JqZWN0KSB7XG4gICAgICAgIHJldHVybiBhcnIgJiYgYXJyLmluZGV4T2YodGFyZ2V0KSA+IC0xO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHZhbHVlS2V5ID0gdGhpcy5zZWxlY3QudmFsdWVLZXk7XG4gICAgICAgIHJldHVybiBhcnIgJiYgYXJyLnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICByZXR1cm4gT2JqZWN0KHV0aWxfW1wiZ2V0VmFsdWVCeVBhdGhcIl0pKGl0ZW0sIHZhbHVlS2V5KSA9PT0gT2JqZWN0KHV0aWxfW1wiZ2V0VmFsdWVCeVBhdGhcIl0pKHRhcmdldCwgdmFsdWVLZXkpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGhhbmRsZUdyb3VwRGlzYWJsZWQ6IGZ1bmN0aW9uIGhhbmRsZUdyb3VwRGlzYWJsZWQodmFsKSB7XG4gICAgICB0aGlzLmdyb3VwRGlzYWJsZWQgPSB2YWw7XG4gICAgfSxcbiAgICBob3Zlckl0ZW06IGZ1bmN0aW9uIGhvdmVySXRlbSgpIHtcbiAgICAgIGlmICghdGhpcy5kaXNhYmxlZCAmJiAhdGhpcy5ncm91cERpc2FibGVkKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0LmhvdmVySW5kZXggPSB0aGlzLnNlbGVjdC5vcHRpb25zLmluZGV4T2YodGhpcyk7XG4gICAgICB9XG4gICAgfSxcbiAgICBzZWxlY3RPcHRpb25DbGljazogZnVuY3Rpb24gc2VsZWN0T3B0aW9uQ2xpY2soKSB7XG4gICAgICBpZiAodGhpcy5kaXNhYmxlZCAhPT0gdHJ1ZSAmJiB0aGlzLmdyb3VwRGlzYWJsZWQgIT09IHRydWUpIHtcbiAgICAgICAgdGhpcy5kaXNwYXRjaCgnRWxTZWxlY3QnLCAnaGFuZGxlT3B0aW9uQ2xpY2snLCBbdGhpcywgdHJ1ZV0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgcXVlcnlDaGFuZ2U6IGZ1bmN0aW9uIHF1ZXJ5Q2hhbmdlKHF1ZXJ5KSB7XG4gICAgICB0aGlzLnZpc2libGUgPSBuZXcgUmVnRXhwKE9iamVjdCh1dGlsX1tcImVzY2FwZVJlZ2V4cFN0cmluZ1wiXSkocXVlcnkpLCAnaScpLnRlc3QodGhpcy5jdXJyZW50TGFiZWwpIHx8IHRoaXMuY3JlYXRlZDtcbiAgICAgIGlmICghdGhpcy52aXNpYmxlKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0LmZpbHRlcmVkT3B0aW9uc0NvdW50LS07XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7XG4gICAgdGhpcy5zZWxlY3Qub3B0aW9ucy5wdXNoKHRoaXMpO1xuICAgIHRoaXMuc2VsZWN0LmNhY2hlZE9wdGlvbnMucHVzaCh0aGlzKTtcbiAgICB0aGlzLnNlbGVjdC5vcHRpb25zQ291bnQrKztcbiAgICB0aGlzLnNlbGVjdC5maWx0ZXJlZE9wdGlvbnNDb3VudCsrO1xuXG4gICAgdGhpcy4kb24oJ3F1ZXJ5Q2hhbmdlJywgdGhpcy5xdWVyeUNoYW5nZSk7XG4gICAgdGhpcy4kb24oJ2hhbmRsZUdyb3VwRGlzYWJsZWQnLCB0aGlzLmhhbmRsZUdyb3VwRGlzYWJsZWQpO1xuICB9LFxuICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkge1xuICAgIHZhciBfc2VsZWN0MiA9IHRoaXMuc2VsZWN0LFxuICAgICAgICBzZWxlY3RlZCA9IF9zZWxlY3QyLnNlbGVjdGVkLFxuICAgICAgICBtdWx0aXBsZSA9IF9zZWxlY3QyLm11bHRpcGxlO1xuXG4gICAgdmFyIHNlbGVjdGVkT3B0aW9ucyA9IG11bHRpcGxlID8gc2VsZWN0ZWQgOiBbc2VsZWN0ZWRdO1xuICAgIHZhciBpbmRleCA9IHRoaXMuc2VsZWN0LmNhY2hlZE9wdGlvbnMuaW5kZXhPZih0aGlzKTtcbiAgICB2YXIgc2VsZWN0ZWRJbmRleCA9IHNlbGVjdGVkT3B0aW9ucy5pbmRleE9mKHRoaXMpO1xuXG4gICAgLy8gaWYgb3B0aW9uIGlzIG5vdCBzZWxlY3RlZCwgcmVtb3ZlIGl0IGZyb20gY2FjaGVcbiAgICBpZiAoaW5kZXggPiAtMSAmJiBzZWxlY3RlZEluZGV4IDwgMCkge1xuICAgICAgdGhpcy5zZWxlY3QuY2FjaGVkT3B0aW9ucy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgICB0aGlzLnNlbGVjdC5vbk9wdGlvbkRlc3Ryb3kodGhpcy5zZWxlY3Qub3B0aW9ucy5pbmRleE9mKHRoaXMpKTtcbiAgfVxufSk7XG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcbiAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBzcmNfb3B0aW9udnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfID0gKG9wdGlvbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyk7IFxuLy8gRVhURVJOQUwgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcbnZhciBjb21wb25lbnROb3JtYWxpemVyID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL29wdGlvbi52dWVcblxuXG5cblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5cbnZhciBjb21wb25lbnQgPSBPYmplY3QoY29tcG9uZW50Tm9ybWFsaXplcltcImFcIiAvKiBkZWZhdWx0ICovXSkoXG4gIHNyY19vcHRpb252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKGZhbHNlKSB7IHZhciBhcGk7IH1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicGFja2FnZXMvc2VsZWN0L3NyYy9vcHRpb24udnVlXCJcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIHNyY19vcHRpb24gPSBfX3dlYnBhY2tfZXhwb3J0c19fW1wiYVwiXSA9IChjb21wb25lbnQuZXhwb3J0cyk7XG5cbi8qKiovIH0pLFxuXG4vKioqLyA0OlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJlbGVtZW50LXVpL2xpYi9taXhpbnMvZW1pdHRlclwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDU0OlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfc2VsZWN0X3NyY19vcHRpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMzMpO1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5fc2VsZWN0X3NyY19vcHRpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1svKiBkZWZhdWx0ICovIFwiYVwiXS5pbnN0YWxsID0gZnVuY3Rpb24gKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KF9zZWxlY3Rfc3JjX29wdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWy8qIGRlZmF1bHQgKi8gXCJhXCJdLm5hbWUsIF9zZWxlY3Rfc3JjX29wdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWy8qIGRlZmF1bHQgKi8gXCJhXCJdKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1tcImRlZmF1bHRcIl0gPSAoX3NlbGVjdF9zcmNfb3B0aW9uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bLyogZGVmYXVsdCAqLyBcImFcIl0pO1xuXG4vKioqLyB9KVxuXG4vKioqKioqLyB9KTsiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJAY2hhcnNldCBcXFwiVVRGLThcXFwiO1xcbi5lbC1jaGVja2JveCxcXG4uZWwtY2hlY2tib3gtYnV0dG9uX19pbm5lcixcXG4uZWwtdGFibGUgdGguZWwtdGFibGVfX2NlbGwge1xcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcXG59XFxuLmVsLWNoZWNrYm94LFxcbi5lbC1jaGVja2JveF9faW5wdXQge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG4uZWwtY2hlY2tib3gsXFxuLmVsLWNoZWNrYm94LWJ1dHRvbl9faW5uZXIsXFxuLmVsLWNoZWNrYm94X19pbnB1dCxcXG4uZWwtdGFnIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxufVxcbi5lbC1jaGVja2JveCB7XFxuICBjb2xvcjogIzYwNjI2NjtcXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICBtYXJnaW4tcmlnaHQ6IDMwcHg7XFxufVxcbi5lbC1jaGVja2JveC5pcy1ib3JkZXJlZCB7XFxuICBwYWRkaW5nOiA5cHggMjBweCA5cHggMTBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNEQ0RGRTY7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcXG4gIGhlaWdodDogNDBweDtcXG59XFxuLmVsLWNoZWNrYm94LmlzLWJvcmRlcmVkLmlzLWNoZWNrZWQge1xcbiAgYm9yZGVyLWNvbG9yOiAjNDA5RUZGO1xcbn1cXG4uZWwtY2hlY2tib3guaXMtYm9yZGVyZWQuaXMtZGlzYWJsZWQge1xcbiAgYm9yZGVyLWNvbG9yOiAjRUJFRUY1O1xcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcXG59XFxuLmVsLWNoZWNrYm94LmlzLWJvcmRlcmVkICsgLmVsLWNoZWNrYm94LmlzLWJvcmRlcmVkIHtcXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xcbn1cXG4uZWwtY2hlY2tib3guaXMtYm9yZGVyZWQuZWwtY2hlY2tib3gtLW1lZGl1bSB7XFxuICBwYWRkaW5nOiA3cHggMjBweCA3cHggMTBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIGhlaWdodDogMzZweDtcXG59XFxuLmVsLWNoZWNrYm94LmlzLWJvcmRlcmVkLmVsLWNoZWNrYm94LS1tZWRpdW0gLmVsLWNoZWNrYm94X19sYWJlbCB7XFxuICBsaW5lLWhlaWdodDogMTdweDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG59XFxuLmVsLWNoZWNrYm94LmlzLWJvcmRlcmVkLmVsLWNoZWNrYm94LS1tZWRpdW0gLmVsLWNoZWNrYm94X19pbm5lciB7XFxuICBoZWlnaHQ6IDE0cHg7XFxuICB3aWR0aDogMTRweDtcXG59XFxuLmVsLWNoZWNrYm94LmlzLWJvcmRlcmVkLmVsLWNoZWNrYm94LS1zbWFsbCB7XFxuICBwYWRkaW5nOiA1cHggMTVweCA1cHggMTBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gIGhlaWdodDogMzJweDtcXG59XFxuLmVsLWNoZWNrYm94LmlzLWJvcmRlcmVkLmVsLWNoZWNrYm94LS1zbWFsbCAuZWwtY2hlY2tib3hfX2xhYmVsIHtcXG4gIGxpbmUtaGVpZ2h0OiAxNXB4O1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbn1cXG4uZWwtY2hlY2tib3guaXMtYm9yZGVyZWQuZWwtY2hlY2tib3gtLXNtYWxsIC5lbC1jaGVja2JveF9faW5uZXIge1xcbiAgaGVpZ2h0OiAxMnB4O1xcbiAgd2lkdGg6IDEycHg7XFxufVxcbi5lbC1jaGVja2JveC5pcy1ib3JkZXJlZC5lbC1jaGVja2JveC0tc21hbGwgLmVsLWNoZWNrYm94X19pbm5lcjo6YWZ0ZXIge1xcbiAgaGVpZ2h0OiA2cHg7XFxuICB3aWR0aDogMnB4O1xcbn1cXG4uZWwtY2hlY2tib3guaXMtYm9yZGVyZWQuZWwtY2hlY2tib3gtLW1pbmkge1xcbiAgcGFkZGluZzogM3B4IDE1cHggM3B4IDEwcHg7XFxuICBib3JkZXItcmFkaXVzOiAzcHg7XFxuICBoZWlnaHQ6IDI4cHg7XFxufVxcbi5lbC1jaGVja2JveC5pcy1ib3JkZXJlZC5lbC1jaGVja2JveC0tbWluaSAuZWwtY2hlY2tib3hfX2xhYmVsIHtcXG4gIGxpbmUtaGVpZ2h0OiAxMnB4O1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbn1cXG4uZWwtY2hlY2tib3guaXMtYm9yZGVyZWQuZWwtY2hlY2tib3gtLW1pbmkgLmVsLWNoZWNrYm94X19pbm5lciB7XFxuICBoZWlnaHQ6IDEycHg7XFxuICB3aWR0aDogMTJweDtcXG59XFxuLmVsLWNoZWNrYm94LmlzLWJvcmRlcmVkLmVsLWNoZWNrYm94LS1taW5pIC5lbC1jaGVja2JveF9faW5uZXI6OmFmdGVyIHtcXG4gIGhlaWdodDogNnB4O1xcbiAgd2lkdGg6IDJweDtcXG59XFxuLmVsLWNoZWNrYm94X19pbnB1dCB7XFxuICBvdXRsaW5lOiAwO1xcbiAgbGluZS1oZWlnaHQ6IDE7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbn1cXG4uZWwtY2hlY2tib3hfX2lucHV0LmlzLWRpc2FibGVkIC5lbC1jaGVja2JveF9faW5uZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZjJmYztcXG4gIGJvcmRlci1jb2xvcjogI0RDREZFNjtcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcbi5lbC1jaGVja2JveF9faW5wdXQuaXMtZGlzYWJsZWQgLmVsLWNoZWNrYm94X19pbm5lcjo6YWZ0ZXIge1xcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcXG4gIGJvcmRlci1jb2xvcjogI0MwQzRDQztcXG59XFxuLmVsLWNoZWNrYm94X19pbnB1dC5pcy1kaXNhYmxlZCAuZWwtY2hlY2tib3hfX2lubmVyICsgLmVsLWNoZWNrYm94X19sYWJlbCB7XFxuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xcbn1cXG4uZWwtY2hlY2tib3hfX2lucHV0LmlzLWRpc2FibGVkLmlzLWNoZWNrZWQgLmVsLWNoZWNrYm94X19pbm5lciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjJGNkZDO1xcbiAgYm9yZGVyLWNvbG9yOiAjRENERkU2O1xcbn1cXG4uZWwtY2hlY2tib3hfX2lucHV0LmlzLWRpc2FibGVkLmlzLWNoZWNrZWQgLmVsLWNoZWNrYm94X19pbm5lcjo6YWZ0ZXIge1xcbiAgYm9yZGVyLWNvbG9yOiAjQzBDNENDO1xcbn1cXG4uZWwtY2hlY2tib3hfX2lucHV0LmlzLWRpc2FibGVkLmlzLWluZGV0ZXJtaW5hdGUgLmVsLWNoZWNrYm94X19pbm5lciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjJGNkZDO1xcbiAgYm9yZGVyLWNvbG9yOiAjRENERkU2O1xcbn1cXG4uZWwtY2hlY2tib3hfX2lucHV0LmlzLWRpc2FibGVkLmlzLWluZGV0ZXJtaW5hdGUgLmVsLWNoZWNrYm94X19pbm5lcjo6YmVmb3JlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNDMEM0Q0M7XFxuICBib3JkZXItY29sb3I6ICNDMEM0Q0M7XFxufVxcbi5lbC1jaGVja2JveF9faW5wdXQuaXMtY2hlY2tlZCAuZWwtY2hlY2tib3hfX2lubmVyLFxcbi5lbC1jaGVja2JveF9faW5wdXQuaXMtaW5kZXRlcm1pbmF0ZSAuZWwtY2hlY2tib3hfX2lubmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM0MDlFRkY7XFxuICBib3JkZXItY29sb3I6ICM0MDlFRkY7XFxufVxcbi5lbC1jaGVja2JveF9faW5wdXQuaXMtZGlzYWJsZWQgKyBzcGFuLmVsLWNoZWNrYm94X19sYWJlbCB7XFxuICBjb2xvcjogI0MwQzRDQztcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcbi5lbC1jaGVja2JveF9faW5wdXQuaXMtY2hlY2tlZCAuZWwtY2hlY2tib3hfX2lubmVyOjphZnRlciB7XFxuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgc2NhbGVZKDEpO1xcbn1cXG4uZWwtY2hlY2tib3hfX2lucHV0LmlzLWNoZWNrZWQgKyAuZWwtY2hlY2tib3hfX2xhYmVsIHtcXG4gIGNvbG9yOiAjNDA5RUZGO1xcbn1cXG4uZWwtY2hlY2tib3hfX2lucHV0LmlzLWZvY3VzIC5lbC1jaGVja2JveF9faW5uZXIge1xcbiAgYm9yZGVyLWNvbG9yOiAjNDA5RUZGO1xcbn1cXG4uZWwtY2hlY2tib3hfX2lucHV0LmlzLWluZGV0ZXJtaW5hdGUgLmVsLWNoZWNrYm94X19pbm5lcjo6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6ICcnO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xcbiAgaGVpZ2h0OiAycHg7XFxuICB0cmFuc2Zvcm06IHNjYWxlKDAuNSk7XFxuICBsZWZ0OiAwO1xcbiAgcmlnaHQ6IDA7XFxuICB0b3A6IDVweDtcXG59XFxuLmVsLWNoZWNrYm94X19pbnB1dC5pcy1pbmRldGVybWluYXRlIC5lbC1jaGVja2JveF9faW5uZXI6OmFmdGVyIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcbi5lbC1jaGVja2JveF9faW5uZXIge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgYm9yZGVyOiAxcHggc29saWQgI0RDREZFNjtcXG4gIGJvcmRlci1yYWRpdXM6IDJweDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICB3aWR0aDogMTRweDtcXG4gIGhlaWdodDogMTRweDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XFxuICB6LWluZGV4OiAxO1xcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuMjVzIGN1YmljLWJlemllcigwLjcxLCAtMC40NiwgMC4yOSwgMS40NiksIGJhY2tncm91bmQtY29sb3IgMC4yNXMgY3ViaWMtYmV6aWVyKDAuNzEsIC0wLjQ2LCAwLjI5LCAxLjQ2KTtcXG59XFxuLmVsLWNoZWNrYm94X19pbm5lcjpob3ZlciB7XFxuICBib3JkZXItY29sb3I6ICM0MDlFRkY7XFxufVxcbi5lbC1jaGVja2JveF9faW5uZXI6OmFmdGVyIHtcXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjRkZGO1xcbiAgYm9yZGVyLWxlZnQ6IDA7XFxuICBib3JkZXItdG9wOiAwO1xcbiAgaGVpZ2h0OiA3cHg7XFxuICBsZWZ0OiA0cHg7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDFweDtcXG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSBzY2FsZVkoMCk7XFxuICB3aWR0aDogM3B4O1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTVzIGVhc2UtaW4gMC4wNXM7XFxuICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXI7XFxufVxcbi5lbC1jaGVja2JveC1idXR0b25fX2lubmVyLFxcbi5lbC10YWJsZSxcXG4uZWwtdGFnIHtcXG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuLmVsLWNoZWNrYm94X19vcmlnaW5hbCB7XFxuICBvcGFjaXR5OiAwO1xcbiAgb3V0bGluZTogMDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIG1hcmdpbjogMDtcXG4gIHdpZHRoOiAwO1xcbiAgaGVpZ2h0OiAwO1xcbiAgei1pbmRleDogLTE7XFxufVxcbi5lbC1jaGVja2JveF9fbGFiZWwge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XFxuICBmb250LXNpemU6IDE0cHg7XFxufVxcbi5lbC1jaGVja2JveDpsYXN0LW9mLXR5cGUge1xcbiAgbWFyZ2luLXJpZ2h0OiAwO1xcbn1cXG4uZWwtY2hlY2tib3gtYnV0dG9uIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG59XFxuLmVsLWNoZWNrYm94LWJ1dHRvbl9faW5uZXIge1xcbiAgbGluZS1oZWlnaHQ6IDE7XFxuICBmb250LXdlaWdodDogNTAwO1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGJhY2tncm91bmQ6ICNGRkY7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjRENERkU2O1xcbiAgYm9yZGVyLWxlZnQ6IDA7XFxuICBjb2xvcjogIzYwNjI2NjtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBvdXRsaW5lOiAwO1xcbiAgbWFyZ2luOiAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpO1xcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcXG4gIHBhZGRpbmc6IDEycHggMjBweDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGJvcmRlci1yYWRpdXM6IDA7XFxufVxcbi5lbC1jaGVja2JveC1idXR0b25fX2lubmVyLmlzLXJvdW5kIHtcXG4gIHBhZGRpbmc6IDEycHggMjBweDtcXG59XFxuLmVsLWNoZWNrYm94LWJ1dHRvbl9faW5uZXI6aG92ZXIge1xcbiAgY29sb3I6ICM0MDlFRkY7XFxufVxcbi5lbC1jaGVja2JveC1idXR0b25fX2lubmVyIFtjbGFzcyo9ZWwtaWNvbi1dIHtcXG4gIGxpbmUtaGVpZ2h0OiAwLjk7XFxufVxcbi5lbC1jaGVja2JveC1idXR0b25fX2lubmVyIFtjbGFzcyo9ZWwtaWNvbi1dICsgc3BhbiB7XFxuICBtYXJnaW4tbGVmdDogNXB4O1xcbn1cXG4uZWwtY2hlY2tib3gtYnV0dG9uX19vcmlnaW5hbCB7XFxuICBvcGFjaXR5OiAwO1xcbiAgb3V0bGluZTogMDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIG1hcmdpbjogMDtcXG4gIHotaW5kZXg6IC0xO1xcbn1cXG4uZWwtY2hlY2tib3gtYnV0dG9uLmlzLWNoZWNrZWQgLmVsLWNoZWNrYm94LWJ1dHRvbl9faW5uZXIge1xcbiAgY29sb3I6ICNGRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDA5RUZGO1xcbiAgYm9yZGVyLWNvbG9yOiAjNDA5RUZGO1xcbiAgYm94LXNoYWRvdzogLTFweCAwIDAgMCAjOGNjNWZmO1xcbn1cXG4uZWwtY2hlY2tib3gtYnV0dG9uLmlzLWNoZWNrZWQ6Zmlyc3QtY2hpbGQgLmVsLWNoZWNrYm94LWJ1dHRvbl9faW5uZXIge1xcbiAgYm9yZGVyLWxlZnQtY29sb3I6ICM0MDlFRkY7XFxufVxcbi5lbC1jaGVja2JveC1idXR0b24uaXMtZGlzYWJsZWQgLmVsLWNoZWNrYm94LWJ1dHRvbl9faW5uZXIge1xcbiAgY29sb3I6ICNDMEM0Q0M7XFxuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XFxuICBib3JkZXItY29sb3I6ICNFQkVFRjU7XFxuICBib3gtc2hhZG93OiBub25lO1xcbn1cXG4uZWwtY2hlY2tib3gtYnV0dG9uLmlzLWRpc2FibGVkOmZpcnN0LWNoaWxkIC5lbC1jaGVja2JveC1idXR0b25fX2lubmVyIHtcXG4gIGJvcmRlci1sZWZ0LWNvbG9yOiAjRUJFRUY1O1xcbn1cXG4uZWwtY2hlY2tib3gtYnV0dG9uOmZpcnN0LWNoaWxkIC5lbC1jaGVja2JveC1idXR0b25fX2lubmVyIHtcXG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI0RDREZFNjtcXG4gIGJvcmRlci1yYWRpdXM6IDRweCAwIDAgNHB4O1xcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xcbn1cXG4uZWwtY2hlY2tib3gtYnV0dG9uLmlzLWZvY3VzIC5lbC1jaGVja2JveC1idXR0b25fX2lubmVyIHtcXG4gIGJvcmRlci1jb2xvcjogIzQwOUVGRjtcXG59XFxuLmVsLWNoZWNrYm94LWJ1dHRvbjpsYXN0LWNoaWxkIC5lbC1jaGVja2JveC1idXR0b25fX2lubmVyIHtcXG4gIGJvcmRlci1yYWRpdXM6IDAgNHB4IDRweCAwO1xcbn1cXG4uZWwtY2hlY2tib3gtYnV0dG9uLS1tZWRpdW0gLmVsLWNoZWNrYm94LWJ1dHRvbl9faW5uZXIge1xcbiAgcGFkZGluZzogMTBweCAyMHB4O1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbiAgYm9yZGVyLXJhZGl1czogMDtcXG59XFxuLmVsLWNoZWNrYm94LWJ1dHRvbi0tbWVkaXVtIC5lbC1jaGVja2JveC1idXR0b25fX2lubmVyLmlzLXJvdW5kIHtcXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcXG59XFxuLmVsLWNoZWNrYm94LWJ1dHRvbi0tc21hbGwgLmVsLWNoZWNrYm94LWJ1dHRvbl9faW5uZXIge1xcbiAgcGFkZGluZzogOXB4IDE1cHg7XFxuICBmb250LXNpemU6IDEycHg7XFxuICBib3JkZXItcmFkaXVzOiAwO1xcbn1cXG4uZWwtY2hlY2tib3gtYnV0dG9uLS1zbWFsbCAuZWwtY2hlY2tib3gtYnV0dG9uX19pbm5lci5pcy1yb3VuZCB7XFxuICBwYWRkaW5nOiA5cHggMTVweDtcXG59XFxuLmVsLWNoZWNrYm94LWJ1dHRvbi0tbWluaSAuZWwtY2hlY2tib3gtYnV0dG9uX19pbm5lciB7XFxuICBwYWRkaW5nOiA3cHggMTVweDtcXG4gIGZvbnQtc2l6ZTogMTJweDtcXG4gIGJvcmRlci1yYWRpdXM6IDA7XFxufVxcbi5lbC10YWcsXFxuLmVsLXRvb2x0aXBfX3BvcHBlciB7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICBmb250LXNpemU6IDEycHg7XFxufVxcbi5lbC1jaGVja2JveC1idXR0b24tLW1pbmkgLmVsLWNoZWNrYm94LWJ1dHRvbl9faW5uZXIuaXMtcm91bmQge1xcbiAgcGFkZGluZzogN3B4IDE1cHg7XFxufVxcbi5lbC1jaGVja2JveC1ncm91cCB7XFxuICBmb250LXNpemU6IDA7XFxufVxcbi5lbC10YWcge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZjVmZjtcXG4gIGJvcmRlci1jb2xvcjogI2Q5ZWNmZjtcXG4gIGhlaWdodDogMzJweDtcXG4gIHBhZGRpbmc6IDAgMTBweDtcXG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xcbiAgY29sb3I6ICM0MDlFRkY7XFxuICBib3JkZXItd2lkdGg6IDFweDtcXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG4uZWwtdGFnLmlzLWhpdCB7XFxuICBib3JkZXItY29sb3I6ICM0MDlFRkY7XFxufVxcbi5lbC10YWcgLmVsLXRhZ19fY2xvc2Uge1xcbiAgY29sb3I6ICM0MDllZmY7XFxufVxcbi5lbC10YWcgLmVsLXRhZ19fY2xvc2U6aG92ZXIge1xcbiAgY29sb3I6ICNGRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDA5ZWZmO1xcbn1cXG4uZWwtdGFnLmVsLXRhZy0taW5mbyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY1O1xcbiAgYm9yZGVyLWNvbG9yOiAjZTllOWViO1xcbiAgY29sb3I6ICM5MDkzOTk7XFxufVxcbi5lbC10YWcuZWwtdGFnLS1pbmZvLmlzLWhpdCB7XFxuICBib3JkZXItY29sb3I6ICM5MDkzOTk7XFxufVxcbi5lbC10YWcuZWwtdGFnLS1pbmZvIC5lbC10YWdfX2Nsb3NlIHtcXG4gIGNvbG9yOiAjOTA5Mzk5O1xcbn1cXG4uZWwtdGFnLmVsLXRhZy0taW5mbyAuZWwtdGFnX19jbG9zZTpob3ZlciB7XFxuICBjb2xvcjogI0ZGRjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM5MDkzOTk7XFxufVxcbi5lbC10YWcuZWwtdGFnLS1zdWNjZXNzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGY5ZWI7XFxuICBib3JkZXItY29sb3I6ICNlMWYzZDg7XFxuICBjb2xvcjogIzY3YzIzYTtcXG59XFxuLmVsLXRhZy5lbC10YWctLXN1Y2Nlc3MuaXMtaGl0IHtcXG4gIGJvcmRlci1jb2xvcjogIzY3QzIzQTtcXG59XFxuLmVsLXRhZy5lbC10YWctLXN1Y2Nlc3MgLmVsLXRhZ19fY2xvc2Uge1xcbiAgY29sb3I6ICM2N2MyM2E7XFxufVxcbi5lbC10YWcuZWwtdGFnLS1zdWNjZXNzIC5lbC10YWdfX2Nsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY3YzIzYTtcXG59XFxuLmVsLXRhZy5lbC10YWctLXdhcm5pbmcge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZkZjZlYztcXG4gIGJvcmRlci1jb2xvcjogI2ZhZWNkODtcXG4gIGNvbG9yOiAjZTZhMjNjO1xcbn1cXG4uZWwtdGFnLmVsLXRhZy0td2FybmluZy5pcy1oaXQge1xcbiAgYm9yZGVyLWNvbG9yOiAjRTZBMjNDO1xcbn1cXG4uZWwtdGFnLmVsLXRhZy0td2FybmluZyAuZWwtdGFnX19jbG9zZSB7XFxuICBjb2xvcjogI2U2YTIzYztcXG59XFxuLmVsLXRhZy5lbC10YWctLXdhcm5pbmcgLmVsLXRhZ19fY2xvc2U6aG92ZXIge1xcbiAgY29sb3I6ICNGRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZhMjNjO1xcbn1cXG4uZWwtdGFnLmVsLXRhZy0tZGFuZ2VyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZWYwZjA7XFxuICBib3JkZXItY29sb3I6ICNmZGUyZTI7XFxuICBjb2xvcjogI2Y1NmM2YztcXG59XFxuLmVsLXRhZy5lbC10YWctLWRhbmdlci5pcy1oaXQge1xcbiAgYm9yZGVyLWNvbG9yOiAjRjU2QzZDO1xcbn1cXG4uZWwtdGFnLmVsLXRhZy0tZGFuZ2VyIC5lbC10YWdfX2Nsb3NlIHtcXG4gIGNvbG9yOiAjZjU2YzZjO1xcbn1cXG4uZWwtdGFnLmVsLXRhZy0tZGFuZ2VyIC5lbC10YWdfX2Nsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1NmM2YztcXG59XFxuLmVsLXRhZyAuZWwtaWNvbi1jbG9zZSB7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBmb250LXNpemU6IDEycHg7XFxuICBoZWlnaHQ6IDE2cHg7XFxuICB3aWR0aDogMTZweDtcXG4gIGxpbmUtaGVpZ2h0OiAxNnB4O1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gIHRvcDogLTFweDtcXG4gIHJpZ2h0OiAtNXB4O1xcbn1cXG4uZWwtdGFnIC5lbC1pY29uLWNsb3NlOjpiZWZvcmUge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcbi5lbC10YWctLWRhcmsge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQwOWVmZjtcXG4gIGJvcmRlci1jb2xvcjogIzQwOWVmZjtcXG4gIGNvbG9yOiAjZmZmO1xcbn1cXG4uZWwtdGFnLS1kYXJrLmlzLWhpdCB7XFxuICBib3JkZXItY29sb3I6ICM0MDlFRkY7XFxufVxcbi5lbC10YWctLWRhcmsgLmVsLXRhZ19fY2xvc2Uge1xcbiAgY29sb3I6ICNmZmY7XFxufVxcbi5lbC10YWctLWRhcmsgLmVsLXRhZ19fY2xvc2U6aG92ZXIge1xcbiAgY29sb3I6ICNGRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjZiMWZmO1xcbn1cXG4uZWwtdGFnLS1kYXJrLmVsLXRhZy0taW5mbyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTA5Mzk5O1xcbiAgYm9yZGVyLWNvbG9yOiAjOTA5Mzk5O1xcbiAgY29sb3I6ICNmZmY7XFxufVxcbi5lbC10YWctLWRhcmsuZWwtdGFnLS1pbmZvLmlzLWhpdCB7XFxuICBib3JkZXItY29sb3I6ICM5MDkzOTk7XFxufVxcbi5lbC10YWctLWRhcmsuZWwtdGFnLS1pbmZvIC5lbC10YWdfX2Nsb3NlIHtcXG4gIGNvbG9yOiAjZmZmO1xcbn1cXG4uZWwtdGFnLS1kYXJrLmVsLXRhZy0taW5mbyAuZWwtdGFnX19jbG9zZTpob3ZlciB7XFxuICBjb2xvcjogI0ZGRjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNhNmE5YWQ7XFxufVxcbi5lbC10YWctLWRhcmsuZWwtdGFnLS1zdWNjZXNzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM2N2MyM2E7XFxuICBib3JkZXItY29sb3I6ICM2N2MyM2E7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuLmVsLXRhZy0tZGFyay5lbC10YWctLXN1Y2Nlc3MuaXMtaGl0IHtcXG4gIGJvcmRlci1jb2xvcjogIzY3QzIzQTtcXG59XFxuLmVsLXRhZy0tZGFyay5lbC10YWctLXN1Y2Nlc3MgLmVsLXRhZ19fY2xvc2Uge1xcbiAgY29sb3I6ICNmZmY7XFxufVxcbi5lbC10YWctLWRhcmsuZWwtdGFnLS1zdWNjZXNzIC5lbC10YWdfX2Nsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzg1Y2U2MTtcXG59XFxuLmVsLXRhZy0tZGFyay5lbC10YWctLXdhcm5pbmcge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2YTIzYztcXG4gIGJvcmRlci1jb2xvcjogI2U2YTIzYztcXG4gIGNvbG9yOiAjZmZmO1xcbn1cXG4uZWwtdGFnLS1kYXJrLmVsLXRhZy0td2FybmluZy5pcy1oaXQge1xcbiAgYm9yZGVyLWNvbG9yOiAjRTZBMjNDO1xcbn1cXG4uZWwtdGFnLS1kYXJrLmVsLXRhZy0td2FybmluZyAuZWwtdGFnX19jbG9zZSB7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuLmVsLXRhZy0tZGFyay5lbC10YWctLXdhcm5pbmcgLmVsLXRhZ19fY2xvc2U6aG92ZXIge1xcbiAgY29sb3I6ICNGRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWJiNTYzO1xcbn1cXG4uZWwtdGFnLS1kYXJrLmVsLXRhZy0tZGFuZ2VyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNTZjNmM7XFxuICBib3JkZXItY29sb3I6ICNmNTZjNmM7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuLmVsLXRhZy0tZGFyay5lbC10YWctLWRhbmdlci5pcy1oaXQge1xcbiAgYm9yZGVyLWNvbG9yOiAjRjU2QzZDO1xcbn1cXG4uZWwtdGFnLS1kYXJrLmVsLXRhZy0tZGFuZ2VyIC5lbC10YWdfX2Nsb3NlIHtcXG4gIGNvbG9yOiAjZmZmO1xcbn1cXG4uZWwtdGFnLS1kYXJrLmVsLXRhZy0tZGFuZ2VyIC5lbC10YWdfX2Nsb3NlOmhvdmVyIHtcXG4gIGNvbG9yOiAjRkZGO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ODk4OTtcXG59XFxuLmVsLXRhZy0tcGxhaW4ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIGJvcmRlci1jb2xvcjogI2IzZDhmZjtcXG4gIGNvbG9yOiAjNDA5ZWZmO1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5pcy1oaXQge1xcbiAgYm9yZGVyLWNvbG9yOiAjNDA5RUZGO1xcbn1cXG4uZWwtdGFnLS1wbGFpbiAuZWwtdGFnX19jbG9zZSB7XFxuICBjb2xvcjogIzQwOWVmZjtcXG59XFxuLmVsLXRhZy0tcGxhaW4gLmVsLXRhZ19fY2xvc2U6aG92ZXIge1xcbiAgY29sb3I6ICNGRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDA5ZWZmO1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLWluZm8ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIGJvcmRlci1jb2xvcjogI2QzZDRkNjtcXG4gIGNvbG9yOiAjOTA5Mzk5O1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLWluZm8uaXMtaGl0IHtcXG4gIGJvcmRlci1jb2xvcjogIzkwOTM5OTtcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS1pbmZvIC5lbC10YWdfX2Nsb3NlIHtcXG4gIGNvbG9yOiAjOTA5Mzk5O1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLWluZm8gLmVsLXRhZ19fY2xvc2U6aG92ZXIge1xcbiAgY29sb3I6ICNGRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTA5Mzk5O1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLXN1Y2Nlc3Mge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIGJvcmRlci1jb2xvcjogI2MyZTdiMDtcXG4gIGNvbG9yOiAjNjdjMjNhO1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLXN1Y2Nlc3MuaXMtaGl0IHtcXG4gIGJvcmRlci1jb2xvcjogIzY3QzIzQTtcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS1zdWNjZXNzIC5lbC10YWdfX2Nsb3NlIHtcXG4gIGNvbG9yOiAjNjdjMjNhO1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLXN1Y2Nlc3MgLmVsLXRhZ19fY2xvc2U6aG92ZXIge1xcbiAgY29sb3I6ICNGRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjdjMjNhO1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLXdhcm5pbmcge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIGJvcmRlci1jb2xvcjogI2Y1ZGFiMTtcXG4gIGNvbG9yOiAjZTZhMjNjO1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLXdhcm5pbmcuaXMtaGl0IHtcXG4gIGJvcmRlci1jb2xvcjogI0U2QTIzQztcXG59XFxuLmVsLXRhZy0tcGxhaW4uZWwtdGFnLS13YXJuaW5nIC5lbC10YWdfX2Nsb3NlIHtcXG4gIGNvbG9yOiAjZTZhMjNjO1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLXdhcm5pbmcgLmVsLXRhZ19fY2xvc2U6aG92ZXIge1xcbiAgY29sb3I6ICNGRkY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZhMjNjO1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLWRhbmdlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgYm9yZGVyLWNvbG9yOiAjZmJjNGM0O1xcbiAgY29sb3I6ICNmNTZjNmM7XFxufVxcbi5lbC10YWctLXBsYWluLmVsLXRhZy0tZGFuZ2VyLmlzLWhpdCB7XFxuICBib3JkZXItY29sb3I6ICNGNTZDNkM7XFxufVxcbi5lbC10YWctLXBsYWluLmVsLXRhZy0tZGFuZ2VyIC5lbC10YWdfX2Nsb3NlIHtcXG4gIGNvbG9yOiAjZjU2YzZjO1xcbn1cXG4uZWwtdGFnLS1wbGFpbi5lbC10YWctLWRhbmdlciAuZWwtdGFnX19jbG9zZTpob3ZlciB7XFxuICBjb2xvcjogI0ZGRjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNTZjNmM7XFxufVxcbi5lbC10YWctLW1lZGl1bSB7XFxuICBoZWlnaHQ6IDI4cHg7XFxuICBsaW5lLWhlaWdodDogMjZweDtcXG59XFxuLmVsLXRhZy0tbWVkaXVtIC5lbC1pY29uLWNsb3NlIHtcXG4gIHRyYW5zZm9ybTogc2NhbGUoMC44KTtcXG59XFxuLmVsLXRhZy0tc21hbGwge1xcbiAgaGVpZ2h0OiAyNHB4O1xcbiAgcGFkZGluZzogMCA4cHg7XFxuICBsaW5lLWhlaWdodDogMjJweDtcXG59XFxuLmVsLXRhZy0tc21hbGwgLmVsLWljb24tY2xvc2Uge1xcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLjgpO1xcbn1cXG4uZWwtdGFnLS1taW5pIHtcXG4gIGhlaWdodDogMjBweDtcXG4gIHBhZGRpbmc6IDAgNXB4O1xcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XFxufVxcbi5lbC10YWctLW1pbmkgLmVsLWljb24tY2xvc2Uge1xcbiAgbWFyZ2luLWxlZnQ6IC0zcHg7XFxuICB0cmFuc2Zvcm06IHNjYWxlKDAuNyk7XFxufVxcbi5lbC10b29sdGlwOmZvY3VzOmhvdmVyLFxcbi5lbC10b29sdGlwOmZvY3VzOm5vdCguZm9jdXNpbmcpIHtcXG4gIG91dGxpbmUtd2lkdGg6IDA7XFxufVxcbi5lbC10b29sdGlwX19wb3BwZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcGFkZGluZzogMTBweDtcXG4gIHotaW5kZXg6IDIwMDA7XFxuICBsaW5lLWhlaWdodDogMS4yO1xcbiAgbWluLXdpZHRoOiAxMHB4O1xcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xcbn1cXG4uZWwtdG9vbHRpcF9fcG9wcGVyIC5wb3BwZXJfX2Fycm93LFxcbi5lbC10b29sdGlwX19wb3BwZXIgLnBvcHBlcl9fYXJyb3c6OmFmdGVyIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgd2lkdGg6IDA7XFxuICBoZWlnaHQ6IDA7XFxuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcXG59XFxuLmVsLXRvb2x0aXBfX3BvcHBlciAucG9wcGVyX19hcnJvdyB7XFxuICBib3JkZXItd2lkdGg6IDZweDtcXG59XFxuLmVsLXRvb2x0aXBfX3BvcHBlciAucG9wcGVyX19hcnJvdzo6YWZ0ZXIge1xcbiAgY29udGVudDogXFxcIiBcXFwiO1xcbiAgYm9yZGVyLXdpZHRoOiA1cHg7XFxufVxcbi5lbC10b29sdGlwX19wb3BwZXJbeC1wbGFjZW1lbnRePXRvcF0ge1xcbiAgbWFyZ2luLWJvdHRvbTogMTJweDtcXG59XFxuLmVsLXRvb2x0aXBfX3BvcHBlclt4LXBsYWNlbWVudF49dG9wXSAucG9wcGVyX19hcnJvdyB7XFxuICBib3R0b206IC02cHg7XFxuICBib3JkZXItdG9wLWNvbG9yOiAjMzAzMTMzO1xcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcXG59XFxuLmVsLXRvb2x0aXBfX3BvcHBlclt4LXBsYWNlbWVudF49dG9wXSAucG9wcGVyX19hcnJvdzo6YWZ0ZXIge1xcbiAgYm90dG9tOiAxcHg7XFxuICBtYXJnaW4tbGVmdDogLTVweDtcXG4gIGJvcmRlci10b3AtY29sb3I6ICMzMDMxMzM7XFxuICBib3JkZXItYm90dG9tLXdpZHRoOiAwO1xcbn1cXG4uZWwtdG9vbHRpcF9fcG9wcGVyW3gtcGxhY2VtZW50Xj1ib3R0b21dIHtcXG4gIG1hcmdpbi10b3A6IDEycHg7XFxufVxcbi5lbC10b29sdGlwX19wb3BwZXJbeC1wbGFjZW1lbnRePWJvdHRvbV0gLnBvcHBlcl9fYXJyb3cge1xcbiAgdG9wOiAtNnB4O1xcbiAgYm9yZGVyLXRvcC13aWR0aDogMDtcXG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICMzMDMxMzM7XFxufVxcbi5lbC10b29sdGlwX19wb3BwZXJbeC1wbGFjZW1lbnRePWJvdHRvbV0gLnBvcHBlcl9fYXJyb3c6OmFmdGVyIHtcXG4gIHRvcDogMXB4O1xcbiAgbWFyZ2luLWxlZnQ6IC01cHg7XFxuICBib3JkZXItdG9wLXdpZHRoOiAwO1xcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzMwMzEzMztcXG59XFxuLmVsLXRvb2x0aXBfX3BvcHBlclt4LXBsYWNlbWVudF49cmlnaHRdIHtcXG4gIG1hcmdpbi1sZWZ0OiAxMnB4O1xcbn1cXG4uZWwtdG9vbHRpcF9fcG9wcGVyW3gtcGxhY2VtZW50Xj1yaWdodF0gLnBvcHBlcl9fYXJyb3cge1xcbiAgbGVmdDogLTZweDtcXG4gIGJvcmRlci1yaWdodC1jb2xvcjogIzMwMzEzMztcXG4gIGJvcmRlci1sZWZ0LXdpZHRoOiAwO1xcbn1cXG4uZWwtdG9vbHRpcF9fcG9wcGVyW3gtcGxhY2VtZW50Xj1yaWdodF0gLnBvcHBlcl9fYXJyb3c6OmFmdGVyIHtcXG4gIGJvdHRvbTogLTVweDtcXG4gIGxlZnQ6IDFweDtcXG4gIGJvcmRlci1yaWdodC1jb2xvcjogIzMwMzEzMztcXG4gIGJvcmRlci1sZWZ0LXdpZHRoOiAwO1xcbn1cXG4uZWwtdG9vbHRpcF9fcG9wcGVyW3gtcGxhY2VtZW50Xj1sZWZ0XSB7XFxuICBtYXJnaW4tcmlnaHQ6IDEycHg7XFxufVxcbi5lbC10b29sdGlwX19wb3BwZXJbeC1wbGFjZW1lbnRePWxlZnRdIC5wb3BwZXJfX2Fycm93IHtcXG4gIHJpZ2h0OiAtNnB4O1xcbiAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAwO1xcbiAgYm9yZGVyLWxlZnQtY29sb3I6ICMzMDMxMzM7XFxufVxcbi5lbC10b29sdGlwX19wb3BwZXJbeC1wbGFjZW1lbnRePWxlZnRdIC5wb3BwZXJfX2Fycm93OjphZnRlciB7XFxuICByaWdodDogMXB4O1xcbiAgYm90dG9tOiAtNXB4O1xcbiAgbWFyZ2luLWxlZnQ6IC01cHg7XFxuICBib3JkZXItcmlnaHQtd2lkdGg6IDA7XFxuICBib3JkZXItbGVmdC1jb2xvcjogIzMwMzEzMztcXG59XFxuLmVsLXRvb2x0aXBfX3BvcHBlci5pcy1kYXJrIHtcXG4gIGJhY2tncm91bmQ6ICMzMDMxMzM7XFxuICBjb2xvcjogI0ZGRjtcXG59XFxuLmVsLXRhYmxlLFxcbi5lbC10YWJsZV9fZXhwYW5kZWQtY2VsbCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xcbn1cXG4uZWwtdG9vbHRpcF9fcG9wcGVyLmlzLWxpZ2h0IHtcXG4gIGJhY2tncm91bmQ6ICNGRkY7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjMzAzMTMzO1xcbn1cXG4uZWwtdG9vbHRpcF9fcG9wcGVyLmlzLWxpZ2h0W3gtcGxhY2VtZW50Xj10b3BdIC5wb3BwZXJfX2Fycm93IHtcXG4gIGJvcmRlci10b3AtY29sb3I6ICMzMDMxMzM7XFxufVxcbi5lbC10b29sdGlwX19wb3BwZXIuaXMtbGlnaHRbeC1wbGFjZW1lbnRePXRvcF0gLnBvcHBlcl9fYXJyb3c6OmFmdGVyIHtcXG4gIGJvcmRlci10b3AtY29sb3I6ICNGRkY7XFxufVxcbi5lbC10b29sdGlwX19wb3BwZXIuaXMtbGlnaHRbeC1wbGFjZW1lbnRePWJvdHRvbV0gLnBvcHBlcl9fYXJyb3cge1xcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzMwMzEzMztcXG59XFxuLmVsLXRvb2x0aXBfX3BvcHBlci5pcy1saWdodFt4LXBsYWNlbWVudF49Ym90dG9tXSAucG9wcGVyX19hcnJvdzo6YWZ0ZXIge1xcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI0ZGRjtcXG59XFxuLmVsLXRvb2x0aXBfX3BvcHBlci5pcy1saWdodFt4LXBsYWNlbWVudF49bGVmdF0gLnBvcHBlcl9fYXJyb3cge1xcbiAgYm9yZGVyLWxlZnQtY29sb3I6ICMzMDMxMzM7XFxufVxcbi5lbC10b29sdGlwX19wb3BwZXIuaXMtbGlnaHRbeC1wbGFjZW1lbnRePWxlZnRdIC5wb3BwZXJfX2Fycm93OjphZnRlciB7XFxuICBib3JkZXItbGVmdC1jb2xvcjogI0ZGRjtcXG59XFxuLmVsLXRvb2x0aXBfX3BvcHBlci5pcy1saWdodFt4LXBsYWNlbWVudF49cmlnaHRdIC5wb3BwZXJfX2Fycm93IHtcXG4gIGJvcmRlci1yaWdodC1jb2xvcjogIzMwMzEzMztcXG59XFxuLmVsLXRvb2x0aXBfX3BvcHBlci5pcy1saWdodFt4LXBsYWNlbWVudF49cmlnaHRdIC5wb3BwZXJfX2Fycm93OjphZnRlciB7XFxuICBib3JkZXItcmlnaHQtY29sb3I6ICNGRkY7XFxufVxcbi5lbC10YWJsZSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGZsZXg6IDE7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1heC13aWR0aDogMTAwJTtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGNvbG9yOiAjNjA2MjY2O1xcbn1cXG4uZWwtdGFibGVfX2VtcHR5LWJsb2NrIHtcXG4gIG1pbi1oZWlnaHQ6IDYwcHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5lbC10YWJsZV9fZW1wdHktdGV4dCB7XFxuICBsaW5lLWhlaWdodDogNjBweDtcXG4gIHdpZHRoOiA1MCU7XFxuICBjb2xvcjogIzkwOTM5OTtcXG59XFxuLmVsLXRhYmxlX19leHBhbmQtY29sdW1uIC5jZWxsIHtcXG4gIHBhZGRpbmc6IDA7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcbi5lbC10YWJsZV9fZXhwYW5kLWljb24ge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgY29sb3I6ICM2NjY7XFxuICBmb250LXNpemU6IDEycHg7XFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dDtcXG4gIGhlaWdodDogMjBweDtcXG59XFxuLmVsLXRhYmxlX19leHBhbmQtaWNvbi0tZXhwYW5kZWQge1xcbiAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xcbn1cXG4uZWwtdGFibGVfX2V4cGFuZC1pY29uID4gLmVsLWljb24ge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgbGVmdDogNTAlO1xcbiAgdG9wOiA1MCU7XFxuICBtYXJnaW4tbGVmdDogLTVweDtcXG4gIG1hcmdpbi10b3A6IC01cHg7XFxufVxcbi5lbC10YWJsZV9fZXhwYW5kZWQtY2VsbFtjbGFzcyo9Y2VsbF0ge1xcbiAgcGFkZGluZzogMjBweCA1MHB4O1xcbn1cXG4uZWwtdGFibGVfX2V4cGFuZGVkLWNlbGw6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcXG59XFxuLmVsLXRhYmxlX19wbGFjZWhvbGRlciB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICB3aWR0aDogMjBweDtcXG59XFxuLmVsLXRhYmxlX19hcHBlbmQtd3JhcHBlciB7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG4uZWwtdGFibGUtLWZpdCB7XFxuICBib3JkZXItcmlnaHQ6IDA7XFxuICBib3JkZXItYm90dG9tOiAwO1xcbn1cXG4uZWwtdGFibGUtLWZpdCAuZWwtdGFibGVfX2NlbGwuZ3V0dGVyIHtcXG4gIGJvcmRlci1yaWdodC13aWR0aDogMXB4O1xcbn1cXG4uZWwtdGFibGUtLXNjcm9sbGFibGUteCAuZWwtdGFibGVfX2JvZHktd3JhcHBlciB7XFxuICBvdmVyZmxvdy14OiBhdXRvO1xcbn1cXG4uZWwtdGFibGUtLXNjcm9sbGFibGUteSAuZWwtdGFibGVfX2JvZHktd3JhcHBlciB7XFxuICBvdmVyZmxvdy15OiBhdXRvO1xcbn1cXG4uZWwtdGFibGUgdGhlYWQge1xcbiAgY29sb3I6ICM5MDkzOTk7XFxuICBmb250LXdlaWdodDogNTAwO1xcbn1cXG4uZWwtdGFibGUgdGhlYWQuaXMtZ3JvdXAgdGguZWwtdGFibGVfX2NlbGwge1xcbiAgYmFja2dyb3VuZDogI0Y1RjdGQTtcXG59XFxuLmVsLXRhYmxlIC5lbC10YWJsZV9fY2VsbCB7XFxuICBwYWRkaW5nOiAxMnB4IDA7XFxuICBtaW4td2lkdGg6IDA7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgdGV4dC1hbGlnbjogbGVmdDtcXG59XFxuLmVsLXRhYmxlIC5lbC10YWJsZV9fY2VsbC5pcy1jZW50ZXIge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG4uZWwtdGFibGUgLmVsLXRhYmxlX19jZWxsLmlzLXJpZ2h0IHtcXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xcbn1cXG4uZWwtdGFibGUgLmVsLXRhYmxlX19jZWxsLmd1dHRlciB7XFxuICB3aWR0aDogMTVweDtcXG4gIGJvcmRlci1yaWdodC13aWR0aDogMDtcXG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDA7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG4uZWwtdGFibGUgLmVsLXRhYmxlX19jZWxsLmlzLWhpZGRlbiA+ICoge1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbn1cXG4uZWwtdGFibGUtLW1lZGl1bSAuZWwtdGFibGVfX2NlbGwge1xcbiAgcGFkZGluZzogMTBweCAwO1xcbn1cXG4uZWwtdGFibGUtLXNtYWxsIHtcXG4gIGZvbnQtc2l6ZTogMTJweDtcXG59XFxuLmVsLXRhYmxlLS1zbWFsbCAuZWwtdGFibGVfX2NlbGwge1xcbiAgcGFkZGluZzogOHB4IDA7XFxufVxcbi5lbC10YWJsZS0tbWluaSB7XFxuICBmb250LXNpemU6IDEycHg7XFxufVxcbi5lbC10YWJsZS0tbWluaSAuZWwtdGFibGVfX2NlbGwge1xcbiAgcGFkZGluZzogNnB4IDA7XFxufVxcbi5lbC10YWJsZSB0ciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xcbn1cXG4uZWwtdGFibGUgdHIgaW5wdXRbdHlwZT1jaGVja2JveF0ge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG4uZWwtdGFibGUgdGQuZWwtdGFibGVfX2NlbGwsXFxuLmVsLXRhYmxlIHRoLmVsLXRhYmxlX19jZWxsLmlzLWxlYWYge1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNFQkVFRjU7XFxufVxcbi5lbC10YWJsZSB0aC5lbC10YWJsZV9fY2VsbC5pcy1zb3J0YWJsZSB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbi5lbC10YWJsZSB0aC5lbC10YWJsZV9fY2VsbCB7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcXG59XFxuLmVsLXRhYmxlIHRoLmVsLXRhYmxlX19jZWxsID4gLmNlbGwge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICBwYWRkaW5nLWxlZnQ6IDEwcHg7XFxuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcbi5lbC10YWJsZSB0aC5lbC10YWJsZV9fY2VsbCA+IC5jZWxsLmhpZ2hsaWdodCB7XFxuICBjb2xvcjogIzQwOUVGRjtcXG59XFxuLmVsLXRhYmxlIHRoLmVsLXRhYmxlX19jZWxsLnJlcXVpcmVkID4gZGl2OjpiZWZvcmUge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICB3aWR0aDogOHB4O1xcbiAgaGVpZ2h0OiA4cHg7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBiYWNrZ3JvdW5kOiAjZmY0ZDUxO1xcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbn1cXG4uZWwtdGFibGUgdGQuZWwtdGFibGVfX2NlbGwgZGl2IHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcbi5lbC10YWJsZSB0ZC5lbC10YWJsZV9fY2VsbC5ndXR0ZXIge1xcbiAgd2lkdGg6IDA7XFxufVxcbi5lbC10YWJsZSAuY2VsbCB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcXG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcXG4gIGxpbmUtaGVpZ2h0OiAyM3B4O1xcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xcbiAgcGFkZGluZy1yaWdodDogMTBweDtcXG59XFxuLmVsLXRhYmxlIC5jZWxsLmVsLXRvb2x0aXAge1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gIG1pbi13aWR0aDogNTBweDtcXG59XFxuLmVsLXRhYmxlLS1ib3JkZXIsXFxuLmVsLXRhYmxlLS1ncm91cCB7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjRUJFRUY1O1xcbn1cXG4uZWwtdGFibGUtLWJvcmRlcjo6YWZ0ZXIsXFxuLmVsLXRhYmxlLS1ncm91cDo6YWZ0ZXIsXFxuLmVsLXRhYmxlOjpiZWZvcmUge1xcbiAgY29udGVudDogJyc7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFRUY1O1xcbiAgei1pbmRleDogMTtcXG59XFxuLmVsLXRhYmxlLS1ib3JkZXI6OmFmdGVyLFxcbi5lbC10YWJsZS0tZ3JvdXA6OmFmdGVyIHtcXG4gIHRvcDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgd2lkdGg6IDFweDtcXG4gIGhlaWdodDogMTAwJTtcXG59XFxuLmVsLXRhYmxlOjpiZWZvcmUge1xcbiAgbGVmdDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxcHg7XFxufVxcbi5lbC10YWJsZS0tYm9yZGVyIHtcXG4gIGJvcmRlci1yaWdodDogbm9uZTtcXG4gIGJvcmRlci1ib3R0b206IG5vbmU7XFxufVxcbi5lbC10YWJsZS0tYm9yZGVyLmVsLWxvYWRpbmctcGFyZW50LS1yZWxhdGl2ZSB7XFxuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG4uZWwtdGFibGUtLWJvcmRlciAuZWwtdGFibGVfX2NlbGwsXFxuLmVsLXRhYmxlX19ib2R5LXdyYXBwZXIgLmVsLXRhYmxlLS1ib3JkZXIuaXMtc2Nyb2xsaW5nLWxlZnQgfiAuZWwtdGFibGVfX2ZpeGVkIHtcXG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNFQkVFRjU7XFxufVxcbi5lbC10YWJsZS0tYm9yZGVyIC5lbC10YWJsZV9fY2VsbDpmaXJzdC1jaGlsZCAuY2VsbCB7XFxuICBwYWRkaW5nLWxlZnQ6IDEwcHg7XFxufVxcbi5lbC10YWJsZS0tYm9yZGVyIHRoLmVsLXRhYmxlX19jZWxsLmd1dHRlcjpsYXN0LW9mLXR5cGUge1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNFQkVFRjU7XFxuICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7XFxufVxcbi5lbC10YWJsZS0tYm9yZGVyIHRoLmVsLXRhYmxlX19jZWxsLFxcbi5lbC10YWJsZV9fZml4ZWQtcmlnaHQtcGF0Y2gge1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNFQkVFRjU7XFxufVxcbi5lbC10YWJsZS0taGlkZGVuIHtcXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcXG59XFxuLmVsLXRhYmxlX19maXhlZCxcXG4uZWwtdGFibGVfX2ZpeGVkLXJpZ2h0IHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICBvdmVyZmxvdy14OiBoaWRkZW47XFxuICBvdmVyZmxvdy15OiBoaWRkZW47XFxuICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xcbn1cXG4uZWwtdGFibGVfX2ZpeGVkLXJpZ2h0OjpiZWZvcmUsXFxuLmVsLXRhYmxlX19maXhlZDo6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6ICcnO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgbGVmdDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxcHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJFRUY1O1xcbiAgei1pbmRleDogNDtcXG59XFxuLmVsLXRhYmxlX19maXhlZC1yaWdodC1wYXRjaCB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IC0xcHg7XFxuICByaWdodDogMDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XFxufVxcbi5lbC10YWJsZV9fZml4ZWQtcmlnaHQge1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogYXV0bztcXG4gIHJpZ2h0OiAwO1xcbn1cXG4uZWwtdGFibGVfX2ZpeGVkLXJpZ2h0IC5lbC10YWJsZV9fZml4ZWQtYm9keS13cmFwcGVyLFxcbi5lbC10YWJsZV9fZml4ZWQtcmlnaHQgLmVsLXRhYmxlX19maXhlZC1mb290ZXItd3JhcHBlcixcXG4uZWwtdGFibGVfX2ZpeGVkLXJpZ2h0IC5lbC10YWJsZV9fZml4ZWQtaGVhZGVyLXdyYXBwZXIge1xcbiAgbGVmdDogYXV0bztcXG4gIHJpZ2h0OiAwO1xcbn1cXG4uZWwtdGFibGVfX2ZpeGVkLWhlYWRlci13cmFwcGVyIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDA7XFxuICB0b3A6IDA7XFxuICB6LWluZGV4OiAzO1xcbn1cXG4uZWwtdGFibGVfX2ZpeGVkLWZvb3Rlci13cmFwcGVyIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDA7XFxuICBib3R0b206IDA7XFxuICB6LWluZGV4OiAzO1xcbn1cXG4uZWwtdGFibGVfX2ZpeGVkLWZvb3Rlci13cmFwcGVyIHRib2R5IHRkLmVsLXRhYmxlX19jZWxsIHtcXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjRUJFRUY1O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0Y1RjdGQTtcXG4gIGNvbG9yOiAjNjA2MjY2O1xcbn1cXG4uZWwtdGFibGVfX2ZpeGVkLWJvZHktd3JhcHBlciB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBsZWZ0OiAwO1xcbiAgdG9wOiAzN3B4O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHotaW5kZXg6IDM7XFxufVxcbi5lbC10YWJsZV9fYm9keS13cmFwcGVyLFxcbi5lbC10YWJsZV9fZm9vdGVyLXdyYXBwZXIsXFxuLmVsLXRhYmxlX19oZWFkZXItd3JhcHBlciB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuLmVsLXRhYmxlX19mb290ZXItd3JhcHBlciB7XFxuICBtYXJnaW4tdG9wOiAtMXB4O1xcbn1cXG4uZWwtdGFibGVfX2Zvb3Rlci13cmFwcGVyIHRkLmVsLXRhYmxlX19jZWxsIHtcXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjRUJFRUY1O1xcbn1cXG4uZWwtdGFibGVfX2JvZHksXFxuLmVsLXRhYmxlX19mb290ZXIsXFxuLmVsLXRhYmxlX19oZWFkZXIge1xcbiAgdGFibGUtbGF5b3V0OiBmaXhlZDtcXG4gIGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7XFxufVxcbi5lbC10YWJsZV9fZm9vdGVyLXdyYXBwZXIsXFxuLmVsLXRhYmxlX19oZWFkZXItd3JhcHBlciB7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG4uZWwtdGFibGVfX2Zvb3Rlci13cmFwcGVyIHRib2R5IHRkLmVsLXRhYmxlX19jZWxsLFxcbi5lbC10YWJsZV9faGVhZGVyLXdyYXBwZXIgdGJvZHkgdGQuZWwtdGFibGVfX2NlbGwge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0Y1RjdGQTtcXG4gIGNvbG9yOiAjNjA2MjY2O1xcbn1cXG4uZWwtdGFibGVfX2JvZHktd3JhcHBlciB7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG4uZWwtdGFibGVfX2JvZHktd3JhcHBlci5pcy1zY3JvbGxpbmctbGVmdCB+IC5lbC10YWJsZV9fZml4ZWQsXFxuLmVsLXRhYmxlX19ib2R5LXdyYXBwZXIuaXMtc2Nyb2xsaW5nLW5vbmUgfiAuZWwtdGFibGVfX2ZpeGVkLFxcbi5lbC10YWJsZV9fYm9keS13cmFwcGVyLmlzLXNjcm9sbGluZy1ub25lIH4gLmVsLXRhYmxlX19maXhlZC1yaWdodCxcXG4uZWwtdGFibGVfX2JvZHktd3JhcHBlci5pcy1zY3JvbGxpbmctcmlnaHQgfiAuZWwtdGFibGVfX2ZpeGVkLXJpZ2h0IHtcXG4gIGJveC1zaGFkb3c6IG5vbmU7XFxufVxcbi5lbC10YWJsZV9fYm9keS13cmFwcGVyIC5lbC10YWJsZS0tYm9yZGVyLmlzLXNjcm9sbGluZy1yaWdodCB+IC5lbC10YWJsZV9fZml4ZWQtcmlnaHQge1xcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjRUJFRUY1O1xcbn1cXG4uZWwtdGFibGUgLmNhcmV0LXdyYXBwZXIge1xcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGhlaWdodDogMzRweDtcXG4gIHdpZHRoOiAyNHB4O1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIG92ZXJmbG93OiBpbml0aWFsO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG4uZWwtdGFibGUgLnNvcnQtY2FyZXQge1xcbiAgd2lkdGg6IDA7XFxuICBoZWlnaHQ6IDA7XFxuICBib3JkZXI6IDVweCBzb2xpZCB0cmFuc3BhcmVudDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDdweDtcXG59XFxuLmVsLXRhYmxlIC5zb3J0LWNhcmV0LmFzY2VuZGluZyB7XFxuICBib3JkZXItYm90dG9tLWNvbG9yOiAjQzBDNENDO1xcbiAgdG9wOiA1cHg7XFxufVxcbi5lbC10YWJsZSAuc29ydC1jYXJldC5kZXNjZW5kaW5nIHtcXG4gIGJvcmRlci10b3AtY29sb3I6ICNDMEM0Q0M7XFxuICBib3R0b206IDdweDtcXG59XFxuLmVsLXRhYmxlIC5hc2NlbmRpbmcgLnNvcnQtY2FyZXQuYXNjZW5kaW5nIHtcXG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICM0MDlFRkY7XFxufVxcbi5lbC10YWJsZSAuZGVzY2VuZGluZyAuc29ydC1jYXJldC5kZXNjZW5kaW5nIHtcXG4gIGJvcmRlci10b3AtY29sb3I6ICM0MDlFRkY7XFxufVxcbi5lbC10YWJsZSAuaGlkZGVuLWNvbHVtbnMge1xcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgei1pbmRleDogLTE7XFxufVxcbi5lbC10YWJsZS0tc3RyaXBlZCAuZWwtdGFibGVfX2JvZHkgdHIuZWwtdGFibGVfX3Jvdy0tc3RyaXBlZCB0ZC5lbC10YWJsZV9fY2VsbCB7XFxuICBiYWNrZ3JvdW5kOiAjRkFGQUZBO1xcbn1cXG4uZWwtdGFibGUtLXN0cmlwZWQgLmVsLXRhYmxlX19ib2R5IHRyLmVsLXRhYmxlX19yb3ctLXN0cmlwZWQuY3VycmVudC1yb3cgdGQuZWwtdGFibGVfX2NlbGwsXFxuLmVsLXRhYmxlLS1zdHJpcGVkIC5lbC10YWJsZV9fYm9keSB0ci5lbC10YWJsZV9fcm93LS1zdHJpcGVkLnNlbGVjdGlvbi1yb3cgdGQuZWwtdGFibGVfX2NlbGwge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZjVmZjtcXG59XFxuLmVsLXRhYmxlX19ib2R5IHRyLmhvdmVyLXJvdy5jdXJyZW50LXJvdyA+IHRkLmVsLXRhYmxlX19jZWxsLFxcbi5lbC10YWJsZV9fYm9keSB0ci5ob3Zlci1yb3cuZWwtdGFibGVfX3Jvdy0tc3RyaXBlZC5jdXJyZW50LXJvdyA+IHRkLmVsLXRhYmxlX19jZWxsLFxcbi5lbC10YWJsZV9fYm9keSB0ci5ob3Zlci1yb3cuZWwtdGFibGVfX3Jvdy0tc3RyaXBlZC5zZWxlY3Rpb24tcm93ID4gdGQuZWwtdGFibGVfX2NlbGwsXFxuLmVsLXRhYmxlX19ib2R5IHRyLmhvdmVyLXJvdy5lbC10YWJsZV9fcm93LS1zdHJpcGVkID4gdGQuZWwtdGFibGVfX2NlbGwsXFxuLmVsLXRhYmxlX19ib2R5IHRyLmhvdmVyLXJvdy5zZWxlY3Rpb24tcm93ID4gdGQuZWwtdGFibGVfX2NlbGwsXFxuLmVsLXRhYmxlX19ib2R5IHRyLmhvdmVyLXJvdyA+IHRkLmVsLXRhYmxlX19jZWxsIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNGNUY3RkE7XFxufVxcbi5lbC10YWJsZV9fYm9keSB0ci5jdXJyZW50LXJvdyA+IHRkLmVsLXRhYmxlX19jZWxsLFxcbi5lbC10YWJsZV9fYm9keSB0ci5zZWxlY3Rpb24tcm93ID4gdGQuZWwtdGFibGVfX2NlbGwge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZjVmZjtcXG59XFxuLmVsLXRhYmxlX19jb2x1bW4tcmVzaXplLXByb3h5IHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDIwMHB4O1xcbiAgdG9wOiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgd2lkdGg6IDA7XFxuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNFQkVFRjU7XFxuICB6LWluZGV4OiAxMDtcXG59XFxuLmVsLXRhYmxlX19jb2x1bW4tZmlsdGVyLXRyaWdnZXIge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgbGluZS1oZWlnaHQ6IDM0cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbi5lbC10YWJsZV9fY29sdW1uLWZpbHRlci10cmlnZ2VyIGkge1xcbiAgY29sb3I6ICM5MDkzOTk7XFxuICBmb250LXNpemU6IDEycHg7XFxuICB0cmFuc2Zvcm06IHNjYWxlKDAuNzUpO1xcbn1cXG4uZWwtdGFibGUtLWVuYWJsZS1yb3ctdHJhbnNpdGlvbiAuZWwtdGFibGVfX2JvZHkgdGQuZWwtdGFibGVfX2NlbGwge1xcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjI1cyBlYXNlO1xcbn1cXG4uZWwtdGFibGUtLWVuYWJsZS1yb3ctaG92ZXIgLmVsLXRhYmxlX19ib2R5IHRyOmhvdmVyID4gdGQuZWwtdGFibGVfX2NlbGwge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0Y1RjdGQTtcXG59XFxuLmVsLXRhYmxlLS1mbHVpZC1oZWlnaHQgLmVsLXRhYmxlX19maXhlZCxcXG4uZWwtdGFibGUtLWZsdWlkLWhlaWdodCAuZWwtdGFibGVfX2ZpeGVkLXJpZ2h0IHtcXG4gIGJvdHRvbTogMDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcbi5lbC10YWJsZSBbY2xhc3MqPWVsLXRhYmxlX19yb3ctLWxldmVsXSAuZWwtdGFibGVfX2V4cGFuZC1pY29uIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHdpZHRoOiAyMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XFxuICBoZWlnaHQ6IDIwcHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBtYXJnaW4tcmlnaHQ6IDNweDtcXG59XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiJdLCJzb3VyY2VSb290IjoiIn0=