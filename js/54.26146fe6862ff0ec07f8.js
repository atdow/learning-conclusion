(window.webpackJsonp=window.webpackJsonp||[]).push([[54,101],{209:function(t,e,o){"use strict";o.r(e),o.d(e,"on",(function(){return d}));const a=function(t){t.style.maxHeight="",t.style.overflow=t.dataset.oldOverflow,t.style.paddingTop=t.dataset.oldPaddingTop,t.style.paddingBottom=t.dataset.oldPaddingBottom},d={beforeEnter(t){t.dataset||(t.dataset={}),t.dataset.oldPaddingTop=t.style.paddingTop,t.dataset.oldPaddingBottom=t.style.paddingBottom,t.style.maxHeight=0,t.style.paddingTop=0,t.style.paddingBottom=0},enter(t){t.dataset.oldOverflow=t.style.overflow,0!==t.scrollHeight?t.style.maxHeight=t.scrollHeight+"px":t.style.maxHeight=0,t.style.paddingTop=t.dataset.oldPaddingTop,t.style.paddingBottom=t.dataset.oldPaddingBottom,t.style.overflow="hidden"},afterEnter(t){t.style.maxHeight="",t.style.overflow=t.dataset.oldOverflow},enterCancelled(t){a(t)},beforeLeave(t){t.dataset||(t.dataset={}),t.dataset.oldPaddingTop=t.style.paddingTop,t.dataset.oldPaddingBottom=t.style.paddingBottom,t.dataset.oldOverflow=t.style.overflow,t.style.maxHeight=t.scrollHeight+"px",t.style.overflow="hidden"},leave(t){0!==t.scrollHeight&&(t.style.maxHeight=0,t.style.paddingTop=0,t.style.paddingBottom=0)},afterLeave(t){a(t)},leaveCancelled(t){a(t)}}},214:function(t,e,o){"use strict";o.r(e);var a=o(209),d={name:"CollapseTransition",props:{},data:()=>({on:a.on}),components:{},watch:{},computed:{},methods:{},created(){},mounted(){},beforeDestroy(){}},s=(o(308),o(9)),n=Object(s.a)(d,(function(){return(0,this._self._c)("transition",this._g({attrs:{name:"s-collapse-transition"}},this.on),[this._t("default")],2)}),[],!1,null,"9d7d5ef0",null);e.default=n.exports},294:function(t,e,o){var a=o(2),d=o(309);"string"==typeof(d=d.__esModule?d.default:d)&&(d=[[t.i,d,""]]);var s={insert:"head",singleton:!1};a(d,s);t.exports=d.locals||{}},308:function(t,e,o){"use strict";o(294)},309:function(t,e,o){(e=o(3)(!1)).push([t.i,".collapse-transition[data-v-9d7d5ef0] {\n  transition: 0.3s height ease-in-out, 0.3s padding-top ease-in-out, 0.3s padding-bottom ease-in-out;\n}\n.s-collapse-transition-leave-active[data-v-9d7d5ef0],\n.s-collapse-transition-enter-active[data-v-9d7d5ef0] {\n  transition: 0.3s max-height ease-in-out, 0.3s padding-top ease-in-out, 0.3s padding-bottom ease-in-out;\n}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,