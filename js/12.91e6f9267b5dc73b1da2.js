(window.webpackJsonp=window.webpackJsonp||[]).push([[12,46,50,79,86,105,106,112],{111:function(t,e,r){"use strict";r.r(e);var o={name:"ScrollbarExample",props:{},data:()=>({}),components:{SinoScrollbar:r(204).default},watch:{},computed:{},created(){},mounted(){},methods:{scroll(t){console.log("data:",t)},scrollTopTest(){this.$refs.scrollbarRef.resetToTop()},scrollBottom(){console.log("scrollBottom")}},beforeDestroy(){}},s=(r(638),r(9)),n={name:"ComponentDoc",components:{Com3puant1h5lncx1zziDemo0:Object(s.a)(o,(function(){var t=this,e=t._self._c;return e("div",[e("sino-scrollbar",{ref:"scrollbarRef",staticStyle:{width:"100%",height:"200px"},on:{scroll:t.scroll,scrollBottom:t.scrollBottom}},[e("ul",t._l(10,(function(r,o){return e("li",{key:o},[t._v(t._s(r))])})),0)]),t._v(" "),e("button",{staticStyle:{"margin-top":"10px"},on:{click:t.scrollTopTest}},[t._v("滚动到顶部")])],1)}),[],!1,null,"317d5aca",null).exports}},i=Object(s.a)(n,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"vue-demo-container"},[e("h3",[t._v("1. 基本使用")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Com3puant1h5lncx1zziDemo0"),t._v(" "),t._m(0)],1),t._v(" "),e("h3",[t._v("API")]),t._v(" "),t._m(1),t._v(" "),e("h3",[t._v("事件")]),t._v(" "),t._m(2),t._v(" "),e("h3",[t._v("方法")]),t._v(" "),t._m(3)])}),[function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n    <div>\n      <sino-scrollbar \n        style="width:100%;height:200px" \n        ref="scrollbarRef"   \n        @scroll="scroll" \n        @scrollBottom="scrollBottom"\n      >\n        <ul>\n          <li v-for="(item,index) in 10" :key="index">{{item}}</li>   \n        </ul>\n      </sino-scrollbar >\n      <button style="margin-top: 10px" @click="scrollTopTest">滚动到顶部</button>\n    </div>\n</template>\n<script>\nimport SinoScrollbar from "@/packages/scrollbar";\nexport default {\n  name: "ScrollbarExample",\n  props: {},\n  data() {\n    return {\n\n    };\n  },\n  components: {\n    SinoScrollbar,\n  },\n  watch: {},\n  computed: {},\n  created() {},\n  mounted() {},\n  methods: {\n    scroll(data) {\n      console.log(\'data:\',data)\n    },\n    scrollTopTest() {\n      this.$refs.scrollbarRef.resetToTop()\n    },\n    scrollBottom() {\n      console.log(\'scrollBottom\')\n    }\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\nli {\n  border-bottom:1px solid #ccc;\n  padding:10px 0;\n  text-align:center;\n}\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("属性")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认值")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("showHorizontalBar")]),t._v(" "),e("td",[t._v("是否显示横向滚动条")]),t._v(" "),e("td",[t._v("Boolean")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("showVerticalBar")]),t._v(" "),e("td",[t._v("是否显示竖向滚动条")]),t._v(" "),e("td",[t._v("Boolean")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("wrapStyle")]),t._v(" "),e("td",[t._v("wrapStyle")]),t._v(" "),e("td",[t._v("String")]),t._v(" "),e("td",[t._v("null")])]),t._v(" "),e("tr",[e("td",[t._v("wrapClass")]),t._v(" "),e("td",[t._v("wrapClass")]),t._v(" "),e("td",[t._v("String")]),t._v(" "),e("td",[t._v("null")])]),t._v(" "),e("tr",[e("td",[t._v("viewClass")]),t._v(" "),e("td",[t._v("viewClass")]),t._v(" "),e("td",[t._v("String")]),t._v(" "),e("td",[t._v("null")])]),t._v(" "),e("tr",[e("td",[t._v("viewStyle")]),t._v(" "),e("td",[t._v("viewStyle")]),t._v(" "),e("td",[t._v("String")]),t._v(" "),e("td",[t._v("null")])]),t._v(" "),e("tr",[e("td",[t._v("noresize")]),t._v(" "),e("td",[t._v("如果 container 尺寸不会发生变化，最好设置它可以优化性能")]),t._v(" "),e("td",[t._v("Boolean")]),t._v(" "),e("td",[t._v("false")])])])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("回调参数")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("scroll")]),t._v(" "),e("td",[t._v("滚动事件")]),t._v(" "),e("td",[t._v("(data) => void")])]),t._v(" "),e("tr",[e("td",[t._v("scrollBottom")]),t._v(" "),e("td",[t._v("滚动到底部事件")]),t._v(" "),e("td",[t._v("-")])])])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("参数")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("resetToTop")]),t._v(" "),e("td",[t._v("滚动到顶部")]),t._v(" "),e("td",[t._v("-")])])])])}],!1,null,null,null);e.default=i.exports},199:function(t,e,r){"use strict";r.r(e),r.d(e,"BAR_MAP",(function(){return s})),r.d(e,"renderThumbStyle",(function(){return n})),r.d(e,"on",(function(){return i})),r.d(e,"off",(function(){return l})),r.d(e,"toObject",(function(){return c}));const o=r(0).default.prototype.$isServer,s={vertical:{offset:"offsetHeight",scroll:"scrollTop",scrollSize:"scrollHeight",size:"height",key:"vertical",axis:"Y",client:"clientY",direction:"top"},horizontal:{offset:"offsetWidth",scroll:"scrollLeft",scrollSize:"scrollWidth",size:"width",key:"horizontal",axis:"X",client:"clientX",direction:"left"}};function n({move:t,size:e,bar:r}){const o={},s=`translate${r.axis}(${t}%)`;return o[r.size]=e,o.transform=s,o.msTransform=s,o.webkitTransform=s,o}const i=!o&&document.addEventListener?function(t,e,r){t&&e&&r&&t.addEventListener(e,r,!1)}:function(t,e,r){t&&e&&r&&t.attachEvent("on"+e,r)},l=!o&&document.removeEventListener?function(t,e,r){t&&e&&t.removeEventListener(e,r,!1)}:function(t,e,r){t&&e&&t.detachEvent("on"+e,r)};function a(t,e){for(const r in e)t[r]=e[r];return t}function c(t){var e={};for(let r=0;r<t.length;r++)t[r]&&a(e,t[r]);return e}},200:function(t,e,r){"use strict";r.r(e),r.d(e,"addResizeListener",(function(){return i})),r.d(e,"removeResizeListener",(function(){return l}));r(23);var o=r(292);const s="undefined"==typeof window,n=function(t){for(const e of t){const t=e.target.__resizeListeners__||[];t.length&&t.forEach(t=>{t()})}},i=function(t,e){s||(t.__resizeListeners__||(t.__resizeListeners__=[],t.__ro__=new o.default(n),t.__ro__.observe(t)),t.__resizeListeners__.push(e))},l=function(t,e){t&&t.__resizeListeners__&&(t.__resizeListeners__.splice(t.__resizeListeners__.indexOf(e),1),t.__resizeListeners__.length||t.__ro__.disconnect())}},201:function(t,e,r){"use strict";r.r(e);var o=r(0);let s;e.default=function(){if(o.default.prototype.$isServer)return 0;if(void 0!==s)return s;const t=document.createElement("div");t.className="sino-scrollbar__wrap",t.style.visibility="hidden",t.style.width="100px",t.style.position="absolute",t.style.top="-9999px",document.body.appendChild(t);const e=t.offsetWidth;t.style.overflow="scroll";const r=document.createElement("div");r.style.width="100%",t.appendChild(r);const n=r.offsetWidth;return t.parentNode.removeChild(t),s=e-n,s}},202:function(t,e,r){"use strict";r.r(e);var o=r(199);e.default={name:"Bar",props:{vertical:Boolean,size:String,move:Number},computed:{bar(){return o.BAR_MAP[this.vertical?"vertical":"horizontal"]},wrap(){return this.$parent.wrap}},render(t){const{size:e,move:r,bar:s}=this;return t("div",{class:["sino-scrollbar__bar","is-"+s.key],on:{mousedown:this.clickTrackHandler}},[t("div",{ref:"thumb",class:"sino-scrollbar__thumb",on:{mousedown:this.clickThumbHandler},style:Object(o.renderThumbStyle)({size:e,move:r,bar:s})})])},methods:{clickThumbHandler(t){t.ctrlKey||2===t.button||(this.startDrag(t),this[this.bar.axis]=t.currentTarget[this.bar.offset]-(t[this.bar.client]-t.currentTarget.getBoundingClientRect()[this.bar.direction]))},clickTrackHandler(t){const e=100*(Math.abs(t.target.getBoundingClientRect()[this.bar.direction]-t[this.bar.client])-this.$refs.thumb[this.bar.offset]/2)/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=e*this.wrap[this.bar.scrollSize]/100},startDrag(t){t.stopImmediatePropagation(),this.cursorDown=!0,Object(o.on)(document,"mousemove",this.mouseMoveDocumentHandler),Object(o.on)(document,"mouseup",this.mouseUpDocumentHandler),document.onselectstart=()=>!1},mouseMoveDocumentHandler(t){if(!1===this.cursorDown)return;const e=this[this.bar.axis];if(!e)return;const r=100*(-1*(this.$el.getBoundingClientRect()[this.bar.direction]-t[this.bar.client])-(this.$refs.thumb[this.bar.offset]-e))/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=r*this.wrap[this.bar.scrollSize]/100},mouseUpDocumentHandler(t){this.cursorDown=!1,this[this.bar.axis]=0,Object(o.off)(document,"mousemove",this.mouseMoveDocumentHandler),document.onselectstart=null}},destroyed(){Object(o.off)(document,"mouseup",this.mouseUpDocumentHandler)}}},203:function(t,e,r){var o=r(2),s=r(291);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[t.i,s,""]]);var n={insert:"head",singleton:!1};o(s,n);t.exports=s.locals||{}},204:function(t,e,r){"use strict";r.r(e);var o=r(205);o.default.install=function(t){t.component(o.default.name,o.default)},e.default=o.default},205:function(t,e,r){"use strict";r.r(e);r(23);var o=r(200),s=r(201),n=r(199),i=r(202);r(203),e.default={name:"SinoScrollbar",components:{Bar:i.default},props:{native:Boolean,wrapStyle:{},wrapClass:{},viewClass:{},viewStyle:{},showHorizontalBar:{type:Boolean,default:!0},showVerticalBar:{type:Boolean,default:!0},noresize:Boolean,tag:{type:String,default:"div"}},data:()=>({sizeWidth:"0",sizeHeight:"0",moveX:0,moveY:0}),computed:{wrap(){return this.$refs.wrap}},render(t){const e=Object(s.default)();let r=this.wrapStyle;if(e){const t=`-${e}px`,o=`margin-bottom: ${t}; margin-right: ${t};`;Array.isArray(this.wrapStyle)?(r=Object(n.toObject)(this.wrapStyle),r.marginRight=r.marginBottom=t):"string"==typeof this.wrapStyle?r+=o:r=o,r+=`width: calc(100% + ${e}px);height: calc(100% + ${e}px);`}else r+="width: 100%;height: 100%;";const o=t(this.tag,{class:["sino-scrollbar__view",this.viewClass],style:this.viewStyle,ref:"resize"},this.$slots.default),l=t("div",{ref:"wrap",style:r,on:{scroll:this.handleScroll},class:[this.wrapClass,"sino-scrollbar__wrap",e?"":"sino-scrollbar__wrap--hidden-default"]},[[o]]);let a;return this.native?a=[t("div",{ref:"wrap",class:[this.wrapClass,"sino-scrollbar__wrap"],style:r},[[o]])]:(a=[l],this.showHorizontalBar&&a.push(t(i.default,{attrs:{move:this.moveX,size:this.sizeWidth}})),this.showVerticalBar&&a.push(t(i.default,{attrs:{vertical:!0,move:this.moveY,size:this.sizeHeight}}))),t("div",{class:"sino-scrollbar"},a)},methods:{handleScroll(t){const e=this.wrap;this.moveY=100*e.scrollTop/e.clientHeight,this.moveX=100*e.scrollLeft/e.clientWidth,this.$emit("scroll",{scrollTop:t.target.scrollTop,scrollLeft:t.target.scrollLeft,e:t}),t.target.scrollTop+t.target.offsetHeight>=t.target.scrollHeight&&(clearTimeout(this.timer),this.timer=setTimeout(()=>{this.$emit("scrollBottom")},100))},update(){let t="",e="";const r=this.wrap;r&&(t=100*r.clientHeight/r.scrollHeight,e=100*r.clientWidth/r.scrollWidth,this.sizeHeight=t<100?t+"%":"",this.sizeWidth=e<100?e+"%":"")},resetToTop(){this.wrap.scrollTop=0},scrollToTop(t){this.wrap.scrollTop=t}},mounted(){this.native||(this.$nextTick(this.update),!this.noresize&&Object(o.addResizeListener)(this.$refs.resize,this.update))},beforeDestroy(){this.native||!this.noresize&&Object(o.removeResizeListener)(this.$refs.resize,this.update)}}},291:function(t,e,r){(e=r(3)(!1)).push([t.i,".sino-scrollbar__wrap {\n  overflow: scroll;\n  height: 100%;\n  width: 100%;\n}\n.sino-scrollbar {\n  overflow: hidden;\n  position: relative;\n}\n.sino-scrollbar__bar {\n  position: absolute;\n  right: 2px;\n  bottom: 2px;\n  z-index: 1;\n  border-radius: 4px;\n  opacity: 1;\n  transition: opacity 0.12s ease-out;\n}\n.sino-scrollbar__bar.is-horizontal {\n  height: 6px;\n  left: 2px;\n}\n.sino-scrollbar__bar.is-horizontal > div {\n  height: 100%;\n}\n.sino-scrollbar__bar.is-vertical {\n  width: 6px;\n  top: 2px;\n}\n.sino-scrollbar__bar.is-vertical > div {\n  width: 100%;\n}\n.sino-scrollbar__thumb {\n  position: relative;\n  display: block;\n  width: 0;\n  height: 0;\n  cursor: pointer;\n  border-radius: inherit;\n  background-color: rgba(180, 185, 210, 0.4);\n  transition: background-color 0.3s;\n}\n",""]),t.exports=e},386:function(t,e,r){var o=r(2),s=r(639);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[t.i,s,""]]);var n={insert:"head",singleton:!1};o(s,n);t.exports=s.locals||{}},638:function(t,e,r){"use strict";r(386)},639:function(t,e,r){(e=r(3)(!1)).push([t.i,"li[data-v-317d5aca] {\n  border-bottom: 1px solid #ccc;\n  padding: 10px 0;\n  text-align: center;\n}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,