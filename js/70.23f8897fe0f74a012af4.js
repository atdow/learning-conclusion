(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{242:function(e,t,i){"use strict";i.r(t);var s={name:"EllipsisTooltip",props:{lines:{type:Number,default:1}},data:()=>({isEllipsis:!1}),components:{},watch:{},computed:{},created(){},mounted(){if(this.lines>1){const e=this.$refs.slotMultiContainerRef;if(!e)return;const t=window.getComputedStyle(e,null),i=t.fontSize.replace("px",""),s="normal"===t.lineHeight?i:t.lineHeight.replace("px",""),l=Math.round(t.height.replace("px","")/s);this.setTooltip(l>=this.lines)}else{const e=this.$refs.slotSingleContainerRef2;if(!e)return;const t=this.isSingleOverEllipsis(e);this.setTooltip(t)}},methods:{setTooltip(e){this.isEllipsis=e},isSingleOverEllipsis(e){const t=e,i=t.getBoundingClientRect().width,s=document.createRange();s.setStart(t,0),s.setEnd(t,t.childNodes.length);const l=s.getBoundingClientRect().width;return s.detach(),l>i}},beforeDestroy(){}},l=(i(347),i(9)),n=Object(l.a)(s,(function(){var e=this,t=e._self._c;return t("div",{staticClass:"ellipsis"},[e.lines>1?t("div",{ref:"slotMultiContainerRef"},[e.isEllipsis?t("div",{staticClass:"over-ellipsis-n",style:{"-webkit-line-clamp":e.lines}},[t("el-tooltip",{staticClass:"box-item",attrs:{effect:"dark",placement:"top"},scopedSlots:e._u([{key:"content",fn:function(){return[e._t("default")]},proxy:!0}],null,!0)},[e._v(" "),t("div",[e._t("default")],2)])],1):e._t("default")],2):t("div",{ref:"slotSingleContainerRef2",staticStyle:{"white-space":"nowrap"}},[e.isEllipsis?t("div",{staticClass:"over-ellipsis-n",style:{"-webkit-line-clamp":e.lines}},[t("el-tooltip",{staticClass:"box-item",attrs:{effect:"dark",placement:"top"},scopedSlots:e._u([{key:"content",fn:function(){return[e._t("default")]},proxy:!0}],null,!0)},[e._v(" "),t("div",{staticClass:"single-over-ellipsis"},[e._t("default")],2)])],1):e._t("default")],2)])}),[],!1,null,"b509f0e0",null);t.default=n.exports},318:function(e,t,i){var s=i(2),l=i(348);"string"==typeof(l=l.__esModule?l.default:l)&&(l=[[e.i,l,""]]);var n={insert:"head",singleton:!1};s(l,n);e.exports=l.locals||{}},347:function(e,t,i){"use strict";i(318)},348:function(e,t,i){(t=i(3)(!1)).push([e.i,".over-ellipsis-n[data-v-b509f0e0] {\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 1;\n  overflow: hidden;\n}\n.single-over-ellipsis[data-v-b509f0e0] {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-bottom: 0;\n}\n",""]),e.exports=t}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,