(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{209:function(t,e,o){"use strict";o.r(e);var i={name:"HorizontalDrag",props:{width:{type:Number,require:!0},minWidth:{type:Number,require:!0},maxWidth:{type:Number,require:!0},positionType:{type:String,validator:t=>-1!==["left","right"].indexOf(t),default:"left"}},data:()=>({showDragDom:!1,startPosition:{x:0,y:0},dragDomX:0,ragDomHeight:0}),components:{},watch:{},computed:{positionRate:function(){return"left"===this.positionType?1:-1}},created(){},mounted(){},methods:{getDragDomStyle(){return{left:this.startPosition.x+"px",height:this.dragDomHeight+"px",transform:`translateX(${this.dragDomX}px)`}},handleMouseDown(t){if(!t.target.classList.contains("horizontal-drag"))return;const{height:e,left:o,top:i}=this.$refs.horizontalDragDom.getBoundingClientRect();this.startPosition={x:o,y:i},this.dragDomX=0,this.dragDomHeight=e,this.showDragDom=!0,this.setGlobalCursor("col-resize"),document.addEventListener("mousemove",this.handleMouseMove),document.addEventListener("mouseup",this.handleMouseUp)},handleMouseMove(t){const e=t.clientX;this.updateDragDomX(e,e-this.startPosition.x),t.preventDefault()},updateDragDomX(t,e){this.dragDomX=t-this.startPosition.x;const o=this.width+this.dragDomX*this.positionRate;o>this.maxWidth?this.dragDomX=(this.maxWidth-this.width)*this.positionRate:o<this.minWidth&&(this.dragDomX=(this.minWidth-this.width)*this.positionRate)},handleMouseUp(){this.showDragDom=!1,this.$emit("widthChange",this.width+this.dragDomX*this.positionRate),this.setGlobalCursor("auto"),document.removeEventListener("mousemove",this.handleMouseMove),document.removeEventListener("mouseup",this.handleMouseUp)},setGlobalCursor(t){document.body.style.cursor=t},disableGlobalSelect(){document.body.style.userSelect="none"},removeDisableGlobalSelect(){document.body.style.userSelect="auto"}},beforeDestroy(){}},s=(o(305),o(9)),n=Object(s.a)(i,(function(){var t=this._self._c;return t("div",{ref:"horizontalDragDom",class:["horizontal-drag",{"horizontal-drag__hidden":this.showDragDom}],on:{mousedown:this.handleMouseDown}},[this.showDragDom?t("div",{ref:"dragDomRef",staticClass:"drag-dom",style:this.getDragDomStyle()}):this._e()])}),[],!1,null,"1403a9c7",null);e.default=n.exports},292:function(t,e,o){var i=o(2),s=o(306);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[t.i,s,""]]);var n={insert:"head",singleton:!1};i(s,n);t.exports=s.locals||{}},305:function(t,e,o){"use strict";o(292)},306:function(t,e,o){(e=o(3)(!1)).push([t.i,".horizontal-drag[data-v-1403a9c7] {\n  position: relative;\n  width: 3px;\n  background: transparent;\n  cursor: col-resize;\n}\n.horizontal-drag[data-v-1403a9c7]:hover {\n  background: green;\n}\n.horizontal-drag.horizontal-drag__hidden[data-v-1403a9c7] {\n  background: transparent;\n}\n.horizontal-drag .drag-dom[data-v-1403a9c7] {\n  position: fixed;\n  width: 3px;\n  background: green;\n  cursor: col-resize;\n}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvd2lkdGgtZHJhZy9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL3dpZHRoLWRyYWcvaW5kZXgudnVlPzNlYTQiLCJ3ZWJwYWNrOi8vL3NyYy9wYWNrYWdlcy93aWR0aC1kcmFnL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvd2lkdGgtZHJhZy9pbmRleC52dWU/Mzk5MCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvd2lkdGgtZHJhZy9pbmRleC52dWU/NTJjMCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvd2lkdGgtZHJhZy9pbmRleC52dWU/ZWRhMSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvd2lkdGgtZHJhZy9pbmRleC52dWU/M2MxYSJdLCJuYW1lcyI6WyJuYW1lIiwicHJvcHMiLCJ3aWR0aCIsInR5cGUiLCJOdW1iZXIiLCJyZXF1aXJlIiwibWluV2lkdGgiLCJtYXhXaWR0aCIsInBvc2l0aW9uVHlwZSIsIlN0cmluZyIsInZhbGlkYXRvciIsInZhbCIsImluZGV4T2YiLCJkZWZhdWx0IiwiZGF0YSIsInNob3dEcmFnRG9tIiwic3RhcnRQb3NpdGlvbiIsIngiLCJ5IiwiZHJhZ0RvbVgiLCJyYWdEb21IZWlnaHQiLCJjb21wb25lbnRzIiwid2F0Y2giLCJjb21wdXRlZCIsInBvc2l0aW9uUmF0ZSIsImNyZWF0ZWQiLCJtb3VudGVkIiwibWV0aG9kcyIsImdldERyYWdEb21TdHlsZSIsImxlZnQiLCJoZWlnaHQiLCJkcmFnRG9tSGVpZ2h0IiwidHJhbnNmb3JtIiwiaGFuZGxlTW91c2VEb3duIiwiZXZlbnQiLCJ0YXJnZXQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInRvcCIsIiRyZWZzIiwiaG9yaXpvbnRhbERyYWdEb20iLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJzZXRHbG9iYWxDdXJzb3IiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVNb3VzZU1vdmUiLCJoYW5kbGVNb3VzZVVwIiwiY3VycmVudFgiLCJjbGllbnRYIiwidXBkYXRlRHJhZ0RvbVgiLCJwcmV2ZW50RGVmYXVsdCIsIm1vdmVYIiwiY3VycmVudFdpZHRoIiwiJGVtaXQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwidmFsdWUiLCJib2R5Iiwic3R5bGUiLCJjdXJzb3IiLCJkaXNhYmxlR2xvYmFsU2VsZWN0IiwidXNlclNlbGVjdCIsInJlbW92ZURpc2FibGVHbG9iYWxTZWxlY3QiLCJiZWZvcmVEZXN0cm95IiwiY29tcG9uZW50IiwiX2MiLCJ0aGlzIiwiX3NlbGYiLCJyZWYiLCJjbGFzcyIsIm9uIiwic3RhdGljQ2xhc3MiLCJfZSIsImFwaSIsImNvbnRlbnQiLCJfX2VzTW9kdWxlIiwibW9kdWxlIiwiaSIsIm9wdGlvbnMiLCJleHBvcnRzIiwibG9jYWxzIiwiX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIiwicHVzaCJdLCJtYXBwaW5ncyI6ImtHQUFBLElDQTBNLEVDbUIzTCxDQUNmQSxLQUFBLGlCQUNBQyxNQUFBLENBQ0FDLE1BQUEsQ0FDQUMsS0FBQUMsT0FDQUMsU0FBQSxHQUVBQyxTQUFBLENBQ0FILEtBQUFDLE9BQ0FDLFNBQUEsR0FFQUUsU0FBQSxDQUNBSixLQUFBQyxPQUNBQyxTQUFBLEdBRUFHLGFBQUEsQ0FDQUwsS0FBQU0sT0FDQUMsVUFBQUMsSUFDQSxxQkFBQUMsUUFBQUQsR0FFQUUsUUFBQSxTQUdBQyxVQUNBLENBQ0FDLGFBQUEsRUFDQUMsY0FBQSxDQUFBQyxFQUFBLEVBQUFDLEVBQUEsR0FFQUMsU0FBQSxFQUNBQyxhQUFBLElBR0FDLFdBQUEsR0FDQUMsTUFBQSxHQUNBQyxTQUFBLENBQ0FDLGFBQUEsV0FDQSxvQkFBQWhCLGFBQUEsT0FHQWlCLFlBQ0FDLFlBQ0FDLFFBQUEsQ0FDQUMsa0JBQ0EsT0FDQUMsS0FBQSxLQUFBYixjQUFBQyxFQUFBLEtBQ0FhLE9BQUEsS0FBQUMsY0FBQSxLQUNBQyxVQUFBLG1CQUFBYixnQkFHQWMsZ0JBQUFDLEdBQ0EsSUFBQUEsRUFBQUMsT0FBQUMsVUFBQUMsU0FBQSxtQkFDQSxPQUVBLGFBQUFQLEVBQUEsS0FBQUQsRUFBQSxJQUFBUyxHQUFBLEtBQUFDLE1BQUFDLGtCQUFBQyx3QkFFQSxLQUFBekIsY0FBQSxDQUFBQyxFQUFBWSxFQUFBWCxFQUFBb0IsR0FFQSxLQUFBbkIsU0FBQSxFQUNBLEtBQUFZLGNBQUFELEVBQ0EsS0FBQWYsYUFBQSxFQUNBLEtBQUEyQixnQkFBQSxjQUNBQyxTQUFBQyxpQkFBQSxpQkFBQUMsaUJBQ0FGLFNBQUFDLGlCQUFBLGVBQUFFLGdCQUVBRCxnQkFBQVgsR0FDQSxNQUFBYSxFQUFBYixFQUFBYyxRQUNBLEtBQUFDLGVBQUFGLElBQUEsS0FBQS9CLGNBQUFDLEdBQ0FpQixFQUFBZ0Isa0JBRUFELGVBQUFGLEVBQUFJLEdBS0EsS0FBQWhDLFNBQUE0QixFQUFBLEtBQUEvQixjQUFBQyxFQUNBLE1BQUFtQyxFQUFBLEtBQUFsRCxNQUFBLEtBQUFpQixTQUFBLEtBQUFLLGFBQ0E0QixFQUFBLEtBQUE3QyxTQUNBLEtBQUFZLFVBQUEsS0FBQVosU0FBQSxLQUFBTCxPQUFBLEtBQUFzQixhQUNBNEIsRUFBQSxLQUFBOUMsV0FDQSxLQUFBYSxVQUFBLEtBQUFiLFNBQUEsS0FBQUosT0FBQSxLQUFBc0IsZUFHQXNCLGdCQUNBLEtBQUEvQixhQUFBLEVBQ0EsS0FBQXNDLE1BQUEsbUJBQUFuRCxNQUFBLEtBQUFpQixTQUFBLEtBQUFLLGNBQ0EsS0FBQWtCLGdCQUFBLFFBQ0FDLFNBQUFXLG9CQUFBLGlCQUFBVCxpQkFDQUYsU0FBQVcsb0JBQUEsZUFBQVIsZ0JBRUFKLGdCQUFBYSxHQUNBWixTQUFBYSxLQUFBQyxNQUFBQyxPQUFBSCxHQUVBSSxzQkFDQWhCLFNBQUFhLEtBQUFDLE1BQUFHLFdBQUEsUUFFQUMsNEJBQ0FsQixTQUFBYSxLQUFBQyxNQUFBRyxXQUFBLFNBR0FFLG1CLGdCQzlHSUMsRUFBWSxZQUNkLEdIVFcsV0FBa0IsSUFBYUMsRUFBTEMsS0FBWUMsTUFBTUYsR0FBRyxPQUFPQSxFQUFHLE1BQU0sQ0FBQ0csSUFBSSxvQkFBb0JDLE1BQU0sQ0FBQyxrQkFBbUIsQ0FBRSwwQkFBMUZILEtBQXlIbEQsY0FBZXNELEdBQUcsQ0FBQyxVQUE1SUosS0FBNEpoQyxrQkFBa0IsQ0FBOUtnQyxLQUFvTGxELFlBQWFpRCxFQUFHLE1BQU0sQ0FBQ0csSUFBSSxhQUFhRyxZQUFZLFdBQVdiLE1BQW5QUSxLQUE4UHJDLG9CQUE5UHFDLEtBQXVSTSxTQUV4UyxJR1VwQixFQUNBLEtBQ0EsV0FDQSxNQUlhLFVBQUFSLEUsNkJDbkJmLElBQUlTLEVBQU0sRUFBUSxHQUNGQyxFQUFVLEVBQVEsS0FJQyxpQkFGdkJBLEVBQVVBLEVBQVFDLFdBQWFELEVBQVE1RCxRQUFVNEQsS0FHL0NBLEVBQVUsQ0FBQyxDQUFDRSxFQUFPQyxFQUFJSCxFQUFTLE1BRzlDLElBQUlJLEVBQVUsQ0FFZCxPQUFpQixPQUNqQixXQUFvQixHQUVQTCxFQUFJQyxFQUFTSSxHQUkxQkYsRUFBT0csUUFBVUwsRUFBUU0sUUFBVSxJLGlDQ2xCbkMsUSxxQkNFQUQsRUFEa0MsRUFBUSxFQUNoQ0UsRUFBNEIsSUFFOUJDLEtBQUssQ0FBQ04sRUFBT0MsRUFBSSxzYUFBdWEsS0FFaGNELEVBQU9HLFFBQVVBIiwiZmlsZSI6ImpzLzcwLjYzNzNlYzVmZTNkNTE3MGI2YjY5LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpe3ZhciBfdm09dGhpcyxfYz1fdm0uX3NlbGYuX2M7cmV0dXJuIF9jKCdkaXYnLHtyZWY6XCJob3Jpem9udGFsRHJhZ0RvbVwiLGNsYXNzOlsnaG9yaXpvbnRhbC1kcmFnJywgeyAnaG9yaXpvbnRhbC1kcmFnX19oaWRkZW4nOiBfdm0uc2hvd0RyYWdEb20gfV0sb246e1wibW91c2Vkb3duXCI6X3ZtLmhhbmRsZU1vdXNlRG93bn19LFsoX3ZtLnNob3dEcmFnRG9tKT9fYygnZGl2Jyx7cmVmOlwiZHJhZ0RvbVJlZlwiLHN0YXRpY0NsYXNzOlwiZHJhZy1kb21cIixzdHlsZTooX3ZtLmdldERyYWdEb21TdHlsZSgpKX0pOl92bS5fZSgpXSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsIjwhLS1cbiAqIEBBdXRob3I6IGF0ZG93XG4gKiBARGF0ZTogMjAyMy0wOS0xNSAxOToyNTo0OFxuICogQExhc3RFZGl0b3JzOiBudWxsXG4gKiBATGFzdEVkaXRUaW1lOiAyMDIzLTA5LTE1IDIwOjU1OjE0XG4gKiBARGVzY3JpcHRpb246IGZpbGUgZGVzY3JpcHRpb25cbi0tPlxuPHRlbXBsYXRlPlxuICDCoFxuICA8ZGl2XG4gICAgcmVmPVwiaG9yaXpvbnRhbERyYWdEb21cIlxuICAgIDpjbGFzcz1cIlsnaG9yaXpvbnRhbC1kcmFnJywgeyAnaG9yaXpvbnRhbC1kcmFnX19oaWRkZW4nOiBzaG93RHJhZ0RvbSB9XVwiXG4gICAgQG1vdXNlZG93bj1cImhhbmRsZU1vdXNlRG93blwiXG4gID5cbiAgICA8ZGl2IHYtaWY9XCJzaG93RHJhZ0RvbVwiIHJlZj1cImRyYWdEb21SZWZcIiBjbGFzcz1cImRyYWctZG9tXCIgOnN0eWxlPVwiZ2V0RHJhZ0RvbVN0eWxlKClcIj48L2Rpdj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuwqBcbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdIb3Jpem9udGFsRHJhZycsXG4gIHByb3BzOiB7XG4gICAgd2lkdGg6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIHJlcXVpcmU6IHRydWUsXG4gICAgfSxcbiAgICBtaW5XaWR0aDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgcmVxdWlyZTogdHJ1ZSxcbiAgICB9LFxuICAgIG1heFdpZHRoOiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICByZXF1aXJlOiB0cnVlLFxuICAgIH0sXG4gICAgcG9zaXRpb25UeXBlOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICB2YWxpZGF0b3IodmFsKSB7XG4gICAgICAgIHJldHVybiBbJ2xlZnQnLCAncmlnaHQnXS5pbmRleE9mKHZhbCkgIT09IC0xXG4gICAgICB9LFxuICAgICAgZGVmYXVsdDogJ2xlZnQnLFxuICAgIH0sXG4gIH0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNob3dEcmFnRG9tOiBmYWxzZSxcbiAgICAgIHN0YXJ0UG9zaXRpb246IHsgeDogMCwgeTogMCB9LFxuICAgICAgLy8g5ouW5ou96L205Z2Q5qCHXG4gICAgICBkcmFnRG9tWDogMCxcbiAgICAgIHJhZ0RvbUhlaWdodDogMCxcbiAgICB9XG4gIH0sXG4gIGNvbXBvbmVudHM6IHt9LFxuICB3YXRjaDoge30sXG4gIGNvbXB1dGVkOiB7XG4gICAgcG9zaXRpb25SYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wb3NpdGlvblR5cGUgPT09ICdsZWZ0JyA/IDEgOiAtMVxuICAgIH0sXG4gIH0sXG4gIGNyZWF0ZWQoKSB7fSxcbiAgbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgZ2V0RHJhZ0RvbVN0eWxlKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGVmdDogdGhpcy5zdGFydFBvc2l0aW9uLnggKyAncHgnLFxuICAgICAgICBoZWlnaHQ6IHRoaXMuZHJhZ0RvbUhlaWdodCArICdweCcsXG4gICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZVgoJHt0aGlzLmRyYWdEb21YfXB4KWAsXG4gICAgICB9XG4gICAgfSxcbiAgICBoYW5kbGVNb3VzZURvd24oZXZlbnQpIHtcbiAgICAgIGlmICghZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnaG9yaXpvbnRhbC1kcmFnJykpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBjb25zdCB7IGhlaWdodCwgbGVmdCwgdG9wIH0gPSB0aGlzLiRyZWZzLmhvcml6b250YWxEcmFnRG9tLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gICAgICAvLyBzdGFydFBvc2l0aW9uLnZhbHVlID0geyB4OiBldmVudC5jbGllbnRYLCB5OiBldmVudC5jbGllbnRZIH0gLy8g6L+Z6YeM5bCG5Lya5Lqn55Sf5oqW5YqoXG4gICAgICB0aGlzLnN0YXJ0UG9zaXRpb24gPSB7IHg6IGxlZnQsIHk6IHRvcCB9XG5cbiAgICAgIHRoaXMuZHJhZ0RvbVggPSAwXG4gICAgICB0aGlzLmRyYWdEb21IZWlnaHQgPSBoZWlnaHRcbiAgICAgIHRoaXMuc2hvd0RyYWdEb20gPSB0cnVlXG4gICAgICB0aGlzLnNldEdsb2JhbEN1cnNvcignY29sLXJlc2l6ZScpXG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLmhhbmRsZU1vdXNlTW92ZSlcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLmhhbmRsZU1vdXNlVXApXG4gICAgfSxcbiAgICBoYW5kbGVNb3VzZU1vdmUoZXZlbnQpIHtcbiAgICAgIGNvbnN0IGN1cnJlbnRYID0gZXZlbnQuY2xpZW50WFxuICAgICAgdGhpcy51cGRhdGVEcmFnRG9tWChjdXJyZW50WCwgY3VycmVudFggLSB0aGlzLnN0YXJ0UG9zaXRpb24ueClcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCkgLy8g56aB5q2i5YWo5bGA6YCJ5LitXG4gICAgfSxcbiAgICB1cGRhdGVEcmFnRG9tWChjdXJyZW50WCwgbW92ZVgpIHtcbiAgICAgIC8vIOS4jeiDveS9v+eUqOi/meenjeaWueW8j++8jOS7peS4uuaLluaLveW+iOW/q+aXtuWwhuS8muWwhuWcqOi+uee8mOWAvOWRqOWbtOebtOaOpeWBnOeVmVxuICAgICAgLy8gaWYgKHByb3BzLndpZHRoICsgbW92ZVggPCBwcm9wcy5taW5XaWR0aCB8fCBwcm9wcy53aWR0aCArIG1vdmVYID4gcHJvcHMubWF4V2lkdGgpIHtcbiAgICAgIC8vICAgcmV0dXJuXG4gICAgICAvLyB9XG4gICAgICB0aGlzLmRyYWdEb21YID0gY3VycmVudFggLSB0aGlzLnN0YXJ0UG9zaXRpb24ueFxuICAgICAgY29uc3QgY3VycmVudFdpZHRoID0gdGhpcy53aWR0aCArIHRoaXMuZHJhZ0RvbVggKiB0aGlzLnBvc2l0aW9uUmF0ZVxuICAgICAgaWYgKGN1cnJlbnRXaWR0aCA+IHRoaXMubWF4V2lkdGgpIHtcbiAgICAgICAgdGhpcy5kcmFnRG9tWCA9ICh0aGlzLm1heFdpZHRoIC0gdGhpcy53aWR0aCkgKiB0aGlzLnBvc2l0aW9uUmF0ZVxuICAgICAgfSBlbHNlIGlmIChjdXJyZW50V2lkdGggPCB0aGlzLm1pbldpZHRoKSB7XG4gICAgICAgIHRoaXMuZHJhZ0RvbVggPSAodGhpcy5taW5XaWR0aCAtIHRoaXMud2lkdGgpICogdGhpcy5wb3NpdGlvblJhdGVcbiAgICAgIH1cbiAgICB9LFxuICAgIGhhbmRsZU1vdXNlVXAoKSB7XG4gICAgICB0aGlzLnNob3dEcmFnRG9tID0gZmFsc2VcbiAgICAgIHRoaXMuJGVtaXQoJ3dpZHRoQ2hhbmdlJywgdGhpcy53aWR0aCArIHRoaXMuZHJhZ0RvbVggKiB0aGlzLnBvc2l0aW9uUmF0ZSlcbiAgICAgIHRoaXMuc2V0R2xvYmFsQ3Vyc29yKCdhdXRvJylcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMuaGFuZGxlTW91c2VNb3ZlKVxuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuaGFuZGxlTW91c2VVcClcbiAgICB9LFxuICAgIHNldEdsb2JhbEN1cnNvcih2YWx1ZSkge1xuICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3IgPSB2YWx1ZVxuICAgIH0sXG4gICAgZGlzYWJsZUdsb2JhbFNlbGVjdCgpIHtcbiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUudXNlclNlbGVjdCA9ICdub25lJ1xuICAgIH0sXG4gICAgcmVtb3ZlRGlzYWJsZUdsb2JhbFNlbGVjdCgpIHtcbiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUudXNlclNlbGVjdCA9ICdhdXRvJ1xuICAgIH0sXG4gIH0sXG4gIGJlZm9yZURlc3Ryb3koKSB7fSxcbn1cbjwvc2NyaXB0PlxuPHN0eWxlIGxhbmc9XCJsZXNzXCIgc2NvcGVkPlxuLmhvcml6b250YWwtZHJhZyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDNweDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGN1cnNvcjogY29sLXJlc2l6ZTtcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogZ3JlZW47XG4gIH1cbiAgJi5ob3Jpem9udGFsLWRyYWdfX2hpZGRlbiB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIH1cbiAgLmRyYWctZG9tIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgd2lkdGg6IDNweDtcbiAgICBiYWNrZ3JvdW5kOiBncmVlbjtcbiAgICBjdXJzb3I6IGNvbC1yZXNpemU7XG4gIH1cbn1cbjwvc3R5bGU+XG4iLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xNDAzYTljNyZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0xNDAzYTljNyZwcm9kJmxhbmc9bGVzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiMTQwM2E5YzdcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTE0MDNhOWM3JnByb2QmbGFuZz1sZXNzJnNjb3BlZD10cnVlJlwiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0xNDAzYTljNyZwcm9kJmxhbmc9bGVzcyZzY29wZWQ9dHJ1ZSZcIiIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuaG9yaXpvbnRhbC1kcmFnW2RhdGEtdi0xNDAzYTljN10ge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgd2lkdGg6IDNweDtcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcbiAgY3Vyc29yOiBjb2wtcmVzaXplO1xcbn1cXG4uaG9yaXpvbnRhbC1kcmFnW2RhdGEtdi0xNDAzYTljN106aG92ZXIge1xcbiAgYmFja2dyb3VuZDogZ3JlZW47XFxufVxcbi5ob3Jpem9udGFsLWRyYWcuaG9yaXpvbnRhbC1kcmFnX19oaWRkZW5bZGF0YS12LTE0MDNhOWM3XSB7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG59XFxuLmhvcml6b250YWwtZHJhZyAuZHJhZy1kb21bZGF0YS12LTE0MDNhOWM3XSB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB3aWR0aDogM3B4O1xcbiAgYmFja2dyb3VuZDogZ3JlZW47XFxuICBjdXJzb3I6IGNvbC1yZXNpemU7XFxufVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iXSwic291cmNlUm9vdCI6IiJ9