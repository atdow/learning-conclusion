(window.webpackJsonp=window.webpackJsonp||[]).push([[48,75],{216:function(t,e,o){"use strict";o.r(e);var i={name:"HorizontalDrag",props:{width:{type:Number,require:!0},minWidth:{type:Number,require:!0},maxWidth:{type:Number,require:!0},positionType:{type:String,validator:t=>-1!==["left","right"].indexOf(t),default:"right"}},data:()=>({showDragDom:!1,startPosition:{x:0,y:0},dragDomX:0,ragDomHeight:0}),components:{},watch:{},computed:{positionRate:function(){return"right"===this.positionType?1:-1}},created(){},mounted(){},methods:{getDragDomStyle(){return{left:this.startPosition.x+"px",height:this.dragDomHeight+"px",transform:`translateX(${this.dragDomX}px)`}},handleMouseDown(t){if(!t.target.classList.contains("horizontal-drag"))return;const{height:e,width:o,left:i,top:n}=this.$refs.horizontalDragDom.getBoundingClientRect();this.startPosition={x:i,y:n},this.dragDomX=0,this.dragDomHeight=e,this.showDragDom=!0,this.setGlobalCursor("col-resize"),document.addEventListener("mousemove",this.handleMouseMove),document.addEventListener("mouseup",this.handleMouseUp),"right"===this.positionType&&this.$nextTick(()=>{this.startPosition={x:i+o-this.$refs.dragDomRef.getBoundingClientRect().width,y:n}})},handleMouseMove(t){const e=t.clientX;this.updateDragDomX(e,e-this.startPosition.x),t.preventDefault()},updateDragDomX(t,e){this.dragDomX=t-this.startPosition.x;const o=this.width+this.dragDomX*this.positionRate;o>this.maxWidth?this.dragDomX=(this.maxWidth-this.width)*this.positionRate:o<this.minWidth&&(this.dragDomX=(this.minWidth-this.width)*this.positionRate)},handleMouseUp(){this.showDragDom=!1,this.$emit("widthChange",this.width+this.dragDomX*this.positionRate),this.setGlobalCursor("auto"),document.removeEventListener("mousemove",this.handleMouseMove),document.removeEventListener("mouseup",this.handleMouseUp)},setGlobalCursor(t){document.body.style.cursor=t},disableGlobalSelect(){document.body.style.userSelect="none"},removeDisableGlobalSelect(){document.body.style.userSelect="auto"}},beforeDestroy(){}},n=(o(308),o(9)),a=Object(n.a)(i,(function(){var t=this._self._c;return t("div",{ref:"horizontalDragDom",class:["horizontal-drag",{"horizontal-drag__left":"left"===this.positionType,"horizontal-drag__hidden":this.showDragDom}],on:{mousedown:this.handleMouseDown}},[this.showDragDom?t("div",{ref:"dragDomRef",staticClass:"drag-dom",style:this.getDragDomStyle()}):this._e()])}),[],!1,null,"49f4da2a",null);e.default=a.exports},297:function(t,e,o){"use strict";o.r(e);var i={name:"WidthDragDemo",props:{},data:()=>({menuWidth:400}),components:{WidthDrag:o(216).default},watch:{},computed:{},created(){},mounted(){},methods:{widthChange(t){this.menuWidth=t}},beforeDestroy(){}},n=(o(629),o(9)),a=Object(n.a)(i,(function(){var t=this._self._c;return t("div",{staticClass:"width-drag-demo"},[t("div",{staticClass:"content",style:{width:this.menuWidth+"px"}},[t("width-drag",{staticClass:"width-drag",attrs:{width:this.menuWidth,"min-width":200,"max-width":600},on:{widthChange:this.widthChange}})],1)])}),[],!1,null,"52f8bd70",null);e.default=a.exports},302:function(t,e,o){var i=o(2),n=o(309);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[t.i,n,""]]);var a={insert:"head",singleton:!1};i(n,a);t.exports=n.locals||{}},308:function(t,e,o){"use strict";o(302)},309:function(t,e,o){(e=o(3)(!1)).push([t.i,".horizontal-drag[data-v-49f4da2a] {\n  position: relative;\n  width: 6px;\n  background: transparent;\n  cursor: col-resize;\n}\n.horizontal-drag[data-v-49f4da2a]:not(.horizontal-drag__left) {\n  border-right: 2px solid transparent;\n}\n.horizontal-drag[data-v-49f4da2a]:not(.horizontal-drag__left):hover {\n  border-right: 2px solid green;\n}\n.horizontal-drag.horizontal-drag__left[data-v-49f4da2a] {\n  border-left: 2px solid transparent;\n}\n.horizontal-drag.horizontal-drag__left[data-v-49f4da2a]:hover {\n  border-left: 2px solid green;\n}\n.horizontal-drag.horizontal-drag__hidden[data-v-49f4da2a] {\n  border: none !important;\n}\n.horizontal-drag .drag-dom[data-v-49f4da2a] {\n  position: fixed;\n  width: 2px;\n  background: green;\n  cursor: col-resize;\n}\n",""]),t.exports=e},391:function(t,e,o){var i=o(2),n=o(630);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[t.i,n,""]]);var a={insert:"head",singleton:!1};i(n,a);t.exports=n.locals||{}},629:function(t,e,o){"use strict";o(391)},630:function(t,e,o){(e=o(3)(!1)).push([t.i,".width-drag-demo .content[data-v-52f8bd70] {\n  width: 400px;\n  height: 600px;\n  border: 1px solid #ccc;\n  position: relative;\n}\n.width-drag-demo .content .width-drag[data-v-52f8bd70] {\n  position: absolute;\n  top: 0;\n  right: -1px;\n  bottom: 0;\n}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,