(window.webpackJsonp=window.webpackJsonp||[]).push([[18,60,70],{108:function(t,n,e){"use strict";e.r(n);var r=e(237),i={name:"dynamic-number",props:{},data:()=>({count:0}),components:{DynamicNumber:r.default},watch:{},computed:{},created(){},mounted(){let t=setInterval(()=>{this.count+=123},1e3);this.$once("hook:beforeDestroy",()=>{clearInterval(t)})},beforeDestroy(){}},a=e(9),o=Object(a.a)(i,(function(){var t=this;return(0,t._self._c)("DynamicNumber",{model:{value:t.count,callback:function(n){t.count=n},expression:"count"}})}),[],!1,null,"515fb40a",null).exports,s={name:"dynamic-number",props:{},data:()=>({count:0}),components:{DynamicNumber:r.default},watch:{},computed:{},created(){},mounted(){let t=setInterval(()=>{this.count+=12},1e3);this.$once("hook:beforeDestroy",()=>{clearInterval(t)})},beforeDestroy(){}},l=Object(a.a)(s,(function(){var t=this;return(0,t._self._c)("DynamicNumber",{attrs:{length:2},model:{value:t.count,callback:function(n){t.count=n},expression:"count"}})}),[],!1,null,"3ad6b4fe",null).exports,c={name:"dynamic-number",props:{},data:()=>({count:0}),components:{DynamicNumber:r.default},watch:{},computed:{},created(){},mounted(){let t=setInterval(()=>{this.count+=123},1e3);this.$once("hook:beforeDestroy",()=>{clearInterval(t)})},beforeDestroy(){}},u={name:"ComponentDoc",components:{Com7qv41sclozz973aDemo0:o,Com7qv41sclozz973aDemo1:l,Com7qv41sclozz973aDemo2:Object(a.a)(c,(function(){var t=this;return(0,t._self._c)("DynamicNumber",{attrs:{isThousandSplit:!0},model:{value:t.count,callback:function(n){t.count=n},expression:"count"}})}),[],!1,null,"41ca56a4",null).exports}},m=Object(a.a)(u,(function(){var t=this,n=t._self._c;return n("div",{staticClass:"vue-demo-container"},[n("h4",[t._v("1. 基础用法")]),t._v(" "),n("div",{staticClass:"vue-demo-wrapper"},[n("Com7qv41sclozz973aDemo0"),t._v(" "),t._m(0)],1),t._v(" "),n("h4",[t._v("2. 指定数字最大显示长度")]),t._v(" "),n("div",{staticClass:"vue-demo-wrapper"},[n("Com7qv41sclozz973aDemo1"),t._v(" "),t._m(1)],1),t._v(" "),n("h4",[t._v("3. 使用千分分割")]),t._v(" "),n("div",{staticClass:"vue-demo-wrapper"},[n("Com7qv41sclozz973aDemo2"),t._v(" "),t._m(2)],1),t._v(" "),n("h3",[t._v("API")]),t._v(" "),t._m(3)])}),[function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <DynamicNumber v-model="count"/>\n</template>\n\n<script>\nimport DynamicNumber from "@/packages/dynamic-number";\nexport default {\n  name: "dynamic-number",\n  props: {},\n  data() {\n    return {\n      count: 0,\n    };\n  },\n  components: {\n    DynamicNumber,\n  },\n  watch: {},\n  computed: {},\n  created() {},\n  mounted() {\n    let timer = setInterval(() => {\n      this.count += 123;\n    }, 1000);\n    this.$once("hook:beforeDestroy", () => {\n      clearInterval(timer);\n    });\n  },\n  beforeDestroy() {},\n};\n<\/script>\n\n<style lang="less" scoped></style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <DynamicNumber v-model="count" :length="2"/>\n</template>\n\n<script>\nimport DynamicNumber from "@/packages/dynamic-number";\nexport default {\n  name: "dynamic-number",\n  props: {},\n  data() {\n    return {\n      count: 0,\n    };\n  },\n  components: {\n    DynamicNumber,\n  },\n  watch: {},\n  computed: {},\n  created() {},\n  mounted() {\n    let timer = setInterval(() => {\n      this.count += 12;\n    }, 1000);\n    this.$once("hook:beforeDestroy", () => {\n      clearInterval(timer);\n    });\n  },\n  beforeDestroy() {},\n};\n<\/script>\n\n<style lang="less" scoped></style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <DynamicNumber v-model="count" :isThousandSplit="true"/>\n</template>\n\n<script>\nimport DynamicNumber from "@/packages/dynamic-number";\nexport default {\n  name: "dynamic-number",\n  props: {},\n  data() {\n    return {\n      count: 0,\n    };\n  },\n  components: {\n    DynamicNumber,\n  },\n  watch: {},\n  computed: {},\n  created() {},\n  mounted() {\n    let timer = setInterval(() => {\n      this.count += 123;\n    }, 1000);\n    this.$once("hook:beforeDestroy", () => {\n      clearInterval(timer);\n    });\n  },\n  beforeDestroy() {},\n};\n<\/script>\n\n<style lang="less" scoped></style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this,n=t._self._c;return n("table",[n("thead",[n("tr",[n("th",[t._v("属性")]),t._v(" "),n("th",[t._v("说明")]),t._v(" "),n("th",[t._v("类型")]),t._v(" "),n("th",[t._v("默认值")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("v-modal")]),t._v(" "),n("td",[t._v("绑定值")]),t._v(" "),n("td",[t._v("Number")]),t._v(" "),n("td",[t._v("0")])]),t._v(" "),n("tr",[n("td",[t._v("length")]),t._v(" "),n("td",[t._v("最大显示长度")]),t._v(" "),n("td",[t._v("Number")]),t._v(" "),n("td",[t._v("9")])]),t._v(" "),n("tr",[n("td",[t._v("isThousandSplit")]),t._v(" "),n("td",[t._v("是否使用千分分割")]),t._v(" "),n("td",[t._v("Boolean")]),t._v(" "),n("td",[t._v("false")])])])])}],!1,null,null,null);n.default=m.exports},237:function(t,n,e){"use strict";e.r(n);var r=e(241);r.default.install=function(t){t.component(r.default.name,r.default)},n.default=r.default},241:function(t,n,e){"use strict";e.r(n);e(24);var r={name:"ScrollNumber",model:{prop:"count",event:"setCount"},props:{count:{type:Number,default:0},isThousandSplit:{type:Boolean,default:!1},length:{type:Number,default:9}},data:()=>({initNumArray:["0"],displayNumArray:[]}),watch:{count:{immediate:!0,handler:function(){const t=this.count,n=this.numToArray(t);this.initNumArray=[],n.forEach(t=>{isNaN(t)?this.initNumArray.push(","):this.initNumArray.push("0")}),this.displayNumArray=n,this.$nextTick(()=>{const t=setTimeout(()=>{this.setNumberTransform(),clearTimeout(t)},0)})}}},mounted(){},methods:{numToArray(t){if(!0===this.isThousandSplit){if(this.length){let n="";for(let t=0;t<this.length;t++)n+="9";Number(n),0;let e="";if(String(t).length<=this.length){const n=this.length-String(t).length;e=String(t);for(let t=0;t<n;t++)e="0"+e}return this.thousandSplit(e).split("")}return this.thousandSplit(t).split("")}return String(t).split("")},thousandSplit:t=>(t+"").replace(/\d{1,3}(?=(\d{3})+$)/g,"$&,"),setNumberTransform(){this.displayNumArray.forEach((t,n)=>{if(!isNaN(t)){this.$refs.itemRef[n].children[0].children[0].style.transform=`translate(-50%, -${10*t}%)`}})}}},i=(e(345),e(9)),a=Object(i.a)(r,(function(){var t=this,n=t._self._c;return n("div",{staticClass:"s-scroll-number"},t._l(t.initNumArray,(function(e,r){return n("li",{key:r,ref:"itemRef",refInFor:!0,class:{"number-item":!isNaN(e),"mark-item":isNaN(e)}},[isNaN(e)?n("span",{staticClass:"comma"},[t._v(t._s(e))]):n("span",[n("i",[t._v("0123456789")])])])})),0)}),[],!1,null,"7038f128",null);n.default=a.exports},317:function(t,n,e){var r=e(2),i=e(346);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[t.i,i,""]]);var a={insert:"head",singleton:!1};r(i,a);t.exports=i.locals||{}},345:function(t,n,e){"use strict";e(317)},346:function(t,n,e){(n=e(3)(!1)).push([t.i,"/*总量滚动数字设置*/\n.s-scroll-number[data-v-7038f128] {\n  position: relative;\n  height: 100px;\n  font-size: 54px;\n  line-height: 41px;\n  text-align: center;\n  list-style: none;\n  color: #2d7cff;\n  writing-mode: vertical-lr;\n  text-orientation: upright;\n  /*文字禁止编辑*/\n  -moz-user-select: none;\n  /*火狐*/\n  -webkit-user-select: none;\n  /*webkit浏览器*/\n  /*IE10*/\n  /*早期浏览器*/\n  user-select: none;\n  /* overflow: hidden; */\n}\n/* 默认逗号设置 */\n.mark-item[data-v-7038f128] {\n  width: 10px;\n  height: 100px;\n  margin-right: 5px;\n  line-height: 10px;\n  font-size: 48px;\n  position: relative;\n}\n.mark-item > span[data-v-7038f128] {\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  writing-mode: vertical-rl;\n  text-orientation: upright;\n}\n/*滚动数字设置*/\n.number-item[data-v-7038f128] {\n  width: 41px;\n  height: 75px;\n  background: #ccc;\n  list-style: none;\n  margin-right: 5px;\n  background: #fafafa;\n  border-radius: 4px;\n  border: 1px solid #dddddd;\n}\n.number-item > span[data-v-7038f128] {\n  position: relative;\n  display: inline-block;\n  margin-right: 10px;\n  width: 100%;\n  height: 100%;\n  writing-mode: vertical-rl;\n  text-orientation: upright;\n  overflow: hidden;\n}\n.number-item > span > i[data-v-7038f128] {\n  font-style: normal;\n  position: absolute;\n  top: 11px;\n  left: 50%;\n  transform: translate(-50%, 0);\n  transition: transform 0.7s ease-in-out;\n  letter-spacing: 10px;\n}\n.number-item[data-v-7038f128]:last-child {\n  margin-right: 0;\n}\n",""]),t.exports=n}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzLWV4YW1wbGVzL2R5bmFtaWMtbnVtYmVyLm1kP2I1YWEiLCJ3ZWJwYWNrOi8vL3NyYy9wYWNrYWdlcy1leGFtcGxlcy9keW5hbWljLW51bWJlci5tZCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/YmRkOSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/NGQxOCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/YmJkMyIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/ODg4ZiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/YmIxOSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/N2EyNCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvZHluYW1pYy1udW1iZXIubWQ/MmI5OSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvZHluYW1pYy1udW1iZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL2R5bmFtaWMtbnVtYmVyL3NyYy9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL2R5bmFtaWMtbnVtYmVyL3NyYy9pbmRleC52dWU/YjRiMSIsIndlYnBhY2s6Ly8vc3JjL3BhY2thZ2VzL2R5bmFtaWMtbnVtYmVyL3NyYy9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL2R5bmFtaWMtbnVtYmVyL3NyYy9pbmRleC52dWU/NDU0NiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvZHluYW1pYy1udW1iZXIvc3JjL2luZGV4LnZ1ZT9hNzE3Iiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy9keW5hbWljLW51bWJlci9zcmMvaW5kZXgudnVlPzY1YjciLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL2R5bmFtaWMtbnVtYmVyL3NyYy9pbmRleC52dWU/NjlmYiJdLCJuYW1lcyI6WyJuYW1lIiwicHJvcHMiLCJkYXRhIiwiY291bnQiLCJjb21wb25lbnRzIiwiRHluYW1pY051bWJlciIsIndhdGNoIiwiY29tcHV0ZWQiLCJjcmVhdGVkIiwibW91bnRlZCIsInRpbWVyIiwic2V0SW50ZXJ2YWwiLCIkb25jZSIsImNsZWFySW50ZXJ2YWwiLCJiZWZvcmVEZXN0cm95IiwiX3ZtIiwidGhpcyIsIl9jIiwiX3NlbGYiLCJtb2RlbCIsInZhbHVlIiwiY2FsbGJhY2siLCIkJHYiLCJleHByZXNzaW9uIiwiYXR0cnMiLCJDb203cXY0MXNjbG96ejk3M2FEZW1vMCIsIkNvbTdxdjQxc2Nsb3p6OTczYURlbW8xIiwic3RhdGljQ2xhc3MiLCJfdiIsIl9tIiwicHJlIiwiU2Nyb2xsTnVtYmVyIiwiaW5zdGFsbCIsIlZ1ZSIsImNvbXBvbmVudCIsInByb3AiLCJldmVudCIsInR5cGUiLCJOdW1iZXIiLCJkZWZhdWx0IiwiaXNUaG91c2FuZFNwbGl0IiwiQm9vbGVhbiIsImxlbmd0aCIsImluaXROdW1BcnJheSIsImRpc3BsYXlOdW1BcnJheSIsImltbWVkaWF0ZSIsImhhbmRsZXIiLCJudW0iLCJudW1BcnJheSIsIm51bVRvQXJyYXkiLCJmb3JFYWNoIiwib3JkZXJOdW1JdGVtIiwiaXNOYU4iLCJwdXNoIiwiJG5leHRUaWNrIiwic2V0VGltZW91dCIsInNldE51bWJlclRyYW5zZm9ybSIsImNsZWFyVGltZW91dCIsIm1ldGhvZHMiLCJtYXhOdW1TdHIiLCJpIiwiZm9ybWF0TnVtIiwiU3RyaW5nIiwic3ViTGVuZ3RoIiwidGhvdXNhbmRTcGxpdCIsInNwbGl0IiwicmVwbGFjZSIsImRpc3BsYXlOdW1BcnJheUl0ZW0iLCJpbmRleCIsIiRyZWZzIiwiaXRlbVJlZiIsImNoaWxkcmVuIiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJfbCIsIml0ZW0iLCJrZXkiLCJyZWYiLCJyZWZJbkZvciIsImNsYXNzIiwiX3MiLCJhcGkiLCJjb250ZW50IiwiX19lc01vZHVsZSIsIm1vZHVsZSIsIm9wdGlvbnMiLCJleHBvcnRzIiwibG9jYWxzIiwiX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIl0sIm1hcHBpbmdzIjoid0dBQUEsSSxTQ0ErUCxFQ01oUCxDQUNmQSxLQUFBLGlCQUNBQyxNQUFBLEdBQ0FDLFVBQ0EsQ0FDQUMsTUFBQSxJQUdBQyxXQUFBLENBQ0FDLHlCQUVBQyxNQUFBLEdBQ0FDLFNBQUEsR0FDQUMsWUFDQUMsVUFDQSxJQUFBQyxFQUFBQyxZQUFBLEtBQ0EsS0FBQVIsT0FBQSxLQUNBLEtBQ0EsS0FBQVMsTUFBQSwwQkFDQUMsY0FBQUgsTUFHQUksbUIsT0NWZSxFQVhDLFlBQ2QsR0hSVyxXQUFrQixJQUFJQyxFQUFJQyxLQUFxQixPQUFPQyxFQUFwQkYsRUFBSUcsTUFBTUQsSUFBYSxnQkFBZ0IsQ0FBQ0UsTUFBTSxDQUFDQyxNQUFPTCxFQUFJWixNQUFPa0IsU0FBUyxTQUFVQyxHQUFNUCxFQUFJWixNQUFNbUIsR0FBS0MsV0FBVyxhQUU3SSxJR1NwQixFQUNBLEtBQ0EsV0FDQSxNLFFDZDZQLEVGTWhQLENBQ2Z2QixLQUFBLGlCQUNBQyxNQUFBLEdBQ0FDLFVBQ0EsQ0FDQUMsTUFBQSxJQUdBQyxXQUFBLENBQ0FDLHlCQUVBQyxNQUFBLEdBQ0FDLFNBQUEsR0FDQUMsWUFDQUMsVUFDQSxJQUFBQyxFQUFBQyxZQUFBLEtBQ0EsS0FBQVIsT0FBQSxJQUNBLEtBQ0EsS0FBQVMsTUFBQSwwQkFDQUMsY0FBQUgsTUFHQUksbUJHVmUsRUFYQyxZQUNkLEdMUlcsV0FBa0IsSUFBSUMsRUFBSUMsS0FBcUIsT0FBT0MsRUFBcEJGLEVBQUlHLE1BQU1ELElBQWEsZ0JBQWdCLENBQUNPLE1BQU0sQ0FBQyxPQUFTLEdBQUdMLE1BQU0sQ0FBQ0MsTUFBT0wsRUFBSVosTUFBT2tCLFNBQVMsU0FBVUMsR0FBTVAsRUFBSVosTUFBTW1CLEdBQUtDLFdBQVcsYUFFaEssSUtTcEIsRUFDQSxLQUNBLFdBQ0EsTSxRQ2Q2UCxFSk1oUCxDQUNmdkIsS0FBQSxpQkFDQUMsTUFBQSxHQUNBQyxVQUNBLENBQ0FDLE1BQUEsSUFHQUMsV0FBQSxDQUNBQyx5QkFFQUMsTUFBQSxHQUNBQyxTQUFBLEdBQ0FDLFlBQ0FDLFVBQ0EsSUFBQUMsRUFBQUMsWUFBQSxLQUNBLEtBQUFSLE9BQUEsS0FDQSxLQUNBLEtBQUFTLE1BQUEsMEJBQ0FDLGNBQUFILE1BR0FJLG1CSzVCd08sRUxpTXhPLENBQ0FkLEtBQUEsZUFDQUksV0FBQSxDQUNBLHdCQUFBcUIsRUFBQSx3QkFBQUMsRUFBQSx3Qk03TGdCLFlBQ2QsR1JSVyxXQUFrQixJQUFJWCxFQUFJQyxLQUFxQixPQUFPQyxFQUFwQkYsRUFBSUcsTUFBTUQsSUFBYSxnQkFBZ0IsQ0FBQ08sTUFBTSxDQUFDLGlCQUFrQixHQUFNTCxNQUFNLENBQUNDLE1BQU9MLEVBQUlaLE1BQU9rQixTQUFTLFNBQVVDLEdBQU1QLEVBQUlaLE1BQU1tQixHQUFLQyxXQUFXLGFBRTVLLElRU3BCLEVBQ0EsS0FDQSxXQUNBLE0sVUNQRSxFQUFZLFlBQ2QsR1RSVyxXQUFrQixJQUFJUixFQUFJQyxLQUFLQyxFQUFHRixFQUFJRyxNQUFNRCxHQUFHLE9BQU9BLEVBQUcsTUFBTSxDQUFDVSxZQUFZLHNCQUFzQixDQUFDVixFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxhQUFhYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsTUFBTSxDQUFDVSxZQUFZLG9CQUFvQixDQUFDVixFQUFHLDJCQUEyQkYsRUFBSWEsR0FBRyxLQUFLYixFQUFJYyxHQUFHLElBQUksR0FBR2QsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxtQkFBbUJiLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxNQUFNLENBQUNVLFlBQVksb0JBQW9CLENBQUNWLEVBQUcsMkJBQTJCRixFQUFJYSxHQUFHLEtBQUtiLEVBQUljLEdBQUcsSUFBSSxHQUFHZCxFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLGVBQWViLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxNQUFNLENBQUNVLFlBQVksb0JBQW9CLENBQUNWLEVBQUcsMkJBQTJCRixFQUFJYSxHQUFHLEtBQUtiLEVBQUljLEdBQUcsSUFBSSxHQUFHZCxFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLFNBQVNiLEVBQUlhLEdBQUcsS0FBS2IsRUFBSWMsR0FBRyxPQUV0bEIsQ0FBQyxXQUFZLElBQWFaLEVBQUwsS0FBWUMsTUFBTUQsR0FBRyxPQUFPQSxFQUFHLE1BQU0sQ0FBQ1UsWUFBWSxzQkFBc0IsQ0FBQ1YsRUFBRyxNQUFNLENBQUNVLFlBQVksOEJBQThCLENBQUNWLEVBQUcsTUFBTSxDQUFDQSxFQUFHLE9BQU8sQ0FBQ2EsS0FBSSxFQUFLTixNQUFNLENBQUMsTUFBUSxTQUFTLENBQXBMLEtBQXlMSSxHQUFHLDhsQkFBNUwsS0FBdXlCQSxHQUFHLEtBQUtYLEVBQUcsTUFBTSxDQUFDVSxZQUFZLGVBQWUsQ0FBcDFCLEtBQXkxQkMsR0FBRyxhQUNyNEIsV0FBWSxJQUFhWCxFQUFMLEtBQVlDLE1BQU1ELEdBQUcsT0FBT0EsRUFBRyxNQUFNLENBQUNVLFlBQVksc0JBQXNCLENBQUNWLEVBQUcsTUFBTSxDQUFDVSxZQUFZLDhCQUE4QixDQUFDVixFQUFHLE1BQU0sQ0FBQ0EsRUFBRyxPQUFPLENBQUNhLEtBQUksRUFBS04sTUFBTSxDQUFDLE1BQVEsU0FBUyxDQUFwTCxLQUF5TEksR0FBRyx5bUJBQTVMLEtBQW96QkEsR0FBRyxLQUFLWCxFQUFHLE1BQU0sQ0FBQ1UsWUFBWSxlQUFlLENBQWoyQixLQUFzMkJDLEdBQUcsYUFDNzNCLFdBQVksSUFBYVgsRUFBTCxLQUFZQyxNQUFNRCxHQUFHLE9BQU9BLEVBQUcsTUFBTSxDQUFDVSxZQUFZLHNCQUFzQixDQUFDVixFQUFHLE1BQU0sQ0FBQ1UsWUFBWSw4QkFBOEIsQ0FBQ1YsRUFBRyxNQUFNLENBQUNBLEVBQUcsT0FBTyxDQUFDYSxLQUFJLEVBQUtOLE1BQU0sQ0FBQyxNQUFRLFNBQVMsQ0FBcEwsS0FBeUxJLEdBQUcsc25CQUE1TCxLQUFpMEJBLEdBQUcsS0FBS1gsRUFBRyxNQUFNLENBQUNVLFlBQVksZUFBZSxDQUE5MkIsS0FBbTNCQyxHQUFHLGFBQzE0QixXQUFZLElBQUliLEVBQUksS0FBS0UsRUFBR0YsRUFBSUcsTUFBTUQsR0FBRyxPQUFPQSxFQUFHLFFBQVEsQ0FBQ0EsRUFBRyxRQUFRLENBQUNBLEVBQUcsS0FBSyxDQUFDQSxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxRQUFRYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLFFBQVFiLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsUUFBUWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxhQUFhYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsUUFBUSxDQUFDQSxFQUFHLEtBQUssQ0FBQ0EsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsYUFBYWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxTQUFTYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLFlBQVliLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsU0FBU2IsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0EsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsWUFBWWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxZQUFZYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLFlBQVliLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsU0FBU2IsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0EsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcscUJBQXFCYixFQUFJYSxHQUFHLEtBQUtYLEVBQUcsS0FBSyxDQUFDRixFQUFJYSxHQUFHLGNBQWNiLEVBQUlhLEdBQUcsS0FBS1gsRUFBRyxLQUFLLENBQUNGLEVBQUlhLEdBQUcsYUFBYWIsRUFBSWEsR0FBRyxLQUFLWCxFQUFHLEtBQUssQ0FBQ0YsRUFBSWEsR0FBRyxvQlNNenRCLEVBQ0EsS0FDQSxLQUNBLE1BSWEsWSwwQ0NsQmYsb0JBVUFHLFVBQWFDLFFBQVUsU0FBU0MsR0FDOUJBLEVBQUlDLFVBQVVILFVBQWEvQixLQUFNK0IsWUFHcEJBLFlBQVksUyw4Q0NkM0IsSUNBK00sRUNnQmhNLENBQ2YvQixLQUFBLGVBQ0FtQixNQUFBLENBQ0FnQixLQUFBLFFBQ0FDLE1BQUEsWUFFQW5DLE1BQUEsQ0FDQUUsTUFBQSxDQUNBa0MsS0FBQUMsT0FDQUMsUUFBQSxHQUVBQyxnQkFBQSxDQUNBSCxLQUFBSSxRQUNBRixTQUFBLEdBTUFHLE9BQUEsQ0FDQUwsS0FBQUMsT0FDQUMsUUFBQSxJQUdBckMsVUFDQSxDQUNBeUMsYUFBQSxNQUNBQyxnQkFBQSxLQUdBdEMsTUFBQSxDQUNBSCxNQUFBLENBQ0EwQyxXQUFBLEVBQ0FDLFFBQUEsV0FDQSxNQUFBQyxFQUFBLEtBQUE1QyxNQUNBNkMsRUFBQSxLQUFBQyxXQUFBRixHQUNBLEtBQUFKLGFBQUEsR0FDQUssRUFBQUUsUUFBQUMsSUFDQUMsTUFBQUQsR0FDQSxLQUFBUixhQUFBVSxLQUFBLEtBRUEsS0FBQVYsYUFBQVUsS0FBQSxPQUdBLEtBQUFULGdCQUFBSSxFQUNBLEtBQUFNLFVBQUEsS0FDQSxNQUFBNUMsRUFBQTZDLFdBQUEsS0FDQSxLQUFBQyxxQkFDQUMsYUFBQS9DLElBQ0EsUUFLQUQsWUFDQWlELFFBQUEsQ0FDQVQsV0FBQUYsR0FDQSxhQUFBUCxnQkFBQSxDQUNBLFFBQUFFLE9BQUEsQ0FFQSxJQUFBaUIsRUFBQSxHQUNBLFFBQUFDLEVBQUEsRUFBQUEsRUFBQSxLQUFBbEIsT0FBQWtCLElBQ0FELEdBQUEsSUFFQXJCLE9BQUFxQixHQUFBckIsRUFPQSxJQUFBdUIsRUFBQSxHQUNBLEdBQUFDLE9BQUFmLEdBQUFMLFFBQUEsS0FBQUEsT0FBQSxDQUNBLE1BQUFxQixFQUFBLEtBQUFyQixPQUFBb0IsT0FBQWYsR0FBQUwsT0FDQW1CLEVBQUFDLE9BQUFmLEdBQ0EsUUFBQWEsRUFBQSxFQUFBQSxFQUFBRyxFQUFBSCxJQUNBQyxFQUFBLElBQUFBLEVBSUEsWUFBQUcsY0FBQUgsR0FBQUksTUFBQSxJQUVBLFlBQUFELGNBQUFqQixHQUFBa0IsTUFBQSxJQUdBLE9BQUFILE9BQUFmLEdBQUFrQixNQUFBLEtBSUFELGNBQUFqQixJQUVBQSxFQUFBLElBQUFtQixRQURBLHdCQUNBLE9BR0FWLHFCQUNBLEtBQUFaLGdCQUFBTSxRQUFBLENBQUFpQixFQUFBQyxLQUNBLElBQUFoQixNQUFBZSxHQUFBLENBQ0EsS0FBQUUsTUFBQUMsUUFBQUYsR0FBQUcsU0FBQSxHQUFBQSxTQUFBLEdBQ0FDLE1BQUFDLFVBQUEsdUJBQUFOLFksZ0JDMUdJakMsRUFBWSxZQUNkLEdIVFcsV0FBa0IsSUFBSW5CLEVBQUlDLEtBQUtDLEVBQUdGLEVBQUlHLE1BQU1ELEdBQUcsT0FBT0EsRUFBRyxNQUFNLENBQUNVLFlBQVksbUJBQW1CWixFQUFJMkQsR0FBSTNELEVBQUk0QixjQUFjLFNBQVNnQyxFQUFLUCxHQUFPLE9BQU9uRCxFQUFHLEtBQUssQ0FBQzJELElBQUlSLEVBQU1TLElBQUksVUFBVUMsVUFBUyxFQUFLQyxNQUFNLENBQUUsZUFBZ0IzQixNQUFNdUIsR0FBTyxZQUFhdkIsTUFBTXVCLEtBQVMsQ0FBR3ZCLE1BQU11QixHQUFtRDFELEVBQUcsT0FBTyxDQUFDVSxZQUFZLFNBQVMsQ0FBQ1osRUFBSWEsR0FBR2IsRUFBSWlFLEdBQUdMLE1BQTNGMUQsRUFBRyxPQUFPLENBQUNBLEVBQUcsSUFBSSxDQUFDRixFQUFJYSxHQUFHLHVCQUE4RSxLQUVwWCxJR1VwQixFQUNBLEtBQ0EsV0FDQSxNQUlhLFVBQUFNLEUsNkJDbkJmLElBQUkrQyxFQUFNLEVBQVEsR0FDRkMsRUFBVSxFQUFRLEtBSUMsaUJBRnZCQSxFQUFVQSxFQUFRQyxXQUFhRCxFQUFRM0MsUUFBVTJDLEtBRy9DQSxFQUFVLENBQUMsQ0FBQ0UsRUFBT3hCLEVBQUlzQixFQUFTLE1BRzlDLElBQUlHLEVBQVUsQ0FFZCxPQUFpQixPQUNqQixXQUFvQixHQUVQSixFQUFJQyxFQUFTRyxHQUkxQkQsRUFBT0UsUUFBVUosRUFBUUssUUFBVSxJLGlDQ2xCbkMsUSxxQkNFQUQsRUFEa0MsRUFBUSxFQUNoQ0UsRUFBNEIsSUFFOUJuQyxLQUFLLENBQUMrQixFQUFPeEIsRUFBSSwyOUNBQTQ5QyxLQUVyL0N3QixFQUFPRSxRQUFVQSIsImZpbGUiOiJqcy8xOC43OTZiNzUwOGJlMjM1Y2RlZWNiZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKXt2YXIgX3ZtPXRoaXMsX2M9X3ZtLl9zZWxmLl9jO3JldHVybiBfYygnRHluYW1pY051bWJlcicse2F0dHJzOntcImlzVGhvdXNhbmRTcGxpdFwiOnRydWV9LG1vZGVsOnt2YWx1ZTooX3ZtLmNvdW50KSxjYWxsYmFjazpmdW5jdGlvbiAoJCR2KSB7X3ZtLmNvdW50PSQkdn0sZXhwcmVzc2lvbjpcImNvdW50XCJ9fSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbWFya2Rvd24tdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0xIS4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MFwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP2NhY2hlRGlyZWN0b3J5IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9tYXJrZG93bi12dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTEhLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0wXCIiLCJtb2R1bGUuZXhwb3J0cyA9IFxuICAgICAgICA8dGVtcGxhdGU+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidnVlLWRlbW8tY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPGg0PjEuIOWfuuehgOeUqOazlTwvaDQ+XG48ZGl2IGNsYXNzPVwidnVlLWRlbW8td3JhcHBlclwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPENvbTdxdjQxc2Nsb3p6OTczYURlbW8wPjwvQ29tN3F2NDFzY2xveno5NzNhRGVtbzA+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLWhpZ2hsaWdodFwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLWhpZ2hsaWdodC1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHByZT48Y29kZSBjbGFzcz1cImh0bWxcIiB2LXByZSA+Jmx0O3RlbXBsYXRlJmd0O1xuICAmbHQ7RHluYW1pY051bWJlciB2LW1vZGVsPSZxdW90O2NvdW50JnF1b3Q7LyZndDtcbiZsdDsvdGVtcGxhdGUmZ3Q7XG5cbiZsdDtzY3JpcHQmZ3Q7XG5pbXBvcnQgRHluYW1pY051bWJlciBmcm9tICZxdW90O0AvcGFja2FnZXMvZHluYW1pYy1udW1iZXImcXVvdDs7XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICZxdW90O2R5bmFtaWMtbnVtYmVyJnF1b3Q7LFxuICBwcm9wczoge30sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNvdW50OiAwLFxuICAgIH07XG4gIH0sXG4gIGNvbXBvbmVudHM6IHtcbiAgICBEeW5hbWljTnVtYmVyLFxuICB9LFxuICB3YXRjaDoge30sXG4gIGNvbXB1dGVkOiB7fSxcbiAgY3JlYXRlZCgpIHt9LFxuICBtb3VudGVkKCkge1xuICAgIGxldCB0aW1lciA9IHNldEludGVydmFsKCgpID0mZ3Q7IHtcbiAgICAgIHRoaXMuY291bnQgKz0gMTIzO1xuICAgIH0sIDEwMDApO1xuICAgIHRoaXMuJG9uY2UoJnF1b3Q7aG9vazpiZWZvcmVEZXN0cm95JnF1b3Q7LCAoKSA9Jmd0OyB7XG4gICAgICBjbGVhckludGVydmFsKHRpbWVyKTtcbiAgICB9KTtcbiAgfSxcbiAgYmVmb3JlRGVzdHJveSgpIHt9LFxufTtcbiZsdDsvc2NyaXB0Jmd0O1xuXG4mbHQ7c3R5bGUgbGFuZz0mcXVvdDtsZXNzJnF1b3Q7IHNjb3BlZCZndDsmbHQ7L3N0eWxlJmd0O1xuPC9jb2RlPjwvcHJlPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2RlLWZvbGRlclwiPuaYvuekuuS7o+eggTwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8L2Rpdj5cbjxoND4yLiDmjIflrprmlbDlrZfmnIDlpKfmmL7npLrplb/luqY8L2g0PlxuPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLXdyYXBwZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxDb203cXY0MXNjbG96ejk3M2FEZW1vMT48L0NvbTdxdjQxc2Nsb3p6OTczYURlbW8xPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2dWUtZGVtby1oaWdobGlnaHRcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2dWUtZGVtby1oaWdobGlnaHQtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxwcmU+PGNvZGUgY2xhc3M9XCJodG1sXCIgdi1wcmUgPiZsdDt0ZW1wbGF0ZSZndDtcbiAgJmx0O0R5bmFtaWNOdW1iZXIgdi1tb2RlbD0mcXVvdDtjb3VudCZxdW90OyA6bGVuZ3RoPSZxdW90OzImcXVvdDsvJmd0O1xuJmx0Oy90ZW1wbGF0ZSZndDtcblxuJmx0O3NjcmlwdCZndDtcbmltcG9ydCBEeW5hbWljTnVtYmVyIGZyb20gJnF1b3Q7QC9wYWNrYWdlcy9keW5hbWljLW51bWJlciZxdW90OztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJnF1b3Q7ZHluYW1pYy1udW1iZXImcXVvdDssXG4gIHByb3BzOiB7fSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY291bnQ6IDAsXG4gICAgfTtcbiAgfSxcbiAgY29tcG9uZW50czoge1xuICAgIER5bmFtaWNOdW1iZXIsXG4gIH0sXG4gIHdhdGNoOiB7fSxcbiAgY29tcHV0ZWQ6IHt9LFxuICBjcmVhdGVkKCkge30sXG4gIG1vdW50ZWQoKSB7XG4gICAgbGV0IHRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPSZndDsge1xuICAgICAgdGhpcy5jb3VudCArPSAxMjtcbiAgICB9LCAxMDAwKTtcbiAgICB0aGlzLiRvbmNlKCZxdW90O2hvb2s6YmVmb3JlRGVzdHJveSZxdW90OywgKCkgPSZndDsge1xuICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7XG4gICAgfSk7XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3koKSB7fSxcbn07XG4mbHQ7L3NjcmlwdCZndDtcblxuJmx0O3N0eWxlIGxhbmc9JnF1b3Q7bGVzcyZxdW90OyBzY29wZWQmZ3Q7Jmx0Oy9zdHlsZSZndDtcbjwvY29kZT48L3ByZT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29kZS1mb2xkZXJcIj7mmL7npLrku6PnoIE8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPC9kaXY+XG48aDQ+My4g5L2/55So5Y2D5YiG5YiG5YmyPC9oND5cbjxkaXYgY2xhc3M9XCJ2dWUtZGVtby13cmFwcGVyXCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8Q29tN3F2NDFzY2xveno5NzNhRGVtbzI+PC9Db203cXY0MXNjbG96ejk3M2FEZW1vMj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidnVlLWRlbW8taGlnaGxpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidnVlLWRlbW8taGlnaGxpZ2h0LWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8cHJlPjxjb2RlIGNsYXNzPVwiaHRtbFwiIHYtcHJlID4mbHQ7dGVtcGxhdGUmZ3Q7XG4gICZsdDtEeW5hbWljTnVtYmVyIHYtbW9kZWw9JnF1b3Q7Y291bnQmcXVvdDsgOmlzVGhvdXNhbmRTcGxpdD0mcXVvdDt0cnVlJnF1b3Q7LyZndDtcbiZsdDsvdGVtcGxhdGUmZ3Q7XG5cbiZsdDtzY3JpcHQmZ3Q7XG5pbXBvcnQgRHluYW1pY051bWJlciBmcm9tICZxdW90O0AvcGFja2FnZXMvZHluYW1pYy1udW1iZXImcXVvdDs7XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICZxdW90O2R5bmFtaWMtbnVtYmVyJnF1b3Q7LFxuICBwcm9wczoge30sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNvdW50OiAwLFxuICAgIH07XG4gIH0sXG4gIGNvbXBvbmVudHM6IHtcbiAgICBEeW5hbWljTnVtYmVyLFxuICB9LFxuICB3YXRjaDoge30sXG4gIGNvbXB1dGVkOiB7fSxcbiAgY3JlYXRlZCgpIHt9LFxuICBtb3VudGVkKCkge1xuICAgIGxldCB0aW1lciA9IHNldEludGVydmFsKCgpID0mZ3Q7IHtcbiAgICAgIHRoaXMuY291bnQgKz0gMTIzO1xuICAgIH0sIDEwMDApO1xuICAgIHRoaXMuJG9uY2UoJnF1b3Q7aG9vazpiZWZvcmVEZXN0cm95JnF1b3Q7LCAoKSA9Jmd0OyB7XG4gICAgICBjbGVhckludGVydmFsKHRpbWVyKTtcbiAgICB9KTtcbiAgfSxcbiAgYmVmb3JlRGVzdHJveSgpIHt9LFxufTtcbiZsdDsvc2NyaXB0Jmd0O1xuXG4mbHQ7c3R5bGUgbGFuZz0mcXVvdDtsZXNzJnF1b3Q7IHNjb3BlZCZndDsmbHQ7L3N0eWxlJmd0O1xuPC9jb2RlPjwvcHJlPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2RlLWZvbGRlclwiPuaYvuekuuS7o+eggTwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8L2Rpdj5cbjxoMz5BUEk8L2gzPlxuPHRhYmxlPlxuPHRoZWFkPlxuPHRyPlxuPHRoPuWxnuaApzwvdGg+XG48dGg+6K+05piOPC90aD5cbjx0aD7nsbvlnos8L3RoPlxuPHRoPum7mOiupOWAvDwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0cj5cbjx0ZD52LW1vZGFsPC90ZD5cbjx0ZD7nu5HlrprlgLw8L3RkPlxuPHRkPk51bWJlcjwvdGQ+XG48dGQ+MDwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPmxlbmd0aDwvdGQ+XG48dGQ+5pyA5aSn5pi+56S66ZW/5bqmPC90ZD5cbjx0ZD5OdW1iZXI8L3RkPlxuPHRkPjk8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5pc1Rob3VzYW5kU3BsaXQ8L3RkPlxuPHRkPuaYr+WQpuS9v+eUqOWNg+WIhuWIhuWJsjwvdGQ+XG48dGQ+Qm9vbGVhbjwvdGQ+XG48dGQ+ZmFsc2U8L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC90ZW1wbGF0ZT5cblxuICAgICAgICA8c2NyaXB0PlxuICAgICAgICAgICAgaW1wb3J0IENvbTdxdjQxc2Nsb3p6OTczYURlbW8wIGZyb20gXCIuL2R5bmFtaWMtbnVtYmVyLm1kP2ZlbmNlJmNvbXBvbmVudEluZGV4PTBcIjtpbXBvcnQgQ29tN3F2NDFzY2xveno5NzNhRGVtbzEgZnJvbSBcIi4vZHluYW1pYy1udW1iZXIubWQ/ZmVuY2UmY29tcG9uZW50SW5kZXg9MVwiO2ltcG9ydCBDb203cXY0MXNjbG96ejk3M2FEZW1vMiBmcm9tIFwiLi9keW5hbWljLW51bWJlci5tZD9mZW5jZSZjb21wb25lbnRJbmRleD0yXCI7XG4gICAgICAgICAgICBleHBvcnQgZGVmYXVsdCB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ0NvbXBvbmVudERvYycsXG4gICAgICAgICAgICAgICAgY29tcG9uZW50czoge1xuICAgICAgICAgICAgICAgICAgICAnQ29tN3F2NDFzY2xveno5NzNhRGVtbzAnOiBDb203cXY0MXNjbG96ejk3M2FEZW1vMCwnQ29tN3F2NDFzY2xveno5NzNhRGVtbzEnOiBDb203cXY0MXNjbG96ejk3M2FEZW1vMSwnQ29tN3F2NDFzY2xveno5NzNhRGVtbzInOiBDb203cXY0MXNjbG96ejk3M2FEZW1vMlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIDwvc2NyaXB0PlxuICAgICIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NTE1ZmI0MGEmc2NvcGVkPXRydWUmZmVuY2UmY29tcG9uZW50SW5kZXg9MFwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2R5bmFtaWMtbnVtYmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTBcIlxuZXhwb3J0ICogZnJvbSBcIi4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MFwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI1MTVmYjQwYVwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL21hcmtkb3duLXZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMSEuL2R5bmFtaWMtbnVtYmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTFcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbWFya2Rvd24tdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0xIS4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MVwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zYWQ2YjRmZSZzY29wZWQ9dHJ1ZSZmZW5jZSZjb21wb25lbnRJbmRleD0xXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MVwiXG5leHBvcnQgKiBmcm9tIFwiLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0xXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjNhZDZiNGZlXCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbWFya2Rvd24tdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0xIS4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP2NhY2hlRGlyZWN0b3J5IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9tYXJrZG93bi12dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTEhLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0yXCIiLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP2NhY2hlRGlyZWN0b3J5IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9tYXJrZG93bi12dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTEhLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP2NhY2hlRGlyZWN0b3J5IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9tYXJrZG93bi12dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTEhLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD00MWNhNTZhNCZzY29wZWQ9dHJ1ZSZmZW5jZSZjb21wb25lbnRJbmRleD0yXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vZHluYW1pYy1udW1iZXIubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MlwiXG5leHBvcnQgKiBmcm9tIFwiLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0yXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjQxY2E1NmE0XCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9keW5hbWljLW51bWJlci5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yZmQxNGUwMFwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2R5bmFtaWMtbnVtYmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL2R5bmFtaWMtbnVtYmVyLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsIi8qXG4gKiBAQXV0aG9yOiBhdGRvd1xuICogQERhdGU6IDIwMjEtMDYtMTcgMTA6Mzk6NDJcbiAqIEBMYXN0RWRpdG9yczogbnVsbFxuICogQExhc3RFZGl0VGltZTogMjAyMS0wNi0xNyAxNjoxNTo1NlxuICogQERlc2NyaXB0aW9uOiBmaWxlIGRlc2NyaXB0aW9uXG4gKi9cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmltcG9ydCBTY3JvbGxOdW1iZXIgZnJvbSAnLi9zcmMvaW5kZXgnXG5TY3JvbGxOdW1iZXIuaW5zdGFsbCA9IGZ1bmN0aW9uKFZ1ZSkge1xuICBWdWUuY29tcG9uZW50KFNjcm9sbE51bWJlci5uYW1lLCBTY3JvbGxOdW1iZXIpXG59XG5cbmV4cG9ydCBkZWZhdWx0IFNjcm9sbE51bWJlclxuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpe3ZhciBfdm09dGhpcyxfYz1fdm0uX3NlbGYuX2M7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcInMtc2Nyb2xsLW51bWJlclwifSxfdm0uX2woKF92bS5pbml0TnVtQXJyYXkpLGZ1bmN0aW9uKGl0ZW0saW5kZXgpe3JldHVybiBfYygnbGknLHtrZXk6aW5kZXgscmVmOlwiaXRlbVJlZlwiLHJlZkluRm9yOnRydWUsY2xhc3M6eyAnbnVtYmVyLWl0ZW0nOiAhaXNOYU4oaXRlbSksICdtYXJrLWl0ZW0nOiBpc05hTihpdGVtKSB9fSxbKCFpc05hTihpdGVtKSk/X2MoJ3NwYW4nLFtfYygnaScsW192bS5fdihcIjAxMjM0NTY3ODlcIildKV0pOl9jKCdzcGFuJyx7c3RhdGljQ2xhc3M6XCJjb21tYVwifSxbX3ZtLl92KF92bS5fcyhpdGVtKSldKV0pfSksMClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP2NhY2hlRGlyZWN0b3J5IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCI8dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJzLXNjcm9sbC1udW1iZXJcIj5cbiAgICA8bGlcbiAgICAgIDpjbGFzcz1cInsgJ251bWJlci1pdGVtJzogIWlzTmFOKGl0ZW0pLCAnbWFyay1pdGVtJzogaXNOYU4oaXRlbSkgfVwiXG4gICAgICB2LWZvcj1cIihpdGVtLCBpbmRleCkgaW4gaW5pdE51bUFycmF5XCJcbiAgICAgIDprZXk9XCJpbmRleFwiXG4gICAgICByZWY9XCJpdGVtUmVmXCJcbiAgICA+XG4gICAgICA8c3BhbiB2LWlmPVwiIWlzTmFOKGl0ZW0pXCI+XG4gICAgICAgIDxpPjAxMjM0NTY3ODk8L2k+XG4gICAgICA8L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz1cImNvbW1hXCIgdi1lbHNlPnt7IGl0ZW0gfX08L3NwYW4+XG4gICAgPC9saT5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ1Njcm9sbE51bWJlcicsXG4gIG1vZGVsOiB7XG4gICAgcHJvcDogJ2NvdW50JyxcbiAgICBldmVudDogJ3NldENvdW50JyxcbiAgfSxcbiAgcHJvcHM6IHtcbiAgICBjb3VudDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogMCxcbiAgICB9LFxuICAgIGlzVGhvdXNhbmRTcGxpdDoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIH0sXG4gICAgLyoqXG4gICAgICog5pyA5aSn6ZmQ5Yi26IyD5Zu0XG4gICAgICog5aaC5p6c5bCP5LqO5pyA5aSn6ZmQ5Yi277yM5YiZ5YmN6Z2i5Lya6KGlMFxuICAgICAqL1xuICAgIGxlbmd0aDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgZGVmYXVsdDogOSxcbiAgICB9LFxuICB9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpbml0TnVtQXJyYXk6IFsnMCddLCAvLyDliJ3lp4vljJbmmL7npLrnlKhcbiAgICAgIGRpc3BsYXlOdW1BcnJheTogW10sIC8vIOecn+ato+aYvuekuueahOaVsOaNrlxuICAgIH1cbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBjb3VudDoge1xuICAgICAgaW1tZWRpYXRlOiB0cnVlLFxuICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zdCBudW0gPSB0aGlzLmNvdW50XG4gICAgICAgIGNvbnN0IG51bUFycmF5ID0gdGhpcy5udW1Ub0FycmF5KG51bSlcbiAgICAgICAgdGhpcy5pbml0TnVtQXJyYXkgPSBbXVxuICAgICAgICBudW1BcnJheS5mb3JFYWNoKChvcmRlck51bUl0ZW0pID0+IHtcbiAgICAgICAgICBpZiAoaXNOYU4ob3JkZXJOdW1JdGVtKSkge1xuICAgICAgICAgICAgdGhpcy5pbml0TnVtQXJyYXkucHVzaCgnLCcpXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdE51bUFycmF5LnB1c2goJzAnKVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy5kaXNwbGF5TnVtQXJyYXkgPSBudW1BcnJheVxuICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7XG4gICAgICAgICAgY29uc3QgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2V0TnVtYmVyVHJhbnNmb3JtKClcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcilcbiAgICAgICAgICB9LCAwKVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBtb3VudGVkKCkge30sXG4gIG1ldGhvZHM6IHtcbiAgICBudW1Ub0FycmF5KG51bSkge1xuICAgICAgaWYgKHRoaXMuaXNUaG91c2FuZFNwbGl0ID09PSB0cnVlKSB7XG4gICAgICAgIGlmICh0aGlzLmxlbmd0aCkge1xuICAgICAgICAgIC8vIC0tLS0t5pyA5aSn6ZmQ5Yi26IyD5Zu05Yik5patc3RhcnQtLS0tLVxuICAgICAgICAgIGxldCBtYXhOdW1TdHIgPSAnJ1xuICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbWF4TnVtU3RyICs9ICc5J1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoTnVtYmVyKG1heE51bVN0cikgPCBudW0gJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2Fybign6LaF5Ye65LqG5pyA5aSn6ZmQ5Yi26IyD5Zu0JylcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRob3VzYW5kU3BsaXQobWF4TnVtU3RyKS5zcGxpdCgnJylcbiAgICAgICAgICAgIC8vIHJldHVybiBbXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gLS0tLS3mnIDlpKfpmZDliLbojIPlm7TliKTmlq1lbmQtLS0tLVxuICAgICAgICAgIC8vIC0tLS0t6KGlMHN0YXJ0LS0tLS1cbiAgICAgICAgICBsZXQgZm9ybWF0TnVtID0gJydcbiAgICAgICAgICBpZiAoU3RyaW5nKG51bSkubGVuZ3RoIDw9IHRoaXMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjb25zdCBzdWJMZW5ndGggPSB0aGlzLmxlbmd0aCAtIFN0cmluZyhudW0pLmxlbmd0aFxuICAgICAgICAgICAgZm9ybWF0TnVtID0gU3RyaW5nKG51bSlcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3ViTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgZm9ybWF0TnVtID0gJzAnICsgZm9ybWF0TnVtXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIC0tLS0t6KGlMGVuZC0tLS0tXG4gICAgICAgICAgcmV0dXJuIHRoaXMudGhvdXNhbmRTcGxpdChmb3JtYXROdW0pLnNwbGl0KCcnKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiB0aGlzLnRob3VzYW5kU3BsaXQobnVtKS5zcGxpdCgnJylcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFN0cmluZyhudW0pLnNwbGl0KCcnKVxuICAgICAgfVxuICAgIH0sXG4gICAgLy8g5Y2D5L2N5YiG5YmyXG4gICAgdGhvdXNhbmRTcGxpdChudW0pIHtcbiAgICAgIHZhciByZWcgPSAvXFxkezEsM30oPz0oXFxkezN9KSskKS9nXG4gICAgICByZXR1cm4gKG51bSArICcnKS5yZXBsYWNlKHJlZywgJyQmLCcpXG4gICAgfSxcbiAgICAvLyDmloflrZfmu5rliqhcbiAgICBzZXROdW1iZXJUcmFuc2Zvcm0oKSB7XG4gICAgICB0aGlzLmRpc3BsYXlOdW1BcnJheS5mb3JFYWNoKChkaXNwbGF5TnVtQXJyYXlJdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICBpZiAoIWlzTmFOKGRpc3BsYXlOdW1BcnJheUl0ZW0pKSB7XG4gICAgICAgICAgY29uc3QgZWxlbSA9IHRoaXMuJHJlZnMuaXRlbVJlZltpbmRleF0uY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF1cbiAgICAgICAgICBlbGVtLnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUoLTUwJSwgLSR7ZGlzcGxheU51bUFycmF5SXRlbSAqIDEwfSUpYFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0sXG4gIH0sXG59XG48L3NjcmlwdD5cbjxzdHlsZSBzY29wZWQgbGFuZz1cImxlc3NcIj5cbi8q5oC76YeP5rua5Yqo5pWw5a2X6K6+572uKi9cbi5zLXNjcm9sbC1udW1iZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwcHg7XG4gIGZvbnQtc2l6ZTogNTRweDtcbiAgbGluZS1oZWlnaHQ6IDQxcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgY29sb3I6ICMyZDdjZmY7XG4gIHdyaXRpbmctbW9kZTogdmVydGljYWwtbHI7XG4gIHRleHQtb3JpZW50YXRpb246IHVwcmlnaHQ7XG4gIC8q5paH5a2X56aB5q2i57yW6L6RKi9cbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsgLyrngavni5AqL1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOyAvKndlYmtpdOa1j+iniOWZqCovXG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTsgLypJRTEwKi9cbiAgLWtodG1sLXVzZXItc2VsZWN0OiBub25lOyAvKuaXqeacn+a1j+iniOWZqCovXG4gIHVzZXItc2VsZWN0OiBub25lO1xuICAvKiBvdmVyZmxvdzogaGlkZGVuOyAqL1xufVxuLyog6buY6K6k6YCX5Y+36K6+572uICovXG4ubWFyay1pdGVtIHtcbiAgd2lkdGg6IDEwcHg7XG4gIGhlaWdodDogMTAwcHg7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xuICBsaW5lLWhlaWdodDogMTBweDtcbiAgZm9udC1zaXplOiA0OHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICYgPiBzcGFuIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm90dG9tOiAwO1xuICAgIHdyaXRpbmctbW9kZTogdmVydGljYWwtcmw7XG4gICAgdGV4dC1vcmllbnRhdGlvbjogdXByaWdodDtcbiAgfVxufVxuLyrmu5rliqjmlbDlrZforr7nva4qL1xuLm51bWJlci1pdGVtIHtcbiAgd2lkdGg6IDQxcHg7XG4gIGhlaWdodDogNzVweDtcbiAgYmFja2dyb3VuZDogI2NjYztcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjUwLCAyNTAsIDI1MCwgMSk7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyMjEsIDIyMSwgMjIxLCAxKTtcbiAgJiA+IHNwYW4ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3cml0aW5nLW1vZGU6IHZlcnRpY2FsLXJsO1xuICAgIHRleHQtb3JpZW50YXRpb246IHVwcmlnaHQ7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAmID4gaSB7XG4gICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDExcHg7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDEwcHg7XG4gICAgfVxuICB9XG59XG4ubnVtYmVyLWl0ZW06bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cbjwvc3R5bGU+XG4iLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03MDM4ZjEyOCZzY29wZWQ9dHJ1ZVwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD03MDM4ZjEyOCZwcm9kJnNjb3BlZD10cnVlJmxhbmc9bGVzc1wiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI3MDM4ZjEyOFwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NzAzOGYxMjgmcHJvZCZzY29wZWQ9dHJ1ZSZsYW5nPWxlc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsImV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NzAzOGYxMjgmcHJvZCZzY29wZWQ9dHJ1ZSZsYW5nPWxlc3NcIiIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIvKuaAu+mHj+a7muWKqOaVsOWtl+iuvue9riovXFxuLnMtc2Nyb2xsLW51bWJlcltkYXRhLXYtNzAzOGYxMjhdIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGhlaWdodDogMTAwcHg7XFxuICBmb250LXNpemU6IDU0cHg7XFxuICBsaW5lLWhlaWdodDogNDFweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICBjb2xvcjogIzJkN2NmZjtcXG4gIHdyaXRpbmctbW9kZTogdmVydGljYWwtbHI7XFxuICB0ZXh0LW9yaWVudGF0aW9uOiB1cHJpZ2h0O1xcbiAgLyrmloflrZfnpoHmraLnvJbovpEqL1xcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcXG4gIC8q54Gr54uQKi9cXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAvKndlYmtpdOa1j+iniOWZqCovXFxuICAvKklFMTAqL1xcbiAgLyrml6nmnJ/mtY/op4jlmagqL1xcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAvKiBvdmVyZmxvdzogaGlkZGVuOyAqL1xcbn1cXG4vKiDpu5jorqTpgJflj7forr7nva4gKi9cXG4ubWFyay1pdGVtW2RhdGEtdi03MDM4ZjEyOF0ge1xcbiAgd2lkdGg6IDEwcHg7XFxuICBoZWlnaHQ6IDEwMHB4O1xcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XFxuICBsaW5lLWhlaWdodDogMTBweDtcXG4gIGZvbnQtc2l6ZTogNDhweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuLm1hcmstaXRlbSA+IHNwYW5bZGF0YS12LTcwMzhmMTI4XSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGJvdHRvbTogMDtcXG4gIHdyaXRpbmctbW9kZTogdmVydGljYWwtcmw7XFxuICB0ZXh0LW9yaWVudGF0aW9uOiB1cHJpZ2h0O1xcbn1cXG4vKua7muWKqOaVsOWtl+iuvue9riovXFxuLm51bWJlci1pdGVtW2RhdGEtdi03MDM4ZjEyOF0ge1xcbiAgd2lkdGg6IDQxcHg7XFxuICBoZWlnaHQ6IDc1cHg7XFxuICBiYWNrZ3JvdW5kOiAjY2NjO1xcbiAgbGlzdC1zdHlsZTogbm9uZTtcXG4gIG1hcmdpbi1yaWdodDogNXB4O1xcbiAgYmFja2dyb3VuZDogI2ZhZmFmYTtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7XFxufVxcbi5udW1iZXItaXRlbSA+IHNwYW5bZGF0YS12LTcwMzhmMTI4XSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdyaXRpbmctbW9kZTogdmVydGljYWwtcmw7XFxuICB0ZXh0LW9yaWVudGF0aW9uOiB1cHJpZ2h0O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuLm51bWJlci1pdGVtID4gc3BhbiA+IGlbZGF0YS12LTcwMzhmMTI4XSB7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDExcHg7XFxuICBsZWZ0OiA1MCU7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xcbiAgbGV0dGVyLXNwYWNpbmc6IDEwcHg7XFxufVxcbi5udW1iZXItaXRlbVtkYXRhLXYtNzAzOGYxMjhdOmxhc3QtY2hpbGQge1xcbiAgbWFyZ2luLXJpZ2h0OiAwO1xcbn1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==