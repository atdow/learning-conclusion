(window.webpackJsonp=window.webpackJsonp||[]).push([[10,38,39,47,51,82,83,89,108,109,115],{117:function(t,e,i){"use strict";i.r(e);var s={name:"ScrollbarExample",props:{},data:()=>({dataList:[],dataLength:100}),components:{VirtualListDynamicHeight:i(257).default},watch:{},computed:{},created(){this.dataList=[...Array(this.dataLength||0).keys()].map((t,e)=>({index:e,brandId:e+1,name:`第${e+1}项`,height:5*Math.floor(Math.max(10*Math.random(),5))})),console.log("this.dataList:",this.dataList)},mounted(){},methods:{scrollBottom(){console.log("scrollBottom")},scroll(t){console.log("data:",t)},scrollTopTest(){this.$refs.virtualListRef.resetToTop()}},beforeDestroy(){}},n=i(9),r={name:"ComponentDoc",components:{Comzzudh1q8lozr2kbiDemo0:Object(n.a)(s,(function(){var t=this,e=t._self._c;return e("div",[e("virtual-list-dynamic-height",{ref:"virtualListRef",attrs:{list:t.dataList,maxHeight:600},on:{scroll:t.scroll,scrollBottom:t.scrollBottom},scopedSlots:t._u([{key:"default",fn:function({data:i,index:s}){return e("div",{staticClass:"slot-item",style:{height:10===s||13===s?null:i.height+"px",background:s%2==0?"#ccc":"white"}},[t._v("\n      "+t._s(s)+":"+t._s(i)+"\n      "),10===s||13===s?e("img",{staticStyle:{height:"300px"},attrs:{src:"https://img2.baidu.com/it/u=3960765496,2398254827&fm=253&fmt=auto&app=138&f=JPEG?w=800&h=500",alt:""}}):t._e()])}}])}),t._v(" "),e("button",{staticStyle:{"margin-top":"10px"},on:{click:t.scrollTopTest}},[t._v("滚动到顶部")])],1)}),[],!1,null,"401ad2a8",null).exports}},o=Object(n.a)(r,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"vue-demo-container"},[e("h3",[t._v("1. 基本使用")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Comzzudh1q8lozr2kbiDemo0"),t._v(" "),t._m(0)],1),t._v(" "),e("h3",[t._v("API")]),t._v(" "),t._m(1),t._v(" "),e("h3",[t._v("事件")]),t._v(" "),t._m(2),t._v(" "),e("h3",[t._v("方法")]),t._v(" "),t._m(3)])}),[function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n  <div>\n    <virtual-list-dynamic-height \n      :list="dataList" \n      :maxHeight="600" \n      ref="virtualListRef"\n      @scroll="scroll"\n      @scrollBottom="scrollBottom"\n    >\n      <div\n        class="slot-item"\n        slot-scope="{ data, index }"\n        :style="{\n          height: index === 10 || index === 13 ? null : data.height + \'px\',\n          background: index % 2 === 0 ? \'#ccc\' : \'white\'\n        }"\n      >\n        {{ index }}:{{ data }}\n        <img\n          v-if="index === 10 || index === 13"\n          style="height: 300px"\n          src="https://img2.baidu.com/it/u=3960765496,2398254827&fm=253&fmt=auto&app=138&f=JPEG?w=800&h=500"\n          alt=""\n        />\n      </div>\n    </virtual-list-dynamic-height>\n    <button style="margin-top: 10px" @click="scrollTopTest">滚动到顶部</button>\n  </div>\n\n</template>\n<script>\nimport VirtualListDynamicHeight from "@/packages/VirtualListDynamicHeight";\nexport default {\n  name: "ScrollbarExample",\n  props: {},\n  data() {\n    return {\n      dataList: [],\n      dataLength: 100\n    };\n  },\n  components: {\n    VirtualListDynamicHeight,\n  },\n  watch: {},\n  computed: {},\n  created() {\n    this.dataList = [...Array(this.dataLength || 0).keys()].map((v, i) => ({\n      index: i,\n      brandId: i + 1,\n      name: `第${i + 1}项`,\n      height: Math.floor(Math.max(Math.random() * 10, 5)) * 5\n      // height: 40\n    }))\n    console.log(\'this.dataList:\', this.dataList)\n  },\n  mounted() {},\n  methods: {\n    scrollBottom() {\n      console.log(\'scrollBottom\')\n    },\n    scroll(data) {\n      console.log(\'data:\', data)\n    },\n    scrollTopTest() {\n      this.$refs.virtualListRef.resetToTop()\n    }\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("属性")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认值")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("data")]),t._v(" "),e("td",[t._v("数据")]),t._v(" "),e("td",[t._v("Array")]),t._v(" "),e("td",[t._v("[]")])]),t._v(" "),e("tr",[e("td",[t._v("itemHeight")]),t._v(" "),e("td",[t._v("每一项的高度")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("30")])]),t._v(" "),e("tr",[e("td",[t._v("maxHeight")]),t._v(" "),e("td",[t._v("最大高度")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("200")])]),t._v(" "),e("tr",[e("td",[t._v("fixedHeight")]),t._v(" "),e("td",[t._v("是否固定高度")]),t._v(" "),e("td",[t._v("Boolean")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("defaultUpdateToTop")]),t._v(" "),e("td",[t._v("当data更新时，是否自动滚到到顶部")]),t._v(" "),e("td",[t._v("Boolean")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("bufferCount")]),t._v(" "),e("td",[t._v("预渲染数据")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("3")])])])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("回调参数")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("scroll")]),t._v(" "),e("td",[t._v("滚动事件")]),t._v(" "),e("td",[t._v("(data) => void")])]),t._v(" "),e("tr",[e("td",[t._v("scrollBottom")]),t._v(" "),e("td",[t._v("滚动到底部事件")]),t._v(" "),e("td",[t._v("-")])])])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("参数")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("resetToTop")]),t._v(" "),e("td",[t._v("滚动到顶部")]),t._v(" "),e("td",[t._v("-")])])])])}],!1,null,null,null);e.default=o.exports},205:function(t,e,i){"use strict";i.r(e),i.d(e,"BAR_MAP",(function(){return n})),i.d(e,"renderThumbStyle",(function(){return r})),i.d(e,"on",(function(){return o})),i.d(e,"off",(function(){return a})),i.d(e,"toObject",(function(){return h}));const s=i(0).default.prototype.$isServer,n={vertical:{offset:"offsetHeight",scroll:"scrollTop",scrollSize:"scrollHeight",size:"height",key:"vertical",axis:"Y",client:"clientY",direction:"top"},horizontal:{offset:"offsetWidth",scroll:"scrollLeft",scrollSize:"scrollWidth",size:"width",key:"horizontal",axis:"X",client:"clientX",direction:"left"}};function r({move:t,size:e,bar:i}){const s={},n=`translate${i.axis}(${t}%)`;return s[i.size]=e,s.transform=n,s.msTransform=n,s.webkitTransform=n,s}const o=!s&&document.addEventListener?function(t,e,i){t&&e&&i&&t.addEventListener(e,i,!1)}:function(t,e,i){t&&e&&i&&t.attachEvent("on"+e,i)},a=!s&&document.removeEventListener?function(t,e,i){t&&e&&t.removeEventListener(e,i,!1)}:function(t,e,i){t&&e&&t.detachEvent("on"+e,i)};function l(t,e){for(const i in e)t[i]=e[i];return t}function h(t){var e={};for(let i=0;i<t.length;i++)t[i]&&l(e,t[i]);return e}},206:function(t,e,i){"use strict";i.r(e),i.d(e,"addResizeListener",(function(){return o})),i.d(e,"removeResizeListener",(function(){return a}));i(24);var s=i(300);const n="undefined"==typeof window,r=function(t){for(const e of t){const t=e.target.__resizeListeners__||[];t.length&&t.forEach(t=>{t()})}},o=function(t,e){n||(t.__resizeListeners__||(t.__resizeListeners__=[],t.__ro__=new s.default(r),t.__ro__.observe(t)),t.__resizeListeners__.push(e))},a=function(t,e){t&&t.__resizeListeners__&&(t.__resizeListeners__.splice(t.__resizeListeners__.indexOf(e),1),t.__resizeListeners__.length||t.__ro__.disconnect())}},207:function(t,e,i){"use strict";i.r(e);var s=i(0);let n;e.default=function(){if(s.default.prototype.$isServer)return 0;if(void 0!==n)return n;const t=document.createElement("div");t.className="sino-scrollbar__wrap",t.style.visibility="hidden",t.style.width="100px",t.style.position="absolute",t.style.top="-9999px",document.body.appendChild(t);const e=t.offsetWidth;t.style.overflow="scroll";const i=document.createElement("div");i.style.width="100%",t.appendChild(i);const r=i.offsetWidth;return t.parentNode.removeChild(t),n=e-r,n}},208:function(t,e,i){"use strict";i.r(e);var s=i(205);e.default={name:"Bar",props:{vertical:Boolean,size:String,move:Number},computed:{bar(){return s.BAR_MAP[this.vertical?"vertical":"horizontal"]},wrap(){return this.$parent.wrap}},render(t){const{size:e,move:i,bar:n}=this;return t("div",{class:["sino-scrollbar__bar","is-"+n.key],on:{mousedown:this.clickTrackHandler}},[t("div",{ref:"thumb",class:"sino-scrollbar__thumb",on:{mousedown:this.clickThumbHandler},style:Object(s.renderThumbStyle)({size:e,move:i,bar:n})})])},methods:{clickThumbHandler(t){t.ctrlKey||2===t.button||(this.startDrag(t),this[this.bar.axis]=t.currentTarget[this.bar.offset]-(t[this.bar.client]-t.currentTarget.getBoundingClientRect()[this.bar.direction]))},clickTrackHandler(t){const e=100*(Math.abs(t.target.getBoundingClientRect()[this.bar.direction]-t[this.bar.client])-this.$refs.thumb[this.bar.offset]/2)/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=e*this.wrap[this.bar.scrollSize]/100},startDrag(t){t.stopImmediatePropagation(),this.cursorDown=!0,Object(s.on)(document,"mousemove",this.mouseMoveDocumentHandler),Object(s.on)(document,"mouseup",this.mouseUpDocumentHandler),document.onselectstart=()=>!1},mouseMoveDocumentHandler(t){if(!1===this.cursorDown)return;const e=this[this.bar.axis];if(!e)return;const i=100*(-1*(this.$el.getBoundingClientRect()[this.bar.direction]-t[this.bar.client])-(this.$refs.thumb[this.bar.offset]-e))/this.$el[this.bar.offset];this.wrap[this.bar.scroll]=i*this.wrap[this.bar.scrollSize]/100},mouseUpDocumentHandler(t){this.cursorDown=!1,this[this.bar.axis]=0,Object(s.off)(document,"mousemove",this.mouseMoveDocumentHandler),document.onselectstart=null}},destroyed(){Object(s.off)(document,"mouseup",this.mouseUpDocumentHandler)}}},209:function(t,e,i){var s=i(2),n=i(299);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[t.i,n,""]]);var r={insert:"head",singleton:!1};s(n,r);t.exports=n.locals||{}},210:function(t,e,i){"use strict";i.r(e);var s=i(211);s.default.install=function(t){t.component(s.default.name,s.default)},e.default=s.default},211:function(t,e,i){"use strict";i.r(e);i(24);var s=i(206),n=i(207),r=i(205),o=i(208);i(209),e.default={name:"SinoScrollbar",components:{Bar:o.default},props:{native:Boolean,wrapStyle:{},wrapClass:{},viewClass:{},viewStyle:{},showHorizontalBar:{type:Boolean,default:!0},showVerticalBar:{type:Boolean,default:!0},noresize:Boolean,tag:{type:String,default:"div"}},data:()=>({sizeWidth:"0",sizeHeight:"0",moveX:0,moveY:0}),computed:{wrap(){return this.$refs.wrap}},render(t){const e=Object(n.default)();let i=this.wrapStyle;if(e){const t=`-${e}px`,s=`margin-bottom: ${t}; margin-right: ${t};`;Array.isArray(this.wrapStyle)?(i=Object(r.toObject)(this.wrapStyle),i.marginRight=i.marginBottom=t):"string"==typeof this.wrapStyle?i+=s:i=s,i+=`width: calc(100% + ${e}px);height: calc(100% + ${e}px);`}else i+="width: 100%;height: 100%;";const s=t(this.tag,{class:["sino-scrollbar__view",this.viewClass],style:this.viewStyle,ref:"resize"},this.$slots.default),a=t("div",{ref:"wrap",style:i,on:{scroll:this.handleScroll},class:[this.wrapClass,"sino-scrollbar__wrap",e?"":"sino-scrollbar__wrap--hidden-default"]},[[s]]);let l;return this.native?l=[t("div",{ref:"wrap",class:[this.wrapClass,"sino-scrollbar__wrap"],style:i},[[s]])]:(l=[a],this.showHorizontalBar&&l.push(t(o.default,{attrs:{move:this.moveX,size:this.sizeWidth}})),this.showVerticalBar&&l.push(t(o.default,{attrs:{vertical:!0,move:this.moveY,size:this.sizeHeight}}))),t("div",{class:"sino-scrollbar"},l)},methods:{handleScroll(t){const e=this.wrap;this.moveY=100*e.scrollTop/e.clientHeight,this.moveX=100*e.scrollLeft/e.clientWidth,this.$emit("scroll",{scrollTop:t.target.scrollTop,scrollLeft:t.target.scrollLeft,e:t}),t.target.scrollTop+t.target.offsetHeight>=t.target.scrollHeight&&(clearTimeout(this.timer),this.timer=setTimeout(()=>{this.$emit("scrollBottom")},100))},update(){let t="",e="";const i=this.wrap;i&&(t=100*i.clientHeight/i.scrollHeight,e=100*i.clientWidth/i.scrollWidth,this.sizeHeight=t<100?t+"%":"",this.sizeWidth=e<100?e+"%":"")},resetToTop(){this.wrap.scrollTop=0},scrollToTop(t){this.wrap.scrollTop=t}},mounted(){this.native||(this.$nextTick(this.update),!this.noresize&&Object(s.addResizeListener)(this.$refs.resize,this.update))},beforeDestroy(){this.native||!this.noresize&&Object(s.removeResizeListener)(this.$refs.resize,this.update)}}},226:function(t,e,i){"use strict";i.r(e);var s=i(206),n={props:{data:[Number,String,Object,Array],index:Number},data:()=>({}),mounted(){this.resizeResolve(),Object(s.addResizeListener)(this.$el,this.resizeResolve),this.$once("hook:beforeDestroy",()=>{this.$el&&this.resizeResolve&&Object(s.removeResizeListener)(this.$el,this.resizeResolve)})},methods:{resizeResolve(){this.$emit("update-height",{height:this.$el.getBoundingClientRect().height,index:this.index})}}},r=i(9),o=Object(r.a)(n,(function(){return(0,this._self._c)("li",{ref:"node"},[this._t("default",null,{data:this.data,index:this.index})],2)}),[],!1,null,null,null);e.default=o.exports},239:function(t,e,i){"use strict";i.r(e);i(337);var s=i(210),n=i(226),r={name:"VirtualListDynamicHeight",props:{list:{type:Array,default:function(){return[]}},maxHeight:{type:Number,default:600},isFixContainerHeight:{type:Boolean,default:!1},estimatedItemHeight:{type:Number,default:40},bufferItemCount:{type:Number,default:4}},data:()=>({contentHeight:0,dataList:[],visibleList:[],startIndex:0,endIndex:0,scrollTop:0,scrollBarHeight:0,itemHeightCache:[],itemTopCache:[]}),components:{SinoScrollbar:s.default,Item:n.default},computed:{},watch:{list:{immediate:!0,deep:!0,handler:function(){0!==this.list.length&&(this.dataList=this.list.map((t,e)=>({index:e,data:t})),this.generateEstimatedItemData(),this.update())}}},created(){this.contentHeight=this.maxHeight},mounted(){},methods:{generateEstimatedItemData(){const t=this.dataList.reduce((t,e,i)=>(this.itemHeightCache[i]={isEstimated:!0,height:this.estimatedItemHeight},this.itemTopCache[i]=0===i?0:this.itemTopCache[i-1]+this.estimatedItemHeight,t+this.estimatedItemHeight),0);this.scrollBarHeight=t},updateItemHeight({index:t,height:e}){this.itemHeightCache[t]={isEstimated:!1,height:e},this.updateContentHeight(),this.scrollBarHeight=this.itemHeightCache.reduce((t,e)=>t+e.height,0);const i=[0];for(let t=1,e=this.itemHeightCache.length;t<e;t++)i[t]=this.itemTopCache[t-1]+this.itemHeightCache[t-1].height;this.itemTopCache=i,this.update()},getStartIndex(){const t=this.scrollTop,e=this.itemTopCache;let i=-1,s=0,n=e.length-1,r=Math.floor((s+n)/2);for(;n-s>1;)if(t<e[r])n=r,r=Math.floor((s+n)/2);else{if(!(t>e[r]))return i=r,i;s=r,r=Math.floor((s+n)/2)}return i=s,i},getEndIndex(){var t;const e=this.scrollTop-this.itemTopCache[this.startIndex],i=(null===(t=this.$refs.scrollbarRef)||void 0===t?void 0:t.clientHeight)||this.maxHeight;let s=0,n=0;for(let t=this.startIndex;t<this.dataList.length&&s<i+e;t++)s+=this.itemHeightCache[t].height,n=t;return n+=this.bufferItemCount,n},update(){const t=this.getStartIndex();this.startIndex=t%2!=0?t-1:t,this.endIndex=this.getEndIndex(),this.visibleList=this.dataList.slice(this.startIndex,this.endIndex),this.$refs.contentRef&&(this.$refs.contentRef.style.webkitTransform=`translate3d(0, ${this.itemTopCache[this.startIndex]}px, 0)`)},onScroll(t){this.scrollTop=t.scrollTop,this.update()},updateContentHeight(){if(!this.isFixContainerHeight&&0===this.scrollTop&&this.itemHeightCache.every(t=>!1===t.isEstimated)){const t=this.itemHeightCache.reduce((t,e)=>t+e.height,0);t<this.contentHeight&&(this.contentHeight=t)}}}},o=(i(341),i(9)),a=Object(o.a)(r,(function(){var t=this,e=t._self._c;return e("SinoScrollbar",{ref:"scrollbarRef",staticClass:"virtual-list-dynamic-height",style:{height:t.contentHeight+"px"},on:{scroll:t.onScroll}},[e("div",{staticClass:"list-view-phantom",style:{height:t.scrollBarHeight+"px"}}),t._v(" "),e("ul",{ref:"contentRef"},t._l(t.visibleList,(function(i){return e("Item",{key:i.index,attrs:{data:i.data,index:i.index},on:{"update-height":t.updateItemHeight},scopedSlots:t._u([{key:"default",fn:function({data:e,index:i}){return t._t("default",null,{data:e,index:i})}}],null,!0)})})),1)])}),[],!1,null,"517cfe82",null);e.default=a.exports},257:function(t,e,i){"use strict";i.r(e);var s=i(239);s.default.install=function(t){t.component(s.default.name,s.default)},e.default=s.default},299:function(t,e,i){(e=i(3)(!1)).push([t.i,".sino-scrollbar__wrap {\n  overflow: scroll;\n  height: 100%;\n  width: 100%;\n}\n.sino-scrollbar {\n  overflow: hidden;\n  position: relative;\n}\n.sino-scrollbar__bar {\n  position: absolute;\n  right: 2px;\n  bottom: 2px;\n  z-index: 1;\n  border-radius: 4px;\n  opacity: 1;\n  transition: opacity 0.12s ease-out;\n}\n.sino-scrollbar__bar.is-horizontal {\n  height: 6px;\n  left: 2px;\n}\n.sino-scrollbar__bar.is-horizontal > div {\n  height: 100%;\n}\n.sino-scrollbar__bar.is-vertical {\n  width: 6px;\n  top: 2px;\n}\n.sino-scrollbar__bar.is-vertical > div {\n  width: 100%;\n}\n.sino-scrollbar__thumb {\n  position: relative;\n  display: block;\n  width: 0;\n  height: 0;\n  cursor: pointer;\n  border-radius: inherit;\n  background-color: rgba(180, 185, 210, 0.4);\n  transition: background-color 0.3s;\n}\n",""]),t.exports=e},315:function(t,e,i){var s=i(2),n=i(342);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[t.i,n,""]]);var r={insert:"head",singleton:!1};s(n,r);t.exports=n.locals||{}},337:function(t,e,i){"use strict";var s=i(52),n=i(338).left,r=i(339),o=i(98);s({target:"Array",proto:!0,forced:!i(340)&&o>79&&o<83||!r("reduce")},{reduce:function(t){var e=arguments.length;return n(this,t,e,e>1?arguments[1]:void 0)}})},338:function(t,e,i){"use strict";var s=i(53),n=i(54),r=i(97),o=i(55),a=TypeError,l=function(t){return function(e,i,l,h){s(i);var c=n(e),d=r(c),u=o(c),v=t?u-1:0,f=t?-1:1;if(l<2)for(;;){if(v in d){h=d[v],v+=f;break}if(v+=f,t?v<0:u<=v)throw new a("Reduce of empty array with no initial value")}for(;t?v>=0:u>v;v+=f)v in d&&(h=i(h,d[v],v,c));return h}};t.exports={left:l(!1),right:l(!0)}},339:function(t,e,i){"use strict";var s=i(6);t.exports=function(t,e){var i=[][t];return!!i&&s((function(){i.call(null,e||function(){return 1},1)}))}},340:function(t,e,i){"use strict";var s=i(4),n=i(26);t.exports="process"===n(s.process)},341:function(t,e,i){"use strict";i(315)},342:function(t,e,i){(e=i(3)(!1)).push([t.i,".virtual-list-dynamic-height[data-v-517cfe82] .sino-scrollbar__view {\n  position: relative;\n}\n.virtual-list-dynamic-height .list-view-phantom[data-v-517cfe82] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  z-index: -1;\n}\nul[data-v-517cfe82] {\n  background: white;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,