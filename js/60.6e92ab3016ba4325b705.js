(window.webpackJsonp=window.webpackJsonp||[]).push([[60,70],{237:function(t,n,i){"use strict";i.r(n);var e=i(241);e.default.install=function(t){t.component(e.default.name,e.default)},n.default=e.default},241:function(t,n,i){"use strict";i.r(n);i(24);var e={name:"ScrollNumber",model:{prop:"count",event:"setCount"},props:{count:{type:Number,default:0},isThousandSplit:{type:Boolean,default:!1},length:{type:Number,default:9}},data:()=>({initNumArray:["0"],displayNumArray:[]}),watch:{count:{immediate:!0,handler:function(){const t=this.count,n=this.numToArray(t);this.initNumArray=[],n.forEach(t=>{isNaN(t)?this.initNumArray.push(","):this.initNumArray.push("0")}),this.displayNumArray=n,this.$nextTick(()=>{const t=setTimeout(()=>{this.setNumberTransform(),clearTimeout(t)},0)})}}},mounted(){},methods:{numToArray(t){if(!0===this.isThousandSplit){if(this.length){let n="";for(let t=0;t<this.length;t++)n+="9";Number(n),0;let i="";if(String(t).length<=this.length){const n=this.length-String(t).length;i=String(t);for(let t=0;t<n;t++)i="0"+i}return this.thousandSplit(i).split("")}return this.thousandSplit(t).split("")}return String(t).split("")},thousandSplit:t=>(t+"").replace(/\d{1,3}(?=(\d{3})+$)/g,"$&,"),setNumberTransform(){this.displayNumArray.forEach((t,n)=>{if(!isNaN(t)){this.$refs.itemRef[n].children[0].children[0].style.transform=`translate(-50%, -${10*t}%)`}})}}},r=(i(345),i(9)),s=Object(r.a)(e,(function(){var t=this,n=t._self._c;return n("div",{staticClass:"s-scroll-number"},t._l(t.initNumArray,(function(i,e){return n("li",{key:e,ref:"itemRef",refInFor:!0,class:{"number-item":!isNaN(i),"mark-item":isNaN(i)}},[isNaN(i)?n("span",{staticClass:"comma"},[t._v(t._s(i))]):n("span",[n("i",[t._v("0123456789")])])])})),0)}),[],!1,null,"7038f128",null);n.default=s.exports},317:function(t,n,i){var e=i(2),r=i(346);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[t.i,r,""]]);var s={insert:"head",singleton:!1};e(r,s);t.exports=r.locals||{}},345:function(t,n,i){"use strict";i(317)},346:function(t,n,i){(n=i(3)(!1)).push([t.i,"/*总量滚动数字设置*/\n.s-scroll-number[data-v-7038f128] {\n  position: relative;\n  height: 100px;\n  font-size: 54px;\n  line-height: 41px;\n  text-align: center;\n  list-style: none;\n  color: #2d7cff;\n  writing-mode: vertical-lr;\n  text-orientation: upright;\n  /*文字禁止编辑*/\n  -moz-user-select: none;\n  /*火狐*/\n  -webkit-user-select: none;\n  /*webkit浏览器*/\n  /*IE10*/\n  /*早期浏览器*/\n  user-select: none;\n  /* overflow: hidden; */\n}\n/* 默认逗号设置 */\n.mark-item[data-v-7038f128] {\n  width: 10px;\n  height: 100px;\n  margin-right: 5px;\n  line-height: 10px;\n  font-size: 48px;\n  position: relative;\n}\n.mark-item > span[data-v-7038f128] {\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  writing-mode: vertical-rl;\n  text-orientation: upright;\n}\n/*滚动数字设置*/\n.number-item[data-v-7038f128] {\n  width: 41px;\n  height: 75px;\n  background: #ccc;\n  list-style: none;\n  margin-right: 5px;\n  background: #fafafa;\n  border-radius: 4px;\n  border: 1px solid #dddddd;\n}\n.number-item > span[data-v-7038f128] {\n  position: relative;\n  display: inline-block;\n  margin-right: 10px;\n  width: 100%;\n  height: 100%;\n  writing-mode: vertical-rl;\n  text-orientation: upright;\n  overflow: hidden;\n}\n.number-item > span > i[data-v-7038f128] {\n  font-style: normal;\n  position: absolute;\n  top: 11px;\n  left: 50%;\n  transform: translate(-50%, 0);\n  transition: transform 0.7s ease-in-out;\n  letter-spacing: 10px;\n}\n.number-item[data-v-7038f128]:last-child {\n  margin-right: 0;\n}\n",""]),t.exports=n}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,