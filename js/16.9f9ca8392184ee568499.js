(window.webpackJsonp=window.webpackJsonp||[]).push([[16,58,68],{107:function(t,e,o){"use strict";o.r(e);o(24);var r=o(218),l={name:"color-grid-chart-example",props:{},data:()=>({ColorGridChartData:[],cursorStyle:{cursor:"auto"}}),components:{ColorGridChartVirtualScroll:r.default},watch:{},computed:{},created(){let t=[];for(let e=0;e<30;e++){let o=[];for(let t=0;t<10;t++)o.push({name:e,value:t});t.push(o)}this.ColorGridChartData=t},mounted(){},methods:{},beforeDestroy(){}},a=o(9),i=Object(a.a)(l,(function(){return(0,this._self._c)("ColorGridChartVirtualScroll",{staticStyle:{width:"80%",margin:"0 auto"},attrs:{data:this.ColorGridChartData,showTooltip:!1}})}),[],!1,null,"a6936622",null).exports,n={name:"color-grid-chart-example",props:{},data:()=>({ColorGridChartData:[]}),components:{ColorGridChartVirtualScroll:r.default},watch:{},computed:{},created(){let t=[];for(let e=0;e<30;e++){let o=[];for(let t=0;t<10;t++)o.push({name:e,value:t});t.push(o)}this.ColorGridChartData=t},mounted(){},methods:{},beforeDestroy(){}},s=Object(a.a)(n,(function(){var t=this,e=t._self._c;return e("ColorGridChartVirtualScroll",{staticStyle:{width:"80%",margin:"0 auto"},attrs:{data:t.ColorGridChartData,showTooltip:!1},scopedSlots:t._u([{key:"default",fn:function({record:o}){return e("span",{},[t._v(t._s("slot-"+o.value))])}}])})}),[],!1,null,"f5cbe3a8",null).exports,h={name:"color-grid-chart-example",props:{},data:()=>({ColorGridChartData:[]}),components:{ColorGridChartVirtualScroll:r.default},watch:{},computed:{},created(){let t=[];for(let e=0;e<30;e++){let o=[];for(let t=0;t<10;t++)o.push({name:e,value:t});t.push(o)}this.ColorGridChartData=t},mounted(){},methods:{},beforeDestroy(){}},c=Object(a.a)(h,(function(){var t=this,e=t._self._c;return e("ColorGridChartVirtualScroll",{staticStyle:{width:"80%",margin:"0 auto"},attrs:{data:t.ColorGridChartData,showTooltip:!0},scopedSlots:t._u([{key:"tooltipSlot",fn:function({record:o}){return e("span",{},[t._v(t._s(o))])}}])})}),[],!1,null,"c5b268f2",null).exports,d={name:"color-grid-chart-example",props:{},data:()=>({ColorGridChartData:[],cursorStyle:{cursor:"auto"}}),components:{ColorGridChartVirtualScroll:r.default},watch:{},computed:{},created(){let t=[];for(let e=0;e<30;e++){let o=[];for(let t=0;t<10;t++)o.push({name:e,value:t});t.push(o)}this.ColorGridChartData=t},mounted(){},methods:{itemMouseMove(t){const{value:e=0}=t;this.cursorStyle=e>0?{cursor:"pointer"}:{cursor:"not-allowed"}},itemClick(t){}},beforeDestroy(){}},u={name:"ComponentDoc",components:{Com2kl1jvlozu0moeDemo0:i,Com2kl1jvlozu0moeDemo1:s,Com2kl1jvlozu0moeDemo2:c,Com2kl1jvlozu0moeDemo3:Object(a.a)(d,(function(){return(0,this._self._c)("ColorGridChartVirtualScroll",{staticStyle:{width:"80%",margin:"0 auto"},attrs:{data:this.ColorGridChartData,showTooltip:!1,cursorStyle:this.cursorStyle},on:{itemMouseMove:this.itemMouseMove,itemClick:this.itemClick}})}),[],!1,null,"3f4d5e4a",null).exports}},m=Object(a.a)(u,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"vue-demo-container"},[t._m(0),t._v(" "),e("h4",[t._v("1. 基本使用")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Com2kl1jvlozu0moeDemo0"),t._v(" "),t._m(1)],1),t._v(" "),e("h4",[t._v("2. 使用插槽显示格子内容")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Com2kl1jvlozu0moeDemo1"),t._v(" "),t._m(2)],1),t._v(" "),e("h4",[t._v("3. 使用 tooltip")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Com2kl1jvlozu0moeDemo2"),t._v(" "),t._m(3)],1),t._v(" "),e("h4",[t._v("4. 改变 grid 中的鼠标样式")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Com2kl1jvlozu0moeDemo3"),t._v(" "),t._m(4)],1),t._v(" "),e("h3",[t._v("API")]),t._v(" "),t._m(5),t._v(" "),e("h3",[t._v("事件")]),t._v(" "),t._m(6)])}),[function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("默认使用 "),t("code",[this._v("{name:xxx, value:xxx}")]),this._v(" 中的 value 显示格子内容，不显示 tooltip")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n    <ColorGridChartVirtualScroll\n      :data="ColorGridChartData"\n      :showTooltip="false"\n      style="width:80%;margin:0 auto"\n    >\n    </ColorGridChartVirtualScroll>\n</template>\n<script>\nimport ColorGridChartVirtualScroll from "@/packages/color-grid-chart-virtual-scroll";\nexport default {\n  name: "color-grid-chart-example",\n  props: {},\n  data() {\n    return {\n      ColorGridChartData: [],\n      cursorStyle: { cursor: "auto" },\n    };\n  },\n  components: {\n    ColorGridChartVirtualScroll,\n  },\n  watch: {},\n  computed: {},\n  created() {\n    let ColorGridChartData = [];\n    for (let i = 0; i < 30; i++) {\n      let item = [];\n      for (let j = 0; j < 10; j++) {\n        item.push({\n          name: i,\n          value: j,\n        });\n      }\n      ColorGridChartData.push(item);\n    }\n    this.ColorGridChartData = ColorGridChartData;\n  },\n  mounted() {},\n  methods: {\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n    <ColorGridChartVirtualScroll\n      :data="ColorGridChartData"\n      :showTooltip="false"\n      style="width:80%;margin:0 auto"\n    >\n        <span slot-scope="{ record }">{{ `slot-${record.value}` }}</span>\n    </ColorGridChartVirtualScroll>\n</template>\n<script>\nimport ColorGridChartVirtualScroll from "@/packages/color-grid-chart-virtual-scroll";\nexport default {\n  name: "color-grid-chart-example",\n  props: {},\n  data() {\n    return {\n      ColorGridChartData: [],\n    };\n  },\n  components: {\n    ColorGridChartVirtualScroll,\n  },\n  watch: {},\n  computed: {},\n  created() {\n    let ColorGridChartData = [];\n    for (let i = 0; i < 30; i++) {\n      let item = [];\n      for (let j = 0; j < 10; j++) {\n        item.push({\n          name: i,\n          value: j,\n        });\n      }\n      ColorGridChartData.push(item);\n    }\n    this.ColorGridChartData = ColorGridChartData;\n  },\n  mounted() {},\n  methods: {\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n    <ColorGridChartVirtualScroll\n      :data="ColorGridChartData"\n      :showTooltip="true"\n      style="width:80%;margin:0 auto"\n    >\n        <span slot="tooltipSlot" slot-scope="{ record }">{{ record }}</span>\n    </ColorGridChartVirtualScroll>\n</template>\n<script>\nimport ColorGridChartVirtualScroll from "@/packages/color-grid-chart-virtual-scroll";\nexport default {\n  name: "color-grid-chart-example",\n  props: {},\n  data() {\n    return {\n      ColorGridChartData: [],\n    };\n  },\n  components: {\n    ColorGridChartVirtualScroll,\n  },\n  watch: {},\n  computed: {},\n  created() {\n    let ColorGridChartData = [];\n    for (let i = 0; i < 30; i++) {\n      let item = [];\n      for (let j = 0; j < 10; j++) {\n        item.push({\n          name: i,\n          value: j,\n        });\n      }\n      ColorGridChartData.push(item);\n    }\n    this.ColorGridChartData = ColorGridChartData;\n  },\n  mounted() {},\n  methods: {\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n    <ColorGridChartVirtualScroll\n      :data="ColorGridChartData"\n      :showTooltip="false"\n      :cursorStyle="cursorStyle"\n      @itemMouseMove="itemMouseMove"\n      @itemClick="itemClick"\n      style="width:80%;margin:0 auto"\n    >\n    </ColorGridChartVirtualScroll>\n</template>\n<script>\nimport ColorGridChartVirtualScroll from "@/packages/color-grid-chart-virtual-scroll";\nexport default {\n  name: "color-grid-chart-example",\n  props: {},\n  data() {\n    return {\n      ColorGridChartData: [],\n      cursorStyle: { cursor: "auto" },\n    };\n  },\n  components: {\n    ColorGridChartVirtualScroll,\n  },\n  watch: {},\n  computed: {},\n  created() {\n    let ColorGridChartData = [];\n    for (let i = 0; i < 30; i++) {\n      let item = [];\n      for (let j = 0; j < 10; j++) {\n        item.push({\n          name: i,\n          value: j,\n        });\n      }\n      ColorGridChartData.push(item);\n    }\n    this.ColorGridChartData = ColorGridChartData;\n  },\n  mounted() {},\n  methods: {\n    itemMouseMove(item) {\n        const { value = 0 } = item;\n        if (value > 0) {\n            this.cursorStyle = { cursor: "pointer" };\n        } else {\n            this.cursorStyle = { cursor: "not-allowed" };\n        }\n    },\n    itemClick(item) {},\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("属性")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认值")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("data")]),t._v(" "),e("td",[t._v("渲染数据")]),t._v(" "),e("td",[e("code",[t._v("Array<Array>")])]),t._v(" "),e("td",[e("code",[t._v("[[]]  ")])])]),t._v(" "),e("tr",[e("td",[t._v("itemHeight")]),t._v(" "),e("td",[t._v("每个格子的高度")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("50")])]),t._v(" "),e("tr",[e("td",[t._v("itemWidth")]),t._v(" "),e("td",[t._v("每个格子的宽度")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("maxHeight")]),t._v(" "),e("td",[t._v("容器的最大高度")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("300")])]),t._v(" "),e("tr",[e("td",[t._v("showTooltip")]),t._v(" "),e("td",[t._v('是否显示 showTooltip , 当时显示时需要指定插槽 slot="tooltipSlot"')]),t._v(" "),e("td",[t._v("Boolean")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("cursorStyle")]),t._v(" "),e("td",[t._v("grid 的鼠标样式")]),t._v(" "),e("td",[t._v("Object")]),t._v(" "),e("td",[t._v('{cursor:"auto" }')])])])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("回调参数")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("itemClick")]),t._v(" "),e("td",[t._v("点击每个格子时的回调")]),t._v(" "),e("td",[e("code",[t._v("(itemData) => void")])])]),t._v(" "),e("tr",[e("td",[t._v("itemMouseMove")]),t._v(" "),e("td",[t._v("在每个格子上移动时的回调")]),t._v(" "),e("td",[e("code",[t._v("(itemData) => void")])])])])])}],!1,null,null,null);e.default=m.exports},218:function(t,e,o){"use strict";o.r(e);var r=o(223);r.default.install=function(t){t.component(r.default.name,r.default)},e.default=r.default},223:function(t,e,o){"use strict";o.r(e);o(24);var r={name:"ColorGridChartVirtualScroll",props:{data:{type:Array,default:function(){return[[]]},require:!0},itemHeight:{type:Number,default:50},itemWidth:{type:Number},maxHeight:{type:Number,default:300},showTooltip:{type:Boolean,default:!0},cursorStyle:{type:Object,default:function(){return{cursor:"auto"}}},startColor:{type:String,default:"#c1cae9"},endColor:{type:String,default:"#273C70"},boundaryValue:{type:Object}},data:()=>({maxValue:0,minValue:0,colors:[],renderData:[],virtualContentHeight:300,contentHeight:300,scrollHeight:300,scrollResolveTimer:null,tooltipPosition:{x:0,y:0},tooltipData:{},tooltipIsShow:!1}),components:{},watch:{data:{immediate:!0,handler:function(){const{max:t,min:e}=this.calDataBoundaryValue();this.maxValue=t,this.minValue=e;let o=0;o=0===this.minValue?0===this.maxValue?0:this.maxValue-this.minValue+1:this.maxValue-this.minValue;const r=this.gradientColors(this.startColor,this.endColor,o);this.colors=r,this.$nextTick(()=>{this.updateVirtualContentHeight(),this.updateContentHeight(),this.update(0)})}}},computed:{},created(){},mounted(){const t=this.$refs.geminiScrollbarRef.$el.childNodes[2];t.scrollTop=this.scrollTop,t.addEventListener("scroll",this.scrollResolve),this.$once("hook:beforeDestroy",()=>{t.removeEventListener("scroll",this.scrollResolve)})},methods:{gradientColors(t,e,o,r){var l,a,i,n,s=[],h=[];r=r||1;var c=function(t){return Math.pow(t/255,r)};for(t=this.parseColor(t).map(c),e=this.parseColor(e).map(c),l=0;l<o;l++){for(n=1-(i=l/(o-1)),a=0;a<3;a++)h[a]=this.pad(Math.round(255*Math.pow(t[a]*n+e[a]*i,1/r)).toString(16));s.push("#"+h.join(""))}return s},parseColor:t=>4===t.length?t.substr(1).split("").map((function(t){return 17*parseInt(t,16)})):[t.substr(1,2),t.substr(3,2),t.substr(5,2)].map((function(t){return parseInt(t,16)})),pad:t=>1===t.length?"0"+t:t,calDataBoundaryValue(){if(this.boundaryValue){const{max:t,min:e}=this.boundaryValue;return{min:e,max:t}}let t=0,e=0;return this.data.forEach(o=>{o&&o.forEach(o=>{o.value>t&&(t=o.value),o.value<e&&(e=o.value)})}),{max:t,min:e}},calItemStyle(t){const e={};return e.background=this.calItemColor(t.value).color,this.itemWidth?this.data.length>0&&(this.data[0].length*this.itemWidth>this.$el.clientWidth?(e.width=this.itemWidth+"px",e.flexShrink=0):e.flex=1):e.flex=1,e},calItemColor(t){let e="white",o=Math.ceil((this.colors.length-1)*t/(this.maxValue-this.minValue));return o>this.colors.length-1&&(o=this.colors.length-1),e=this.colors[o],{color:e,colorsIndex:o}},scrollResolve(t){clearTimeout(this.scrollResolveTimer),this.scrollResolveTimer=setTimeout(()=>{this.geminiScrollbarScrollTop=t.target.scrollTop;const{scrollLeft:e,scrollTop:o}=t.target;this.$emit("scroll",{scrollLeft:e,scrollTop:o})},10),this.update(t.target.scrollTop)},update(t=0){this.$nextTick(()=>{const e=Math.ceil(this.$el.clientHeight/this.itemHeight),o=Math.floor(t/this.itemHeight);let r=o+e;r+1<=this.data.length-1&&(r+=1),this.renderData=this.data.slice(o,r),this.$nextTick(()=>{this.$refs.content&&(this.$refs.content.style.webkitTransform=`translate3d(0, ${o*this.itemHeight}px, 0)`)})})},updateGridHeight(){"double"==this.processTableMode?this.gridHeight=70:this.gridHeight=35},geminiScrollbarReset(){try{this.$refs.geminiScrollbarRef.$el.childNodes[2].scrollTop=0,this.$emit("scroll",0)}catch(t){}},updateVirtualContentHeight(){this.virtualContentHeight=this.data.length*this.itemHeight},updateContentHeight(){this.virtualContentHeight>this.maxHeight?this.contentHeight=this.maxHeight:this.contentHeight=this.virtualContentHeight},itemClick(t,e,o){this.$emit("itemClick",t,e,o)},itemMousemove(t){if(this.$emit("itemMouseMove",t),!1!==this.showTooltip){this.tooltipData=t;var e=window.event,o=e.x,r=e.y;this.tooltipPosition={x:o+20,y:r+20}}},contentMouseenter(){!1!==this.showTooltip&&(this.tooltipIsShow=!0)},contentMouseleave(){!1!==this.showTooltip&&(this.tooltipIsShow=!1)}},beforeDestroy(){}},l=(o(320),o(9)),a=Object(l.a)(r,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"color-grid-chart"},[e("GeminiScrollbar",{ref:"geminiScrollbarRef",staticClass:".pmd-scrollbar .mCustomScrollbar gm-scrollbar-color white",style:"height:"+(t.contentHeight+"px")},[e("div",{ref:"clientHeight",staticClass:"list-view-phantom",style:{height:t.virtualContentHeight+"px"}}),t._v(" "),e("div",{ref:"content",on:{mouseenter:t.contentMouseenter,mouseleave:t.contentMouseleave}},t._l(t.renderData,(function(o,r){return e("div",{key:r,staticClass:"color-grid-chart-row",style:{height:t.itemHeight+"px"}},t._l(o,(function(o,l){return e("div",{key:l,staticClass:"color-grid-chart-item",style:{...t.calItemStyle(o),...t.cursorStyle},on:{click:function(e){return t.itemClick(o,r,l)},mousemove:function(e){return t.itemMousemove(o)}}},[t.$scopedSlots.default?[t._t("default",null,{record:o})]:e("span",[t._v(" "+t._s(o.value))])],2)})),0)})),0)]),t._v(" "),e("div",{directives:[{name:"show",rawName:"v-show",value:t.tooltipIsShow,expression:"tooltipIsShow"}],staticClass:"color-grid-chart-tooltip",style:{left:t.tooltipPosition.x+"px",top:t.tooltipPosition.y+"px"}},[t.$scopedSlots.tooltipSlot?[t._t("tooltipSlot",null,{record:t.tooltipData})]:e("span",[t._v("请指定插槽内容")])],2)],1)}),[],!1,null,"e7325edc",null);e.default=a.exports},304:function(t,e,o){var r=o(2),l=o(321);"string"==typeof(l=l.__esModule?l.default:l)&&(l=[[t.i,l,""]]);var a={insert:"head",singleton:!1};r(l,a);t.exports=l.locals||{}},320:function(t,e,o){"use strict";o(304)},321:function(t,e,o){(e=o(3)(!1)).push([t.i,".color-grid-chart-row[data-v-e7325edc] {\n  display: flex;\n  width: 100%;\n}\n.color-grid-chart-item[data-v-e7325edc] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  box-sizing: border-box;\n  border: 1px solid white;\n}\n.color-grid-chart-item[data-v-e7325edc]:hover {\n  border-color: black;\n}\n.list-view-phantom[data-v-e7325edc] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  z-index: -1;\n}\n.color-grid-chart-tooltip[data-v-e7325edc] {\n  background: #fff;\n  opacity: 0.96;\n  border-radius: 6px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  padding: 12px;\n  color: #333333;\n  font-size: 13px;\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,