(window.webpackJsonp=window.webpackJsonp||[]).push([[16,58,68],{107:function(t,e,o){"use strict";o.r(e);o(24);var r=o(218),l={name:"color-grid-chart-example",props:{},data:()=>({ColorGridChartData:[],cursorStyle:{cursor:"auto"}}),components:{ColorGridChartVirtualScroll:r.default},watch:{},computed:{},created(){let t=[];for(let e=0;e<30;e++){let o=[];for(let t=0;t<10;t++)o.push({name:e,value:t});t.push(o)}this.ColorGridChartData=t},mounted(){},methods:{},beforeDestroy(){}},a=o(9),i=Object(a.a)(l,(function(){return(0,this._self._c)("ColorGridChartVirtualScroll",{staticStyle:{width:"80%",margin:"0 auto"},attrs:{data:this.ColorGridChartData,showTooltip:!1}})}),[],!1,null,"a6936622",null).exports,n={name:"color-grid-chart-example",props:{},data:()=>({ColorGridChartData:[]}),components:{ColorGridChartVirtualScroll:r.default},watch:{},computed:{},created(){let t=[];for(let e=0;e<30;e++){let o=[];for(let t=0;t<10;t++)o.push({name:e,value:t});t.push(o)}this.ColorGridChartData=t},mounted(){},methods:{},beforeDestroy(){}},s=Object(a.a)(n,(function(){var t=this,e=t._self._c;return e("ColorGridChartVirtualScroll",{staticStyle:{width:"80%",margin:"0 auto"},attrs:{data:t.ColorGridChartData,showTooltip:!1},scopedSlots:t._u([{key:"default",fn:function({record:o}){return e("span",{},[t._v(t._s("slot-"+o.value))])}}])})}),[],!1,null,"f5cbe3a8",null).exports,c={name:"color-grid-chart-example",props:{},data:()=>({ColorGridChartData:[]}),components:{ColorGridChartVirtualScroll:r.default},watch:{},computed:{},created(){let t=[];for(let e=0;e<30;e++){let o=[];for(let t=0;t<10;t++)o.push({name:e,value:t});t.push(o)}this.ColorGridChartData=t},mounted(){},methods:{},beforeDestroy(){}},h=Object(a.a)(c,(function(){var t=this,e=t._self._c;return e("ColorGridChartVirtualScroll",{staticStyle:{width:"80%",margin:"0 auto"},attrs:{data:t.ColorGridChartData,showTooltip:!0},scopedSlots:t._u([{key:"tooltipSlot",fn:function({record:o}){return e("span",{},[t._v(t._s(o))])}}])})}),[],!1,null,"c5b268f2",null).exports,d={name:"color-grid-chart-example",props:{},data:()=>({ColorGridChartData:[],cursorStyle:{cursor:"auto"}}),components:{ColorGridChartVirtualScroll:r.default},watch:{},computed:{},created(){let t=[];for(let e=0;e<30;e++){let o=[];for(let t=0;t<10;t++)o.push({name:e,value:t});t.push(o)}this.ColorGridChartData=t},mounted(){},methods:{itemMouseMove(t){const{value:e=0}=t;this.cursorStyle=e>0?{cursor:"pointer"}:{cursor:"not-allowed"}},itemClick(t){}},beforeDestroy(){}},u={name:"ComponentDoc",components:{Com7qv41sclozz973aDemo0:i,Com7qv41sclozz973aDemo1:s,Com7qv41sclozz973aDemo2:h,Com7qv41sclozz973aDemo3:Object(a.a)(d,(function(){return(0,this._self._c)("ColorGridChartVirtualScroll",{staticStyle:{width:"80%",margin:"0 auto"},attrs:{data:this.ColorGridChartData,showTooltip:!1,cursorStyle:this.cursorStyle},on:{itemMouseMove:this.itemMouseMove,itemClick:this.itemClick}})}),[],!1,null,"3f4d5e4a",null).exports}},m=Object(a.a)(u,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"vue-demo-container"},[t._m(0),t._v(" "),e("h4",[t._v("1. 基本使用")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Com7qv41sclozz973aDemo0"),t._v(" "),t._m(1)],1),t._v(" "),e("h4",[t._v("2. 使用插槽显示格子内容")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Com7qv41sclozz973aDemo1"),t._v(" "),t._m(2)],1),t._v(" "),e("h4",[t._v("3. 使用 tooltip")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Com7qv41sclozz973aDemo2"),t._v(" "),t._m(3)],1),t._v(" "),e("h4",[t._v("4. 改变 grid 中的鼠标样式")]),t._v(" "),e("div",{staticClass:"vue-demo-wrapper"},[e("Com7qv41sclozz973aDemo3"),t._v(" "),t._m(4)],1),t._v(" "),e("h3",[t._v("API")]),t._v(" "),t._m(5),t._v(" "),e("h3",[t._v("事件")]),t._v(" "),t._m(6)])}),[function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("默认使用 "),t("code",[this._v("{name:xxx, value:xxx}")]),this._v(" 中的 value 显示格子内容，不显示 tooltip")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n    <ColorGridChartVirtualScroll\n      :data="ColorGridChartData"\n      :showTooltip="false"\n      style="width:80%;margin:0 auto"\n    >\n    </ColorGridChartVirtualScroll>\n</template>\n<script>\nimport ColorGridChartVirtualScroll from "@/packages/color-grid-chart-virtual-scroll";\nexport default {\n  name: "color-grid-chart-example",\n  props: {},\n  data() {\n    return {\n      ColorGridChartData: [],\n      cursorStyle: { cursor: "auto" },\n    };\n  },\n  components: {\n    ColorGridChartVirtualScroll,\n  },\n  watch: {},\n  computed: {},\n  created() {\n    let ColorGridChartData = [];\n    for (let i = 0; i < 30; i++) {\n      let item = [];\n      for (let j = 0; j < 10; j++) {\n        item.push({\n          name: i,\n          value: j,\n        });\n      }\n      ColorGridChartData.push(item);\n    }\n    this.ColorGridChartData = ColorGridChartData;\n  },\n  mounted() {},\n  methods: {\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n    <ColorGridChartVirtualScroll\n      :data="ColorGridChartData"\n      :showTooltip="false"\n      style="width:80%;margin:0 auto"\n    >\n        <span slot-scope="{ record }">{{ `slot-${record.value}` }}</span>\n    </ColorGridChartVirtualScroll>\n</template>\n<script>\nimport ColorGridChartVirtualScroll from "@/packages/color-grid-chart-virtual-scroll";\nexport default {\n  name: "color-grid-chart-example",\n  props: {},\n  data() {\n    return {\n      ColorGridChartData: [],\n    };\n  },\n  components: {\n    ColorGridChartVirtualScroll,\n  },\n  watch: {},\n  computed: {},\n  created() {\n    let ColorGridChartData = [];\n    for (let i = 0; i < 30; i++) {\n      let item = [];\n      for (let j = 0; j < 10; j++) {\n        item.push({\n          name: i,\n          value: j,\n        });\n      }\n      ColorGridChartData.push(item);\n    }\n    this.ColorGridChartData = ColorGridChartData;\n  },\n  mounted() {},\n  methods: {\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n    <ColorGridChartVirtualScroll\n      :data="ColorGridChartData"\n      :showTooltip="true"\n      style="width:80%;margin:0 auto"\n    >\n        <span slot="tooltipSlot" slot-scope="{ record }">{{ record }}</span>\n    </ColorGridChartVirtualScroll>\n</template>\n<script>\nimport ColorGridChartVirtualScroll from "@/packages/color-grid-chart-virtual-scroll";\nexport default {\n  name: "color-grid-chart-example",\n  props: {},\n  data() {\n    return {\n      ColorGridChartData: [],\n    };\n  },\n  components: {\n    ColorGridChartVirtualScroll,\n  },\n  watch: {},\n  computed: {},\n  created() {\n    let ColorGridChartData = [];\n    for (let i = 0; i < 30; i++) {\n      let item = [];\n      for (let j = 0; j < 10; j++) {\n        item.push({\n          name: i,\n          value: j,\n        });\n      }\n      ColorGridChartData.push(item);\n    }\n    this.ColorGridChartData = ColorGridChartData;\n  },\n  mounted() {},\n  methods: {\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this._self._c;return t("div",{staticClass:"vue-demo-highlight"},[t("div",{staticClass:"vue-demo-highlight-content"},[t("pre",[t("code",{pre:!0,attrs:{class:"html"}},[this._v('<template>\n    <ColorGridChartVirtualScroll\n      :data="ColorGridChartData"\n      :showTooltip="false"\n      :cursorStyle="cursorStyle"\n      @itemMouseMove="itemMouseMove"\n      @itemClick="itemClick"\n      style="width:80%;margin:0 auto"\n    >\n    </ColorGridChartVirtualScroll>\n</template>\n<script>\nimport ColorGridChartVirtualScroll from "@/packages/color-grid-chart-virtual-scroll";\nexport default {\n  name: "color-grid-chart-example",\n  props: {},\n  data() {\n    return {\n      ColorGridChartData: [],\n      cursorStyle: { cursor: "auto" },\n    };\n  },\n  components: {\n    ColorGridChartVirtualScroll,\n  },\n  watch: {},\n  computed: {},\n  created() {\n    let ColorGridChartData = [];\n    for (let i = 0; i < 30; i++) {\n      let item = [];\n      for (let j = 0; j < 10; j++) {\n        item.push({\n          name: i,\n          value: j,\n        });\n      }\n      ColorGridChartData.push(item);\n    }\n    this.ColorGridChartData = ColorGridChartData;\n  },\n  mounted() {},\n  methods: {\n    itemMouseMove(item) {\n        const { value = 0 } = item;\n        if (value > 0) {\n            this.cursorStyle = { cursor: "pointer" };\n        } else {\n            this.cursorStyle = { cursor: "not-allowed" };\n        }\n    },\n    itemClick(item) {},\n  },\n  beforeDestroy() {},\n};\n<\/script>\n<style lang="less" scoped>\n</style>\n')])])]),this._v(" "),t("div",{staticClass:"code-folder"},[this._v("显示代码")])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("属性")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认值")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("data")]),t._v(" "),e("td",[t._v("渲染数据")]),t._v(" "),e("td",[e("code",[t._v("Array<Array>")])]),t._v(" "),e("td",[e("code",[t._v("[[]]  ")])])]),t._v(" "),e("tr",[e("td",[t._v("itemHeight")]),t._v(" "),e("td",[t._v("每个格子的高度")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("50")])]),t._v(" "),e("tr",[e("td",[t._v("itemWidth")]),t._v(" "),e("td",[t._v("每个格子的宽度")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("maxHeight")]),t._v(" "),e("td",[t._v("容器的最大高度")]),t._v(" "),e("td",[t._v("Number")]),t._v(" "),e("td",[t._v("300")])]),t._v(" "),e("tr",[e("td",[t._v("showTooltip")]),t._v(" "),e("td",[t._v('是否显示 showTooltip , 当时显示时需要指定插槽 slot="tooltipSlot"')]),t._v(" "),e("td",[t._v("Boolean")]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[t._v("cursorStyle")]),t._v(" "),e("td",[t._v("grid 的鼠标样式")]),t._v(" "),e("td",[t._v("Object")]),t._v(" "),e("td",[t._v('{cursor:"auto" }')])])])])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("回调参数")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("itemClick")]),t._v(" "),e("td",[t._v("点击每个格子时的回调")]),t._v(" "),e("td",[e("code",[t._v("(itemData) => void")])])]),t._v(" "),e("tr",[e("td",[t._v("itemMouseMove")]),t._v(" "),e("td",[t._v("在每个格子上移动时的回调")]),t._v(" "),e("td",[e("code",[t._v("(itemData) => void")])])])])])}],!1,null,null,null);e.default=m.exports},218:function(t,e,o){"use strict";o.r(e);var r=o(223);r.default.install=function(t){t.component(r.default.name,r.default)},e.default=r.default},223:function(t,e,o){"use strict";o.r(e);o(24);var r={name:"ColorGridChartVirtualScroll",props:{data:{type:Array,default:function(){return[[]]},require:!0},itemHeight:{type:Number,default:50},itemWidth:{type:Number},maxHeight:{type:Number,default:300},showTooltip:{type:Boolean,default:!0},cursorStyle:{type:Object,default:function(){return{cursor:"auto"}}},startColor:{type:String,default:"#c1cae9"},endColor:{type:String,default:"#273C70"},boundaryValue:{type:Object}},data:()=>({maxValue:0,minValue:0,colors:[],renderData:[],virtualContentHeight:300,contentHeight:300,scrollHeight:300,scrollResolveTimer:null,tooltipPosition:{x:0,y:0},tooltipData:{},tooltipIsShow:!1}),components:{},watch:{data:{immediate:!0,handler:function(){const{max:t,min:e}=this.calDataBoundaryValue();this.maxValue=t,this.minValue=e;let o=0;o=0===this.minValue?0===this.maxValue?0:this.maxValue-this.minValue+1:this.maxValue-this.minValue;const r=this.gradientColors(this.startColor,this.endColor,o);this.colors=r,this.$nextTick(()=>{this.updateVirtualContentHeight(),this.updateContentHeight(),this.update(0)})}}},computed:{},created(){},mounted(){const t=this.$refs.geminiScrollbarRef.$el.childNodes[2];t.scrollTop=this.scrollTop,t.addEventListener("scroll",this.scrollResolve),this.$once("hook:beforeDestroy",()=>{t.removeEventListener("scroll",this.scrollResolve)})},methods:{gradientColors(t,e,o,r){var l,a,i,n,s=[],c=[];r=r||1;var h=function(t){return Math.pow(t/255,r)};for(t=this.parseColor(t).map(h),e=this.parseColor(e).map(h),l=0;l<o;l++){for(n=1-(i=l/(o-1)),a=0;a<3;a++)c[a]=this.pad(Math.round(255*Math.pow(t[a]*n+e[a]*i,1/r)).toString(16));s.push("#"+c.join(""))}return s},parseColor:t=>4===t.length?t.substr(1).split("").map((function(t){return 17*parseInt(t,16)})):[t.substr(1,2),t.substr(3,2),t.substr(5,2)].map((function(t){return parseInt(t,16)})),pad:t=>1===t.length?"0"+t:t,calDataBoundaryValue(){if(this.boundaryValue){const{max:t,min:e}=this.boundaryValue;return{min:e,max:t}}let t=0,e=0;return this.data.forEach(o=>{o&&o.forEach(o=>{o.value>t&&(t=o.value),o.value<e&&(e=o.value)})}),{max:t,min:e}},calItemStyle(t){const e={};return e.background=this.calItemColor(t.value).color,this.itemWidth?this.data.length>0&&(this.data[0].length*this.itemWidth>this.$el.clientWidth?(e.width=this.itemWidth+"px",e.flexShrink=0):e.flex=1):e.flex=1,e},calItemColor(t){let e="white",o=Math.ceil((this.colors.length-1)*t/(this.maxValue-this.minValue));return o>this.colors.length-1&&(o=this.colors.length-1),e=this.colors[o],{color:e,colorsIndex:o}},scrollResolve(t){clearTimeout(this.scrollResolveTimer),this.scrollResolveTimer=setTimeout(()=>{this.geminiScrollbarScrollTop=t.target.scrollTop;const{scrollLeft:e,scrollTop:o}=t.target;this.$emit("scroll",{scrollLeft:e,scrollTop:o})},10),this.update(t.target.scrollTop)},update(t=0){this.$nextTick(()=>{const e=Math.ceil(this.$el.clientHeight/this.itemHeight),o=Math.floor(t/this.itemHeight);let r=o+e;r+1<=this.data.length-1&&(r+=1),this.renderData=this.data.slice(o,r),this.$nextTick(()=>{this.$refs.content&&(this.$refs.content.style.webkitTransform=`translate3d(0, ${o*this.itemHeight}px, 0)`)})})},updateGridHeight(){"double"==this.processTableMode?this.gridHeight=70:this.gridHeight=35},geminiScrollbarReset(){try{this.$refs.geminiScrollbarRef.$el.childNodes[2].scrollTop=0,this.$emit("scroll",0)}catch(t){}},updateVirtualContentHeight(){this.virtualContentHeight=this.data.length*this.itemHeight},updateContentHeight(){this.virtualContentHeight>this.maxHeight?this.contentHeight=this.maxHeight:this.contentHeight=this.virtualContentHeight},itemClick(t,e,o){this.$emit("itemClick",t,e,o)},itemMousemove(t){if(this.$emit("itemMouseMove",t),!1!==this.showTooltip){this.tooltipData=t;var e=window.event,o=e.x,r=e.y;this.tooltipPosition={x:o+20,y:r+20}}},contentMouseenter(){!1!==this.showTooltip&&(this.tooltipIsShow=!0)},contentMouseleave(){!1!==this.showTooltip&&(this.tooltipIsShow=!1)}},beforeDestroy(){}},l=(o(320),o(9)),a=Object(l.a)(r,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"color-grid-chart"},[e("GeminiScrollbar",{ref:"geminiScrollbarRef",staticClass:".pmd-scrollbar .mCustomScrollbar gm-scrollbar-color white",style:"height:"+(t.contentHeight+"px")},[e("div",{ref:"clientHeight",staticClass:"list-view-phantom",style:{height:t.virtualContentHeight+"px"}}),t._v(" "),e("div",{ref:"content",on:{mouseenter:t.contentMouseenter,mouseleave:t.contentMouseleave}},t._l(t.renderData,(function(o,r){return e("div",{key:r,staticClass:"color-grid-chart-row",style:{height:t.itemHeight+"px"}},t._l(o,(function(o,l){return e("div",{key:l,staticClass:"color-grid-chart-item",style:{...t.calItemStyle(o),...t.cursorStyle},on:{click:function(e){return t.itemClick(o,r,l)},mousemove:function(e){return t.itemMousemove(o)}}},[t.$scopedSlots.default?[t._t("default",null,{record:o})]:e("span",[t._v(" "+t._s(o.value))])],2)})),0)})),0)]),t._v(" "),e("div",{directives:[{name:"show",rawName:"v-show",value:t.tooltipIsShow,expression:"tooltipIsShow"}],staticClass:"color-grid-chart-tooltip",style:{left:t.tooltipPosition.x+"px",top:t.tooltipPosition.y+"px"}},[t.$scopedSlots.tooltipSlot?[t._t("tooltipSlot",null,{record:t.tooltipData})]:e("span",[t._v("请指定插槽内容")])],2)],1)}),[],!1,null,"e7325edc",null);e.default=a.exports},304:function(t,e,o){var r=o(2),l=o(321);"string"==typeof(l=l.__esModule?l.default:l)&&(l=[[t.i,l,""]]);var a={insert:"head",singleton:!1};r(l,a);t.exports=l.locals||{}},320:function(t,e,o){"use strict";o(304)},321:function(t,e,o){(e=o(3)(!1)).push([t.i,".color-grid-chart-row[data-v-e7325edc] {\n  display: flex;\n  width: 100%;\n}\n.color-grid-chart-item[data-v-e7325edc] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  box-sizing: border-box;\n  border: 1px solid white;\n}\n.color-grid-chart-item[data-v-e7325edc]:hover {\n  border-color: black;\n}\n.list-view-phantom[data-v-e7325edc] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  z-index: -1;\n}\n.color-grid-chart-tooltip[data-v-e7325edc] {\n  background: #fff;\n  opacity: 0.96;\n  border-radius: 6px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  padding: 12px;\n  color: #333333;\n  font-size: 13px;\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD8yMmZkIiwid2VicGFjazovLy9zcmMvcGFja2FnZXMtZXhhbXBsZXMvY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZCIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD9hOGNkIiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy1leGFtcGxlcy9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsLm1kP2QzZTkiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzLWV4YW1wbGVzL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwubWQ/ZGYzYSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD80MzhhIiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy1leGFtcGxlcy9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsLm1kP2NhNjEiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzLWV4YW1wbGVzL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwubWQ/NzgzNiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMtZXhhbXBsZXMvY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD8yMmE3Iiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy1leGFtcGxlcy9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsLm1kPzE5ZjIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzLWV4YW1wbGVzL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwubWQ/MzAyYSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC9zcmMvaW5kZXgudnVlIiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsL3NyYy9pbmRleC52dWU/MmY2YiIsIndlYnBhY2s6Ly8vc3JjL3BhY2thZ2VzL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwvc3JjL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC9zcmMvaW5kZXgudnVlP2VlZTQiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhY2thZ2VzL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwvc3JjL2luZGV4LnZ1ZT85NjFmIiwid2VicGFjazovLy8uL3NyYy9wYWNrYWdlcy9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsL3NyYy9pbmRleC52dWU/NDlmZiIsIndlYnBhY2s6Ly8vLi9zcmMvcGFja2FnZXMvY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC9zcmMvaW5kZXgudnVlP2Y0NWUiXSwibmFtZXMiOlsibmFtZSIsInByb3BzIiwiZGF0YSIsIkNvbG9yR3JpZENoYXJ0RGF0YSIsImN1cnNvclN0eWxlIiwiY3Vyc29yIiwiY29tcG9uZW50cyIsIkNvbG9yR3JpZENoYXJ0VmlydHVhbFNjcm9sbCIsIndhdGNoIiwiY29tcHV0ZWQiLCJjcmVhdGVkIiwiaSIsIml0ZW0iLCJqIiwicHVzaCIsInZhbHVlIiwibW91bnRlZCIsIm1ldGhvZHMiLCJiZWZvcmVEZXN0cm95IiwiX2MiLCJ0aGlzIiwiX3NlbGYiLCJzdGF0aWNTdHlsZSIsImF0dHJzIiwiX3ZtIiwic2NvcGVkU2xvdHMiLCJfdSIsImtleSIsImZuIiwicmVjb3JkIiwiX3YiLCJfcyIsIml0ZW1Nb3VzZU1vdmUiLCJpdGVtQ2xpY2siLCJDb203cXY0MXNjbG96ejk3M2FEZW1vMCIsIkNvbTdxdjQxc2Nsb3p6OTczYURlbW8xIiwiQ29tN3F2NDFzY2xveno5NzNhRGVtbzIiLCJvbiIsInN0YXRpY0NsYXNzIiwiX20iLCJwcmUiLCJpbnN0YWxsIiwiVnVlIiwiY29tcG9uZW50IiwidHlwZSIsIkFycmF5IiwiZGVmYXVsdCIsInJlcXVpcmUiLCJpdGVtSGVpZ2h0IiwiTnVtYmVyIiwiaXRlbVdpZHRoIiwibWF4SGVpZ2h0Iiwic2hvd1Rvb2x0aXAiLCJCb29sZWFuIiwiT2JqZWN0Iiwic3RhcnRDb2xvciIsIlN0cmluZyIsImVuZENvbG9yIiwiYm91bmRhcnlWYWx1ZSIsIm1heFZhbHVlIiwibWluVmFsdWUiLCJjb2xvcnMiLCJyZW5kZXJEYXRhIiwidmlydHVhbENvbnRlbnRIZWlnaHQiLCJjb250ZW50SGVpZ2h0Iiwic2Nyb2xsSGVpZ2h0Iiwic2Nyb2xsUmVzb2x2ZVRpbWVyIiwidG9vbHRpcFBvc2l0aW9uIiwieCIsInkiLCJ0b29sdGlwRGF0YSIsInRvb2x0aXBJc1Nob3ciLCJpbW1lZGlhdGUiLCJoYW5kbGVyIiwibWF4IiwibWluIiwiY2FsRGF0YUJvdW5kYXJ5VmFsdWUiLCJzdGVwIiwiZ3JhZGllbnRDb2xvcnMiLCIkbmV4dFRpY2siLCJ1cGRhdGVWaXJ0dWFsQ29udGVudEhlaWdodCIsInVwZGF0ZUNvbnRlbnRIZWlnaHQiLCJ1cGRhdGUiLCJnZW1pbmlTY3JvbGxiYXJWaWV3IiwiJHJlZnMiLCJnZW1pbmlTY3JvbGxiYXJSZWYiLCIkZWwiLCJjaGlsZE5vZGVzIiwic2Nyb2xsVG9wIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNjcm9sbFJlc29sdmUiLCIkb25jZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJzdGFydCIsImVuZCIsInN0ZXBzIiwiZ2FtbWEiLCJtcyIsIm1lIiwib3V0cHV0Iiwic28iLCJub3JtYWxpemUiLCJjaGFubmVsIiwiTWF0aCIsInBvdyIsInBhcnNlQ29sb3IiLCJtYXAiLCJwYWQiLCJyb3VuZCIsInRvU3RyaW5nIiwiam9pbiIsImhleFN0ciIsImxlbmd0aCIsInN1YnN0ciIsInNwbGl0IiwicyIsInBhcnNlSW50IiwiZm9yRWFjaCIsImRhdGFJdGVtIiwiY2FsSXRlbVN0eWxlIiwic3R5bGUiLCJiYWNrZ3JvdW5kIiwiY2FsSXRlbUNvbG9yIiwiY29sb3IiLCJjbGllbnRXaWR0aCIsIndpZHRoIiwiZmxleFNocmluayIsImZsZXgiLCJjb2xvcnNJbmRleCIsImNlaWwiLCJlIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImdlbWluaVNjcm9sbGJhclNjcm9sbFRvcCIsInRhcmdldCIsInNjcm9sbExlZnQiLCIkZW1pdCIsImNvdW50IiwiY2xpZW50SGVpZ2h0IiwiZmxvb3IiLCJzbGljZSIsImNvbnRlbnQiLCJ3ZWJraXRUcmFuc2Zvcm0iLCJ1cGRhdGVHcmlkSGVpZ2h0IiwicHJvY2Vzc1RhYmxlTW9kZSIsImdyaWRIZWlnaHQiLCJnZW1pbmlTY3JvbGxiYXJSZXNldCIsImVycm9yIiwicm93SW5kZXgiLCJDb2x1bW5JbmRleCIsIml0ZW1Nb3VzZW1vdmUiLCJldmUiLCJ3aW5kb3ciLCJldmVudCIsImNvbnRlbnRNb3VzZWVudGVyIiwiY29udGVudE1vdXNlbGVhdmUiLCJyZWYiLCJoZWlnaHQiLCJfbCIsImRhdGFSb3ciLCJkYXRhUm93SW5kZXgiLCJkYXRhSXRlbUluZGV4IiwiJGV2ZW50IiwiJHNjb3BlZFNsb3RzIiwiX3QiLCJkaXJlY3RpdmVzIiwicmF3TmFtZSIsImV4cHJlc3Npb24iLCJsZWZ0IiwidG9wIiwidG9vbHRpcFNsb3QiLCJhcGkiLCJfX2VzTW9kdWxlIiwibW9kdWxlIiwib3B0aW9ucyIsImV4cG9ydHMiLCJsb2NhbHMiLCJfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18iXSwibWFwcGluZ3MiOiI4R0FBQSxJLFNDQWdS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QyxFQUFJMkksYUFBYU8sWUFBYSxDQUFDbEosRUFBSTRJLEdBQUcsY0FBYyxLQUFLLENBQUMsT0FBUzVJLEVBQUk4QyxlQUFlbkQsRUFBRyxPQUFPLENBQUNLLEVBQUlNLEdBQUcsY0FBYyxJQUFJLEtBRWw5QyxJR1VwQixFQUNBLEtBQ0EsV0FDQSxNQUlhLFVBQUFhLEUsNkJDbkJmLElBQUlnSSxFQUFNLEVBQVEsR0FDRjlCLEVBQVUsRUFBUSxLQUlDLGlCQUZ2QkEsRUFBVUEsRUFBUStCLFdBQWEvQixFQUFRL0YsUUFBVStGLEtBRy9DQSxFQUFVLENBQUMsQ0FBQ2dDLEVBQU9sSyxFQUFJa0ksRUFBUyxNQUc5QyxJQUFJaUMsRUFBVSxDQUVkLE9BQWlCLE9BQ2pCLFdBQW9CLEdBRVBILEVBQUk5QixFQUFTaUMsR0FJMUJELEVBQU9FLFFBQVVsQyxFQUFRbUMsUUFBVSxJLGlDQ2xCbkMsUSxxQkNFQUQsRUFEa0MsRUFBUSxFQUNoQ0UsRUFBNEIsSUFFOUJuSyxLQUFLLENBQUMrSixFQUFPbEssRUFBSSxrdUJBQW11QixLQUU1dkJrSyxFQUFPRSxRQUFVQSIsImZpbGUiOiJqcy8xNi44MDM4NTU1NGI5MzM5OTdmODdhZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKXt2YXIgX3ZtPXRoaXMsX2M9X3ZtLl9zZWxmLl9jO3JldHVybiBfYygnQ29sb3JHcmlkQ2hhcnRWaXJ0dWFsU2Nyb2xsJyx7c3RhdGljU3R5bGU6e1wid2lkdGhcIjpcIjgwJVwiLFwibWFyZ2luXCI6XCIwIGF1dG9cIn0sYXR0cnM6e1wiZGF0YVwiOl92bS5Db2xvckdyaWRDaGFydERhdGEsXCJzaG93VG9vbHRpcFwiOmZhbHNlLFwiY3Vyc29yU3R5bGVcIjpfdm0uY3Vyc29yU3R5bGV9LG9uOntcIml0ZW1Nb3VzZU1vdmVcIjpfdm0uaXRlbU1vdXNlTW92ZSxcIml0ZW1DbGlja1wiOl92bS5pdGVtQ2xpY2t9fSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbWFya2Rvd24tdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0xIS4vY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0wXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL21hcmtkb3duLXZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMSEuL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MFwiIiwibW9kdWxlLmV4cG9ydHMgPSBcbiAgICAgICAgPHRlbXBsYXRlPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxibG9ja3F1b3RlPlxuPHA+6buY6K6k5L2/55SoIDxjb2RlPntuYW1lOnh4eCwgdmFsdWU6eHh4fTwvY29kZT4g5Lit55qEIHZhbHVlIOaYvuekuuagvOWtkOWGheWuue+8jOS4jeaYvuekuiB0b29sdGlwPC9wPlxuPC9ibG9ja3F1b3RlPlxuPGg0PjEuIOWfuuacrOS9v+eUqDwvaDQ+XG48ZGl2IGNsYXNzPVwidnVlLWRlbW8td3JhcHBlclwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPENvbTdxdjQxc2Nsb3p6OTczYURlbW8wPjwvQ29tN3F2NDFzY2xveno5NzNhRGVtbzA+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLWhpZ2hsaWdodFwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLWhpZ2hsaWdodC1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHByZT48Y29kZSBjbGFzcz1cImh0bWxcIiB2LXByZSA+Jmx0O3RlbXBsYXRlJmd0O1xuICAgICZsdDtDb2xvckdyaWRDaGFydFZpcnR1YWxTY3JvbGxcbiAgICAgIDpkYXRhPSZxdW90O0NvbG9yR3JpZENoYXJ0RGF0YSZxdW90O1xuICAgICAgOnNob3dUb29sdGlwPSZxdW90O2ZhbHNlJnF1b3Q7XG4gICAgICBzdHlsZT0mcXVvdDt3aWR0aDo4MCU7bWFyZ2luOjAgYXV0byZxdW90O1xuICAgICZndDtcbiAgICAmbHQ7L0NvbG9yR3JpZENoYXJ0VmlydHVhbFNjcm9sbCZndDtcbiZsdDsvdGVtcGxhdGUmZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuaW1wb3J0IENvbG9yR3JpZENoYXJ0VmlydHVhbFNjcm9sbCBmcm9tICZxdW90O0AvcGFja2FnZXMvY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbCZxdW90OztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJnF1b3Q7Y29sb3ItZ3JpZC1jaGFydC1leGFtcGxlJnF1b3Q7LFxuICBwcm9wczoge30sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIENvbG9yR3JpZENoYXJ0RGF0YTogW10sXG4gICAgICBjdXJzb3JTdHlsZTogeyBjdXJzb3I6ICZxdW90O2F1dG8mcXVvdDsgfSxcbiAgICB9O1xuICB9LFxuICBjb21wb25lbnRzOiB7XG4gICAgQ29sb3JHcmlkQ2hhcnRWaXJ0dWFsU2Nyb2xsLFxuICB9LFxuICB3YXRjaDoge30sXG4gIGNvbXB1dGVkOiB7fSxcbiAgY3JlYXRlZCgpIHtcbiAgICBsZXQgQ29sb3JHcmlkQ2hhcnREYXRhID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgJmx0OyAzMDsgaSsrKSB7XG4gICAgICBsZXQgaXRlbSA9IFtdO1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogJmx0OyAxMDsgaisrKSB7XG4gICAgICAgIGl0ZW0ucHVzaCh7XG4gICAgICAgICAgbmFtZTogaSxcbiAgICAgICAgICB2YWx1ZTogaixcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBDb2xvckdyaWRDaGFydERhdGEucHVzaChpdGVtKTtcbiAgICB9XG4gICAgdGhpcy5Db2xvckdyaWRDaGFydERhdGEgPSBDb2xvckdyaWRDaGFydERhdGE7XG4gIH0sXG4gIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICB9LFxuICBiZWZvcmVEZXN0cm95KCkge30sXG59O1xuJmx0Oy9zY3JpcHQmZ3Q7XG4mbHQ7c3R5bGUgbGFuZz0mcXVvdDtsZXNzJnF1b3Q7IHNjb3BlZCZndDtcbiZsdDsvc3R5bGUmZ3Q7XG48L2NvZGU+PC9wcmU+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvZGUtZm9sZGVyXCI+5pi+56S65Luj56CBPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuPGg0PjIuIOS9v+eUqOaPkuanveaYvuekuuagvOWtkOWGheWuuTwvaDQ+XG48ZGl2IGNsYXNzPVwidnVlLWRlbW8td3JhcHBlclwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPENvbTdxdjQxc2Nsb3p6OTczYURlbW8xPjwvQ29tN3F2NDFzY2xveno5NzNhRGVtbzE+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLWhpZ2hsaWdodFwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLWhpZ2hsaWdodC1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHByZT48Y29kZSBjbGFzcz1cImh0bWxcIiB2LXByZSA+Jmx0O3RlbXBsYXRlJmd0O1xuICAgICZsdDtDb2xvckdyaWRDaGFydFZpcnR1YWxTY3JvbGxcbiAgICAgIDpkYXRhPSZxdW90O0NvbG9yR3JpZENoYXJ0RGF0YSZxdW90O1xuICAgICAgOnNob3dUb29sdGlwPSZxdW90O2ZhbHNlJnF1b3Q7XG4gICAgICBzdHlsZT0mcXVvdDt3aWR0aDo4MCU7bWFyZ2luOjAgYXV0byZxdW90O1xuICAgICZndDtcbiAgICAgICAgJmx0O3NwYW4gc2xvdC1zY29wZT0mcXVvdDt7IHJlY29yZCB9JnF1b3Q7Jmd0O3t7IGBzbG90LSR7cmVjb3JkLnZhbHVlfWAgfX0mbHQ7L3NwYW4mZ3Q7XG4gICAgJmx0Oy9Db2xvckdyaWRDaGFydFZpcnR1YWxTY3JvbGwmZ3Q7XG4mbHQ7L3RlbXBsYXRlJmd0O1xuJmx0O3NjcmlwdCZndDtcbmltcG9ydCBDb2xvckdyaWRDaGFydFZpcnR1YWxTY3JvbGwgZnJvbSAmcXVvdDtAL3BhY2thZ2VzL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwmcXVvdDs7XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICZxdW90O2NvbG9yLWdyaWQtY2hhcnQtZXhhbXBsZSZxdW90OyxcbiAgcHJvcHM6IHt9LFxuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBDb2xvckdyaWRDaGFydERhdGE6IFtdLFxuICAgIH07XG4gIH0sXG4gIGNvbXBvbmVudHM6IHtcbiAgICBDb2xvckdyaWRDaGFydFZpcnR1YWxTY3JvbGwsXG4gIH0sXG4gIHdhdGNoOiB7fSxcbiAgY29tcHV0ZWQ6IHt9LFxuICBjcmVhdGVkKCkge1xuICAgIGxldCBDb2xvckdyaWRDaGFydERhdGEgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSAmbHQ7IDMwOyBpKyspIHtcbiAgICAgIGxldCBpdGVtID0gW107XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiAmbHQ7IDEwOyBqKyspIHtcbiAgICAgICAgaXRlbS5wdXNoKHtcbiAgICAgICAgICBuYW1lOiBpLFxuICAgICAgICAgIHZhbHVlOiBqLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIENvbG9yR3JpZENoYXJ0RGF0YS5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgICB0aGlzLkNvbG9yR3JpZENoYXJ0RGF0YSA9IENvbG9yR3JpZENoYXJ0RGF0YTtcbiAgfSxcbiAgbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gIH0sXG4gIGJlZm9yZURlc3Ryb3koKSB7fSxcbn07XG4mbHQ7L3NjcmlwdCZndDtcbiZsdDtzdHlsZSBsYW5nPSZxdW90O2xlc3MmcXVvdDsgc2NvcGVkJmd0O1xuJmx0Oy9zdHlsZSZndDtcbjwvY29kZT48L3ByZT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29kZS1mb2xkZXJcIj7mmL7npLrku6PnoIE8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPC9kaXY+XG48aDQ+My4g5L2/55SoIHRvb2x0aXA8L2g0PlxuPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLXdyYXBwZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxDb203cXY0MXNjbG96ejk3M2FEZW1vMj48L0NvbTdxdjQxc2Nsb3p6OTczYURlbW8yPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2dWUtZGVtby1oaWdobGlnaHRcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ2dWUtZGVtby1oaWdobGlnaHQtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxwcmU+PGNvZGUgY2xhc3M9XCJodG1sXCIgdi1wcmUgPiZsdDt0ZW1wbGF0ZSZndDtcbiAgICAmbHQ7Q29sb3JHcmlkQ2hhcnRWaXJ0dWFsU2Nyb2xsXG4gICAgICA6ZGF0YT0mcXVvdDtDb2xvckdyaWRDaGFydERhdGEmcXVvdDtcbiAgICAgIDpzaG93VG9vbHRpcD0mcXVvdDt0cnVlJnF1b3Q7XG4gICAgICBzdHlsZT0mcXVvdDt3aWR0aDo4MCU7bWFyZ2luOjAgYXV0byZxdW90O1xuICAgICZndDtcbiAgICAgICAgJmx0O3NwYW4gc2xvdD0mcXVvdDt0b29sdGlwU2xvdCZxdW90OyBzbG90LXNjb3BlPSZxdW90O3sgcmVjb3JkIH0mcXVvdDsmZ3Q7e3sgcmVjb3JkIH19Jmx0Oy9zcGFuJmd0O1xuICAgICZsdDsvQ29sb3JHcmlkQ2hhcnRWaXJ0dWFsU2Nyb2xsJmd0O1xuJmx0Oy90ZW1wbGF0ZSZndDtcbiZsdDtzY3JpcHQmZ3Q7XG5pbXBvcnQgQ29sb3JHcmlkQ2hhcnRWaXJ0dWFsU2Nyb2xsIGZyb20gJnF1b3Q7QC9wYWNrYWdlcy9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsJnF1b3Q7O1xuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAmcXVvdDtjb2xvci1ncmlkLWNoYXJ0LWV4YW1wbGUmcXVvdDssXG4gIHByb3BzOiB7fSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgQ29sb3JHcmlkQ2hhcnREYXRhOiBbXSxcbiAgICB9O1xuICB9LFxuICBjb21wb25lbnRzOiB7XG4gICAgQ29sb3JHcmlkQ2hhcnRWaXJ0dWFsU2Nyb2xsLFxuICB9LFxuICB3YXRjaDoge30sXG4gIGNvbXB1dGVkOiB7fSxcbiAgY3JlYXRlZCgpIHtcbiAgICBsZXQgQ29sb3JHcmlkQ2hhcnREYXRhID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgJmx0OyAzMDsgaSsrKSB7XG4gICAgICBsZXQgaXRlbSA9IFtdO1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogJmx0OyAxMDsgaisrKSB7XG4gICAgICAgIGl0ZW0ucHVzaCh7XG4gICAgICAgICAgbmFtZTogaSxcbiAgICAgICAgICB2YWx1ZTogaixcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBDb2xvckdyaWRDaGFydERhdGEucHVzaChpdGVtKTtcbiAgICB9XG4gICAgdGhpcy5Db2xvckdyaWRDaGFydERhdGEgPSBDb2xvckdyaWRDaGFydERhdGE7XG4gIH0sXG4gIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICB9LFxuICBiZWZvcmVEZXN0cm95KCkge30sXG59O1xuJmx0Oy9zY3JpcHQmZ3Q7XG4mbHQ7c3R5bGUgbGFuZz0mcXVvdDtsZXNzJnF1b3Q7IHNjb3BlZCZndDtcbiZsdDsvc3R5bGUmZ3Q7XG48L2NvZGU+PC9wcmU+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvZGUtZm9sZGVyXCI+5pi+56S65Luj56CBPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuPGg0PjQuIOaUueWPmCBncmlkIOS4reeahOm8oOagh+agt+W8jzwvaDQ+XG48ZGl2IGNsYXNzPVwidnVlLWRlbW8td3JhcHBlclwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPENvbTdxdjQxc2Nsb3p6OTczYURlbW8zPjwvQ29tN3F2NDFzY2xveno5NzNhRGVtbzM+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLWhpZ2hsaWdodFwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInZ1ZS1kZW1vLWhpZ2hsaWdodC1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHByZT48Y29kZSBjbGFzcz1cImh0bWxcIiB2LXByZSA+Jmx0O3RlbXBsYXRlJmd0O1xuICAgICZsdDtDb2xvckdyaWRDaGFydFZpcnR1YWxTY3JvbGxcbiAgICAgIDpkYXRhPSZxdW90O0NvbG9yR3JpZENoYXJ0RGF0YSZxdW90O1xuICAgICAgOnNob3dUb29sdGlwPSZxdW90O2ZhbHNlJnF1b3Q7XG4gICAgICA6Y3Vyc29yU3R5bGU9JnF1b3Q7Y3Vyc29yU3R5bGUmcXVvdDtcbiAgICAgIEBpdGVtTW91c2VNb3ZlPSZxdW90O2l0ZW1Nb3VzZU1vdmUmcXVvdDtcbiAgICAgIEBpdGVtQ2xpY2s9JnF1b3Q7aXRlbUNsaWNrJnF1b3Q7XG4gICAgICBzdHlsZT0mcXVvdDt3aWR0aDo4MCU7bWFyZ2luOjAgYXV0byZxdW90O1xuICAgICZndDtcbiAgICAmbHQ7L0NvbG9yR3JpZENoYXJ0VmlydHVhbFNjcm9sbCZndDtcbiZsdDsvdGVtcGxhdGUmZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuaW1wb3J0IENvbG9yR3JpZENoYXJ0VmlydHVhbFNjcm9sbCBmcm9tICZxdW90O0AvcGFja2FnZXMvY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbCZxdW90OztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJnF1b3Q7Y29sb3ItZ3JpZC1jaGFydC1leGFtcGxlJnF1b3Q7LFxuICBwcm9wczoge30sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIENvbG9yR3JpZENoYXJ0RGF0YTogW10sXG4gICAgICBjdXJzb3JTdHlsZTogeyBjdXJzb3I6ICZxdW90O2F1dG8mcXVvdDsgfSxcbiAgICB9O1xuICB9LFxuICBjb21wb25lbnRzOiB7XG4gICAgQ29sb3JHcmlkQ2hhcnRWaXJ0dWFsU2Nyb2xsLFxuICB9LFxuICB3YXRjaDoge30sXG4gIGNvbXB1dGVkOiB7fSxcbiAgY3JlYXRlZCgpIHtcbiAgICBsZXQgQ29sb3JHcmlkQ2hhcnREYXRhID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgJmx0OyAzMDsgaSsrKSB7XG4gICAgICBsZXQgaXRlbSA9IFtdO1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogJmx0OyAxMDsgaisrKSB7XG4gICAgICAgIGl0ZW0ucHVzaCh7XG4gICAgICAgICAgbmFtZTogaSxcbiAgICAgICAgICB2YWx1ZTogaixcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBDb2xvckdyaWRDaGFydERhdGEucHVzaChpdGVtKTtcbiAgICB9XG4gICAgdGhpcy5Db2xvckdyaWRDaGFydERhdGEgPSBDb2xvckdyaWRDaGFydERhdGE7XG4gIH0sXG4gIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICAgIGl0ZW1Nb3VzZU1vdmUoaXRlbSkge1xuICAgICAgICBjb25zdCB7IHZhbHVlID0gMCB9ID0gaXRlbTtcbiAgICAgICAgaWYgKHZhbHVlICZndDsgMCkge1xuICAgICAgICAgICAgdGhpcy5jdXJzb3JTdHlsZSA9IHsgY3Vyc29yOiAmcXVvdDtwb2ludGVyJnF1b3Q7IH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmN1cnNvclN0eWxlID0geyBjdXJzb3I6ICZxdW90O25vdC1hbGxvd2VkJnF1b3Q7IH07XG4gICAgICAgIH1cbiAgICB9LFxuICAgIGl0ZW1DbGljayhpdGVtKSB7fSxcbiAgfSxcbiAgYmVmb3JlRGVzdHJveSgpIHt9LFxufTtcbiZsdDsvc2NyaXB0Jmd0O1xuJmx0O3N0eWxlIGxhbmc9JnF1b3Q7bGVzcyZxdW90OyBzY29wZWQmZ3Q7XG4mbHQ7L3N0eWxlJmd0O1xuPC9jb2RlPjwvcHJlPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2RlLWZvbGRlclwiPuaYvuekuuS7o+eggTwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8L2Rpdj5cbjxoMz5BUEk8L2gzPlxuPHRhYmxlPlxuPHRoZWFkPlxuPHRyPlxuPHRoPuWxnuaApzwvdGg+XG48dGg+6K+05piOPC90aD5cbjx0aD7nsbvlnos8L3RoPlxuPHRoPum7mOiupOWAvDwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0cj5cbjx0ZD5kYXRhPC90ZD5cbjx0ZD7muLLmn5PmlbDmja48L3RkPlxuPHRkPjxjb2RlPkFycmF5Jmx0O0FycmF5Jmd0OzwvY29kZT48L3RkPlxuPHRkPjxjb2RlPltbXV0gIDwvY29kZT48L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5pdGVtSGVpZ2h0PC90ZD5cbjx0ZD7mr4/kuKrmoLzlrZDnmoTpq5jluqY8L3RkPlxuPHRkPk51bWJlcjwvdGQ+XG48dGQ+NTA8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5pdGVtV2lkdGg8L3RkPlxuPHRkPuavj+S4quagvOWtkOeahOWuveW6pjwvdGQ+XG48dGQ+TnVtYmVyPC90ZD5cbjx0ZD48L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5tYXhIZWlnaHQ8L3RkPlxuPHRkPuWuueWZqOeahOacgOWkp+mrmOW6pjwvdGQ+XG48dGQ+TnVtYmVyPC90ZD5cbjx0ZD4zMDA8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5zaG93VG9vbHRpcDwvdGQ+XG48dGQ+5piv5ZCm5pi+56S6IHNob3dUb29sdGlwICwg5b2T5pe25pi+56S65pe26ZyA6KaB5oyH5a6a5o+S5qe9IHNsb3Q9JnF1b3Q7dG9vbHRpcFNsb3QmcXVvdDs8L3RkPlxuPHRkPkJvb2xlYW48L3RkPlxuPHRkPnRydWU8L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD5jdXJzb3JTdHlsZTwvdGQ+XG48dGQ+Z3JpZCDnmoTpvKDmoIfmoLflvI88L3RkPlxuPHRkPk9iamVjdDwvdGQ+XG48dGQ+e2N1cnNvcjomcXVvdDthdXRvJnF1b3Q7IH08L3RkPlxuPC90cj5cbjwvdGJvZHk+XG48L3RhYmxlPlxuPGgzPuS6i+S7tjwvaDM+XG48dGFibGU+XG48dGhlYWQ+XG48dHI+XG48dGg+5LqL5Lu25ZCN56ewPC90aD5cbjx0aD7or7TmmI48L3RoPlxuPHRoPuWbnuiwg+WPguaVsDwvdGg+XG48L3RyPlxuPC90aGVhZD5cbjx0Ym9keT5cbjx0cj5cbjx0ZD5pdGVtQ2xpY2s8L3RkPlxuPHRkPueCueWHu+avj+S4quagvOWtkOaXtueahOWbnuiwgzwvdGQ+XG48dGQ+PGNvZGU+KGl0ZW1EYXRhKSA9Jmd0OyB2b2lkPC9jb2RlPjwvdGQ+XG48L3RyPlxuPHRyPlxuPHRkPml0ZW1Nb3VzZU1vdmU8L3RkPlxuPHRkPuWcqOavj+S4quagvOWtkOS4iuenu+WKqOaXtueahOWbnuiwgzwvdGQ+XG48dGQ+PGNvZGU+KGl0ZW1EYXRhKSA9Jmd0OyB2b2lkPC9jb2RlPjwvdGQ+XG48L3RyPlxuPC90Ym9keT5cbjwvdGFibGU+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L3RlbXBsYXRlPlxuXG4gICAgICAgIDxzY3JpcHQ+XG4gICAgICAgICAgICBpbXBvcnQgQ29tN3F2NDFzY2xveno5NzNhRGVtbzAgZnJvbSBcIi4vY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD9mZW5jZSZjb21wb25lbnRJbmRleD0wXCI7aW1wb3J0IENvbTdxdjQxc2Nsb3p6OTczYURlbW8xIGZyb20gXCIuL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwubWQ/ZmVuY2UmY29tcG9uZW50SW5kZXg9MVwiO2ltcG9ydCBDb203cXY0MXNjbG96ejk3M2FEZW1vMiBmcm9tIFwiLi9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsLm1kP2ZlbmNlJmNvbXBvbmVudEluZGV4PTJcIjtpbXBvcnQgQ29tN3F2NDFzY2xveno5NzNhRGVtbzMgZnJvbSBcIi4vY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD9mZW5jZSZjb21wb25lbnRJbmRleD0zXCI7XG4gICAgICAgICAgICBleHBvcnQgZGVmYXVsdCB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ0NvbXBvbmVudERvYycsXG4gICAgICAgICAgICAgICAgY29tcG9uZW50czoge1xuICAgICAgICAgICAgICAgICAgICAnQ29tN3F2NDFzY2xveno5NzNhRGVtbzAnOiBDb203cXY0MXNjbG96ejk3M2FEZW1vMCwnQ29tN3F2NDFzY2xveno5NzNhRGVtbzEnOiBDb203cXY0MXNjbG96ejk3M2FEZW1vMSwnQ29tN3F2NDFzY2xveno5NzNhRGVtbzInOiBDb203cXY0MXNjbG96ejk3M2FEZW1vMiwnQ29tN3F2NDFzY2xveno5NzNhRGVtbzMnOiBDb203cXY0MXNjbG96ejk3M2FEZW1vM1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIDwvc2NyaXB0PlxuICAgICIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD1hNjkzNjYyMiZzY29wZWQ9dHJ1ZSZmZW5jZSZjb21wb25lbnRJbmRleD0wXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0wXCJcbmV4cG9ydCAqIGZyb20gXCIuL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MFwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCJhNjkzNjYyMlwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL21hcmtkb3duLXZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMSEuL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MVwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP2NhY2hlRGlyZWN0b3J5IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9tYXJrZG93bi12dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTEhLi9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTFcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mNWNiZTNhOCZzY29wZWQ9dHJ1ZSZmZW5jZSZjb21wb25lbnRJbmRleD0xXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0xXCJcbmV4cG9ydCAqIGZyb20gXCIuL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MVwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCJmNWNiZTNhOFwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL21hcmtkb3duLXZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMSEuL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP2NhY2hlRGlyZWN0b3J5IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9tYXJrZG93bi12dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTEhLi9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTJcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD1jNWIyNjhmMiZzY29wZWQ9dHJ1ZSZmZW5jZSZjb21wb25lbnRJbmRleD0yXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0yXCJcbmV4cG9ydCAqIGZyb20gXCIuL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9MlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCJjNWIyNjhmMlwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL21hcmtkb3duLXZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMSEuL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmZmVuY2UmY29tcG9uZW50SW5kZXg9M1wiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzP2NhY2hlRGlyZWN0b3J5IS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi9tYXJrZG93bi12dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTEhLi9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTNcIiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL21hcmtkb3duLXZ1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMSEuL2NvbG9yLWdyaWQtY2hhcnQtdmlydHVhbC1zY3JvbGwubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbWFya2Rvd24tdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0xIS4vY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTNmNGQ1ZTRhJnNjb3BlZD10cnVlJmZlbmNlJmNvbXBvbmVudEluZGV4PTNcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJmZlbmNlJmNvbXBvbmVudEluZGV4PTNcIlxuZXhwb3J0ICogZnJvbSBcIi4vY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZmZW5jZSZjb21wb25lbnRJbmRleD0zXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjNmNGQ1ZTRhXCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsLm1kP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTdiMmYyY2U4XCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vY29sb3ItZ3JpZC1jaGFydC12aXJ0dWFsLXNjcm9sbC5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9jb2xvci1ncmlkLWNoYXJ0LXZpcnR1YWwtc2Nyb2xsLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsIi8qXG4gKiBAQXV0aG9yOiBhdGRvd1xuICogQERhdGU6IDIwMjItMDMtMjMgMTU6MTA6NDFcbiAqIEBMYXN0RWRpdG9yczogbnVsbFxuICogQExhc3RFZGl0VGltZTogMjAyMi0wMy0yMyAxNjoyMjo0MlxuICogQERlc2NyaXB0aW9uOiBmaWxlIGRlc2NyaXB0aW9uXG4gKi9cbmltcG9ydCBDb2xvckdyaWRDaGFydFZpcnR1YWxTY3JvbGwgZnJvbSAnLi9zcmMvaW5kZXgnXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5Db2xvckdyaWRDaGFydFZpcnR1YWxTY3JvbGwuaW5zdGFsbCA9IGZ1bmN0aW9uIChWdWUpIHtcbiAgVnVlLmNvbXBvbmVudChDb2xvckdyaWRDaGFydFZpcnR1YWxTY3JvbGwubmFtZSwgQ29sb3JHcmlkQ2hhcnRWaXJ0dWFsU2Nyb2xsKVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb2xvckdyaWRDaGFydFZpcnR1YWxTY3JvbGwiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCl7dmFyIF92bT10aGlzLF9jPV92bS5fc2VsZi5fYztyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiY29sb3ItZ3JpZC1jaGFydFwifSxbX2MoJ0dlbWluaVNjcm9sbGJhcicse3JlZjpcImdlbWluaVNjcm9sbGJhclJlZlwiLHN0YXRpY0NsYXNzOlwiLnBtZC1zY3JvbGxiYXIgLm1DdXN0b21TY3JvbGxiYXIgZ20tc2Nyb2xsYmFyLWNvbG9yIHdoaXRlXCIsc3R5bGU6KGBoZWlnaHQ6JHtfdm0uY29udGVudEhlaWdodCArICdweCd9YCl9LFtfYygnZGl2Jyx7cmVmOlwiY2xpZW50SGVpZ2h0XCIsc3RhdGljQ2xhc3M6XCJsaXN0LXZpZXctcGhhbnRvbVwiLHN0eWxlOih7IGhlaWdodDogX3ZtLnZpcnR1YWxDb250ZW50SGVpZ2h0ICsgJ3B4JyB9KX0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3JlZjpcImNvbnRlbnRcIixvbjp7XCJtb3VzZWVudGVyXCI6X3ZtLmNvbnRlbnRNb3VzZWVudGVyLFwibW91c2VsZWF2ZVwiOl92bS5jb250ZW50TW91c2VsZWF2ZX19LF92bS5fbCgoX3ZtLnJlbmRlckRhdGEpLGZ1bmN0aW9uKGRhdGFSb3csZGF0YVJvd0luZGV4KXtyZXR1cm4gX2MoJ2Rpdicse2tleTpkYXRhUm93SW5kZXgsc3RhdGljQ2xhc3M6XCJjb2xvci1ncmlkLWNoYXJ0LXJvd1wiLHN0eWxlOih7IGhlaWdodDogX3ZtLml0ZW1IZWlnaHQgKyAncHgnIH0pfSxfdm0uX2woKGRhdGFSb3cpLGZ1bmN0aW9uKGRhdGFJdGVtLGRhdGFJdGVtSW5kZXgpe3JldHVybiBfYygnZGl2Jyx7a2V5OmRhdGFJdGVtSW5kZXgsc3RhdGljQ2xhc3M6XCJjb2xvci1ncmlkLWNoYXJ0LWl0ZW1cIixzdHlsZTooeyAuLi5fdm0uY2FsSXRlbVN0eWxlKGRhdGFJdGVtKSwgLi4uX3ZtLmN1cnNvclN0eWxlIH0pLG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtyZXR1cm4gX3ZtLml0ZW1DbGljayhkYXRhSXRlbSwgZGF0YVJvd0luZGV4LCBkYXRhSXRlbUluZGV4KX0sXCJtb3VzZW1vdmVcIjpmdW5jdGlvbigkZXZlbnQpe3JldHVybiBfdm0uaXRlbU1vdXNlbW92ZShkYXRhSXRlbSl9fX0sWyhfdm0uJHNjb3BlZFNsb3RzLmRlZmF1bHQpP1tfdm0uX3QoXCJkZWZhdWx0XCIsbnVsbCx7XCJyZWNvcmRcIjpkYXRhSXRlbX0pXTpfYygnc3BhbicsW192bS5fdihcIiBcIitfdm0uX3MoZGF0YUl0ZW0udmFsdWUpKV0pXSwyKX0pLDApfSksMCldKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtkaXJlY3RpdmVzOlt7bmFtZTpcInNob3dcIixyYXdOYW1lOlwidi1zaG93XCIsdmFsdWU6KF92bS50b29sdGlwSXNTaG93KSxleHByZXNzaW9uOlwidG9vbHRpcElzU2hvd1wifV0sc3RhdGljQ2xhc3M6XCJjb2xvci1ncmlkLWNoYXJ0LXRvb2x0aXBcIixzdHlsZTooeyBsZWZ0OiBfdm0udG9vbHRpcFBvc2l0aW9uLnggKyAncHgnLCB0b3A6IF92bS50b29sdGlwUG9zaXRpb24ueSArICdweCcgfSl9LFsoX3ZtLiRzY29wZWRTbG90cy50b29sdGlwU2xvdCk/W192bS5fdChcInRvb2x0aXBTbG90XCIsbnVsbCx7XCJyZWNvcmRcIjpfdm0udG9vbHRpcERhdGF9KV06X2MoJ3NwYW4nLFtfdm0uX3YoXCLor7fmjIflrprmj5Lmp73lhoXlrrlcIildKV0sMildLDEpXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/Y2FjaGVEaXJlY3RvcnkhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz9jYWNoZURpcmVjdG9yeSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIiwiPCEtLVxuICogQEF1dGhvcjogYXRkb3dcbiAqIEBEYXRlOiAyMDIyLTAzLTIzIDE1OjEwOjUxXG4gKiBATGFzdEVkaXRvcnM6IG51bGxcbiAqIEBMYXN0RWRpdFRpbWU6IDIwMjItMTAtMTEgMjE6MDI6NDdcbiAqIEBEZXNjcmlwdGlvbjogZmlsZSBkZXNjcmlwdGlvblxuLS0+XG48dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJjb2xvci1ncmlkLWNoYXJ0XCI+XG4gICAgPEdlbWluaVNjcm9sbGJhclxuICAgICAgY2xhc3M9XCIucG1kLXNjcm9sbGJhciAubUN1c3RvbVNjcm9sbGJhciBnbS1zY3JvbGxiYXItY29sb3Igd2hpdGVcIlxuICAgICAgOnN0eWxlPVwiYGhlaWdodDoke2NvbnRlbnRIZWlnaHQgKyAncHgnfWBcIlxuICAgICAgcmVmPVwiZ2VtaW5pU2Nyb2xsYmFyUmVmXCJcbiAgICA+XG4gICAgICA8ZGl2IGNsYXNzPVwibGlzdC12aWV3LXBoYW50b21cIiByZWY9XCJjbGllbnRIZWlnaHRcIiA6c3R5bGU9XCJ7IGhlaWdodDogdmlydHVhbENvbnRlbnRIZWlnaHQgKyAncHgnIH1cIj48L2Rpdj5cbiAgICAgIDxkaXYgcmVmPVwiY29udGVudFwiIEBtb3VzZWVudGVyPVwiY29udGVudE1vdXNlZW50ZXJcIiBAbW91c2VsZWF2ZT1cImNvbnRlbnRNb3VzZWxlYXZlXCI+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzcz1cImNvbG9yLWdyaWQtY2hhcnQtcm93XCJcbiAgICAgICAgICB2LWZvcj1cIihkYXRhUm93LCBkYXRhUm93SW5kZXgpIGluIHJlbmRlckRhdGFcIlxuICAgICAgICAgIDprZXk9XCJkYXRhUm93SW5kZXhcIlxuICAgICAgICAgIDpzdHlsZT1cInsgaGVpZ2h0OiBpdGVtSGVpZ2h0ICsgJ3B4JyB9XCJcbiAgICAgICAgPlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzPVwiY29sb3ItZ3JpZC1jaGFydC1pdGVtXCJcbiAgICAgICAgICAgIDpzdHlsZT1cInsgLi4uY2FsSXRlbVN0eWxlKGRhdGFJdGVtKSwgLi4uY3Vyc29yU3R5bGUgfVwiXG4gICAgICAgICAgICB2LWZvcj1cIihkYXRhSXRlbSwgZGF0YUl0ZW1JbmRleCkgaW4gZGF0YVJvd1wiXG4gICAgICAgICAgICA6a2V5PVwiZGF0YUl0ZW1JbmRleFwiXG4gICAgICAgICAgICBAY2xpY2s9XCJpdGVtQ2xpY2soZGF0YUl0ZW0sIGRhdGFSb3dJbmRleCwgZGF0YUl0ZW1JbmRleClcIlxuICAgICAgICAgICAgQG1vdXNlbW92ZT1cIml0ZW1Nb3VzZW1vdmUoZGF0YUl0ZW0pXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj1cIiRzY29wZWRTbG90cy5kZWZhdWx0XCI+XG4gICAgICAgICAgICAgIDxzbG90IDpyZWNvcmQ9XCJkYXRhSXRlbVwiIC8+XG4gICAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgPHNwYW4gdi1lbHNlPiB7eyBkYXRhSXRlbS52YWx1ZSB9fTwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L0dlbWluaVNjcm9sbGJhcj5cbiAgICA8ZGl2XG4gICAgICBjbGFzcz1cImNvbG9yLWdyaWQtY2hhcnQtdG9vbHRpcFwiXG4gICAgICA6c3R5bGU9XCJ7IGxlZnQ6IHRvb2x0aXBQb3NpdGlvbi54ICsgJ3B4JywgdG9wOiB0b29sdGlwUG9zaXRpb24ueSArICdweCcgfVwiXG4gICAgICB2LXNob3c9XCJ0b29sdGlwSXNTaG93XCJcbiAgICA+XG4gICAgICA8dGVtcGxhdGUgdi1pZj1cIiRzY29wZWRTbG90cy50b29sdGlwU2xvdFwiPlxuICAgICAgICA8c2xvdCBuYW1lPVwidG9vbHRpcFNsb3RcIiA6cmVjb3JkPVwidG9vbHRpcERhdGFcIj48L3Nsb3Q+XG4gICAgICA8L3RlbXBsYXRlPlxuICAgICAgPHNwYW4gdi1lbHNlPuivt+aMh+WumuaPkuanveWGheWuuTwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ0NvbG9yR3JpZENoYXJ0VmlydHVhbFNjcm9sbCcsXG4gIHByb3BzOiB7XG4gICAgZGF0YToge1xuICAgICAgdHlwZTogQXJyYXksXG4gICAgICBkZWZhdWx0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBbW11dXG4gICAgICB9LFxuICAgICAgcmVxdWlyZTogdHJ1ZSxcbiAgICB9LFxuICAgIGl0ZW1IZWlnaHQ6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDUwLFxuICAgIH0sXG4gICAgaXRlbVdpZHRoOiB7XG4gICAgICB0eXBlOiBOdW1iZXIsXG4gICAgfSxcbiAgICBtYXhIZWlnaHQ6IHtcbiAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgIGRlZmF1bHQ6IDMwMCxcbiAgICB9LFxuICAgIHNob3dUb29sdGlwOiB7XG4gICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICB9LFxuICAgIGN1cnNvclN0eWxlOiB7XG4gICAgICB0eXBlOiBPYmplY3QsXG4gICAgICBkZWZhdWx0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgY3Vyc29yOiAnYXV0bycsXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfSxcbiAgICBzdGFydENvbG9yOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnI2MxY2FlOScsXG4gICAgfSxcbiAgICBlbmRDb2xvcjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJyMyNzNDNzAnLFxuICAgIH0sXG4gICAgYm91bmRhcnlWYWx1ZToge1xuICAgICAgdHlwZTogT2JqZWN0LFxuICAgIH0sXG4gIH0sXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG1heFZhbHVlOiAwLFxuICAgICAgbWluVmFsdWU6IDAsXG4gICAgICBjb2xvcnM6IFtdLFxuICAgICAgLy8g6Jma5ouf5rua5YqoXG4gICAgICByZW5kZXJEYXRhOiBbXSxcbiAgICAgIHZpcnR1YWxDb250ZW50SGVpZ2h0OiAzMDAsXG4gICAgICBjb250ZW50SGVpZ2h0OiAzMDAsXG4gICAgICBzY3JvbGxIZWlnaHQ6IDMwMCxcbiAgICAgIHNjcm9sbFJlc29sdmVUaW1lcjogbnVsbCxcbiAgICAgIHRvb2x0aXBQb3NpdGlvbjoge1xuICAgICAgICB4OiAwLFxuICAgICAgICB5OiAwLFxuICAgICAgfSxcbiAgICAgIHRvb2x0aXBEYXRhOiB7fSxcbiAgICAgIHRvb2x0aXBJc1Nob3c6IGZhbHNlLFxuICAgIH1cbiAgfSxcbiAgY29tcG9uZW50czoge30sXG4gIHdhdGNoOiB7XG4gICAgZGF0YToge1xuICAgICAgaW1tZWRpYXRlOiB0cnVlLFxuICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zdCB7IG1heCwgbWluIH0gPSB0aGlzLmNhbERhdGFCb3VuZGFyeVZhbHVlKClcbiAgICAgICAgdGhpcy5tYXhWYWx1ZSA9IG1heFxuICAgICAgICB0aGlzLm1pblZhbHVlID0gbWluXG4gICAgICAgIGxldCBzdGVwID0gMFxuICAgICAgICBpZiAodGhpcy5taW5WYWx1ZSA9PT0gMCkge1xuICAgICAgICAgIGlmICh0aGlzLm1heFZhbHVlID09PSAwKSB7XG4gICAgICAgICAgICBzdGVwID0gMFxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdGVwID0gdGhpcy5tYXhWYWx1ZSAtIHRoaXMubWluVmFsdWUgKyAxIC8vIOWmguaenOaYrzAteOaXtu+8jHN0ZXDlupTor6XmmK94LTArMSww5Lmf6ZyA6KaB5Y2g5LiA5Liq5YiG5YmyXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN0ZXAgPSB0aGlzLm1heFZhbHVlIC0gdGhpcy5taW5WYWx1ZVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvbG9ycyA9IHRoaXMuZ3JhZGllbnRDb2xvcnModGhpcy5zdGFydENvbG9yLCB0aGlzLmVuZENvbG9yLCBzdGVwKVxuICAgICAgICB0aGlzLmNvbG9ycyA9IGNvbG9yc1xuICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7XG4gICAgICAgICAgdGhpcy51cGRhdGVWaXJ0dWFsQ29udGVudEhlaWdodCgpXG4gICAgICAgICAgdGhpcy51cGRhdGVDb250ZW50SGVpZ2h0KClcbiAgICAgICAgICB0aGlzLnVwZGF0ZSgwKVxuICAgICAgICB9KVxuICAgICAgICAvLyBjb25zb2xlLmxvZygnbWF4OicsIG1heCwgbWluKVxuICAgICAgICAvLyBjb25zb2xlLmxvZygndGhpcy5jb2xvcnMgOicsIHRoaXMuY29sb3JzKVxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBjb21wdXRlZDoge30sXG4gIGNyZWF0ZWQoKSB7fSxcbiAgbW91bnRlZCgpIHtcbiAgICBjb25zdCBnZW1pbmlTY3JvbGxiYXJWaWV3ID0gdGhpcy4kcmVmcy5nZW1pbmlTY3JvbGxiYXJSZWYuJGVsLmNoaWxkTm9kZXNbMl1cbiAgICBnZW1pbmlTY3JvbGxiYXJWaWV3LnNjcm9sbFRvcCA9IHRoaXMuc2Nyb2xsVG9wXG4gICAgZ2VtaW5pU2Nyb2xsYmFyVmlldy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLnNjcm9sbFJlc29sdmUpXG4gICAgdGhpcy4kb25jZSgnaG9vazpiZWZvcmVEZXN0cm95JywgKCkgPT4ge1xuICAgICAgZ2VtaW5pU2Nyb2xsYmFyVmlldy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLnNjcm9sbFJlc29sdmUpXG4gICAgfSlcbiAgICAvLyBjb25zb2xlLmxvZygnJHNjb3BlZFNsb3RzOicsIHRoaXMuJHNjb3BlZFNsb3RzKVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgLyoqXG4gICAgICBzdGFydCDlvIDlp4vpopzoibJcbiAgICAgIGVuZCDnu5PmnZ/popzoibJcbiAgICAgIHN0ZXBzIOminOiJsuWIhuinoyDmrKHmlbBcbiAgICAgIGdhbW1hIOaaguaXtueQhuino+S4uumAj+aYjuS4gOeCue+8iOS8vemprO+8iVxuICAgICAqL1xuICAgIGdyYWRpZW50Q29sb3JzKHN0YXJ0LCBlbmQsIHN0ZXBzLCBnYW1tYSkge1xuICAgICAgdmFyIGksXG4gICAgICAgIGosXG4gICAgICAgIG1zLFxuICAgICAgICBtZSxcbiAgICAgICAgb3V0cHV0ID0gW10sXG4gICAgICAgIHNvID0gW11cbiAgICAgIGdhbW1hID0gZ2FtbWEgfHwgMVxuICAgICAgdmFyIG5vcm1hbGl6ZSA9IGZ1bmN0aW9uIChjaGFubmVsKSB7XG4gICAgICAgIHJldHVybiBNYXRoLnBvdyhjaGFubmVsIC8gMjU1LCBnYW1tYSlcbiAgICAgIH1cbiAgICAgIHN0YXJ0ID0gdGhpcy5wYXJzZUNvbG9yKHN0YXJ0KS5tYXAobm9ybWFsaXplKVxuICAgICAgZW5kID0gdGhpcy5wYXJzZUNvbG9yKGVuZCkubWFwKG5vcm1hbGl6ZSlcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBzdGVwczsgaSsrKSB7XG4gICAgICAgIG1zID0gaSAvIChzdGVwcyAtIDEpXG4gICAgICAgIG1lID0gMSAtIG1zXG4gICAgICAgIGZvciAoaiA9IDA7IGogPCAzOyBqKyspIHtcbiAgICAgICAgICBzb1tqXSA9IHRoaXMucGFkKE1hdGgucm91bmQoTWF0aC5wb3coc3RhcnRbal0gKiBtZSArIGVuZFtqXSAqIG1zLCAxIC8gZ2FtbWEpICogMjU1KS50b1N0cmluZygxNikpXG4gICAgICAgIH1cbiAgICAgICAgb3V0cHV0LnB1c2goJyMnICsgc28uam9pbignJykpXG4gICAgICB9XG4gICAgICByZXR1cm4gb3V0cHV0XG4gICAgfSxcbiAgICBwYXJzZUNvbG9yKGhleFN0cikge1xuICAgICAgcmV0dXJuIGhleFN0ci5sZW5ndGggPT09IDRcbiAgICAgICAgPyBoZXhTdHJcbiAgICAgICAgICAgIC5zdWJzdHIoMSlcbiAgICAgICAgICAgIC5zcGxpdCgnJylcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIDB4MTEgKiBwYXJzZUludChzLCAxNilcbiAgICAgICAgICAgIH0pXG4gICAgICAgIDogW2hleFN0ci5zdWJzdHIoMSwgMiksIGhleFN0ci5zdWJzdHIoMywgMiksIGhleFN0ci5zdWJzdHIoNSwgMildLm1hcChmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KHMsIDE2KVxuICAgICAgICAgIH0pXG4gICAgfSxcbiAgICAvLyB6ZXJvLXBhZCAxIGRpZ2l0IHRvIDJcbiAgICBwYWQocykge1xuICAgICAgcmV0dXJuIHMubGVuZ3RoID09PSAxID8gJzAnICsgcyA6IHNcbiAgICB9LFxuICAgIGNhbERhdGFCb3VuZGFyeVZhbHVlKCkge1xuICAgICAgaWYgKHRoaXMuYm91bmRhcnlWYWx1ZSkge1xuICAgICAgICBjb25zdCB7IG1heCwgbWluIH0gPSB0aGlzLmJvdW5kYXJ5VmFsdWVcbiAgICAgICAgcmV0dXJuIHsgbWluLCBtYXggfVxuICAgICAgfVxuICAgICAgbGV0IG1heCA9IDBcbiAgICAgIGxldCBtaW4gPSAwXG4gICAgICB0aGlzLmRhdGEuZm9yRWFjaCgoZGF0YUl0ZW0pID0+IHtcbiAgICAgICAgaWYgKGRhdGFJdGVtKSB7XG4gICAgICAgICAgZGF0YUl0ZW0uZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgaWYgKGl0ZW0udmFsdWUgPiBtYXgpIHtcbiAgICAgICAgICAgICAgbWF4ID0gaXRlbS52YWx1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGl0ZW0udmFsdWUgPCBtaW4pIHtcbiAgICAgICAgICAgICAgbWluID0gaXRlbS52YWx1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAvLyBjb25zb2xlLmxvZygnZGF0YTonLCB0aGlzLmRhdGEpXG4gICAgICAvLyBjb25zb2xlLmxvZygnbWF4OicsIG1heCwgbWluKVxuICAgICAgcmV0dXJuIHsgbWF4LCBtaW4gfVxuICAgIH0sXG4gICAgLy8gVE9ET+WQjumdoumcgOimgeaKveemu+WHuuWOu+WcqOWIneWni+WMluaXtuS4gOasoeiuoeeul+WHuuadpe+8jOS4jeimgeS4gOebtOmHjeWkjeWcsOa4suafk+iuoeeul1xuICAgIGNhbEl0ZW1TdHlsZShkYXRhSXRlbSkge1xuICAgICAgY29uc3Qgc3R5bGUgPSB7fVxuICAgICAgc3R5bGUuYmFja2dyb3VuZCA9IHRoaXMuY2FsSXRlbUNvbG9yKGRhdGFJdGVtLnZhbHVlKS5jb2xvclxuICAgICAgaWYgKHRoaXMuaXRlbVdpZHRoKSB7XG4gICAgICAgIGlmICh0aGlzLmRhdGEubGVuZ3RoID4gMCkge1xuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCd3aWR0aDonLCB0aGlzLmRhdGFbMF0ubGVuZ3RoICogdGhpcy5pdGVtV2lkdGgsIHRoaXMuJGVsLmNsaWVudFdpZHRoKVxuICAgICAgICAgIGlmICh0aGlzLmRhdGFbMF0ubGVuZ3RoICogdGhpcy5pdGVtV2lkdGggPiB0aGlzLiRlbC5jbGllbnRXaWR0aCkge1xuICAgICAgICAgICAgc3R5bGUud2lkdGggPSB0aGlzLml0ZW1XaWR0aCArICdweCdcbiAgICAgICAgICAgIHN0eWxlLmZsZXhTaHJpbmsgPSAwXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0eWxlLmZsZXggPSAxXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdHlsZS5mbGV4ID0gMVxuICAgICAgfVxuICAgICAgcmV0dXJuIHN0eWxlXG4gICAgfSxcbiAgICBjYWxJdGVtQ29sb3IodmFsdWUpIHtcbiAgICAgIGxldCBjb2xvciA9ICd3aGl0ZSdcbiAgICAgIC8qKlxuICAgICAgICog5Z+65pys5YWs5byP77yaY29sb3JzSW5kZXgvKHRoaXMuY29sb3JzLmxlbmd0aCAtIDEpID0gdmFsdWUvKHRoaXMubWF4VmFsdWUgLSB0aGlzLm1pblZhbHVlKVxuICAgICAgICog5L2G5piv5LiN5LiA5a6a5Lya5pyJ5pW05Y+W55qE57Si5byV77yM5a655piT6LaK55WMXG4gICAgICAgKi9cbiAgICAgIGxldCBjb2xvcnNJbmRleCA9IE1hdGguY2VpbCgoKHRoaXMuY29sb3JzLmxlbmd0aCAtIDEpICogdmFsdWUpIC8gKHRoaXMubWF4VmFsdWUgLSB0aGlzLm1pblZhbHVlKSlcbiAgICAgIC8vIOWuueaYk+i2iueVjOWkhOeQhlxuICAgICAgaWYgKGNvbG9yc0luZGV4ID4gdGhpcy5jb2xvcnMubGVuZ3RoIC0gMSkge1xuICAgICAgICBjb2xvcnNJbmRleCA9IHRoaXMuY29sb3JzLmxlbmd0aCAtIDFcbiAgICAgIH1cbiAgICAgIGNvbG9yID0gdGhpcy5jb2xvcnNbY29sb3JzSW5kZXhdXG4gICAgICAvLyBpZiAoISEhY29sb3IpIHtcbiAgICAgIC8vICAgY29uc29sZS5sb2coJ2NvbG9yOicsIGNvbG9yKVxuICAgICAgLy8gICBjb25zb2xlLmxvZygnY29sb3JzSW5kZXg6JywgY29sb3JzSW5kZXgpXG4gICAgICAvLyB9XG4gICAgICByZXR1cm4geyBjb2xvciwgY29sb3JzSW5kZXggfVxuICAgIH0sXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3omZrmi5/mu5rliqggc3RhcnQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHNjcm9sbFJlc29sdmUoZSkge1xuICAgICAgLy8g6Ziy5oqWXG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5zY3JvbGxSZXNvbHZlVGltZXIpXG4gICAgICB0aGlzLnNjcm9sbFJlc29sdmVUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLmdlbWluaVNjcm9sbGJhclNjcm9sbFRvcCA9IGUudGFyZ2V0LnNjcm9sbFRvcFxuICAgICAgICBjb25zdCB7IHNjcm9sbExlZnQsIHNjcm9sbFRvcCB9ID0gZS50YXJnZXRcbiAgICAgICAgdGhpcy4kZW1pdCgnc2Nyb2xsJywgeyBzY3JvbGxMZWZ0LCBzY3JvbGxUb3AgfSlcbiAgICAgIH0sIDEwKVxuICAgICAgdGhpcy51cGRhdGUoZS50YXJnZXQuc2Nyb2xsVG9wKVxuICAgIH0sXG4gICAgLy8g5pu05paw5b2T5YmN6KKr5riy5p+T5Ye65p2l55qE5pWw5o2uXG4gICAgdXBkYXRlKHNjcm9sbFRvcCA9IDApIHtcbiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgLy8g6I635Y+W5b2T5YmN5Y+v5bGV56S65pWw6YePXG4gICAgICAgIGNvbnN0IGNvdW50ID0gTWF0aC5jZWlsKHRoaXMuJGVsLmNsaWVudEhlaWdodCAvIHRoaXMuaXRlbUhlaWdodClcbiAgICAgICAgY29uc3Qgc3RhcnQgPSBNYXRoLmZsb29yKHNjcm9sbFRvcCAvIHRoaXMuaXRlbUhlaWdodClcbiAgICAgICAgLy8g5Y+W5b6X5Y+v6KeB5Yy65Z+f55qE57uT5p2f5pWw5o2u57Si5byVXG4gICAgICAgIGxldCBlbmQgPSBzdGFydCArIGNvdW50XG4gICAgICAgIC8vIOW+gOS4i+ihpTHvvIzlh4/lsJHpl6rng4HmhJ9cbiAgICAgICAgaWYgKGVuZCArIDEgPD0gdGhpcy5kYXRhLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICBlbmQgPSBlbmQgKyAxXG4gICAgICAgIH1cbiAgICAgICAgLy8g6K6h566X5Ye65Y+v6KeB5Yy65Z+f5a+55bqU55qE5pWw5o2u77yM6K6pIFZ1ZS5qcyDmm7TmlrBcbiAgICAgICAgdGhpcy5yZW5kZXJEYXRhID0gdGhpcy5kYXRhLnNsaWNlKHN0YXJ0LCBlbmQpXG4gICAgICAgIC8vIOaKiuWPr+ingeWMuuWfn+eahCB0b3Ag6K6+572u5Li66LW35aeL5YWD57Sg5Zyo5pW05Liq5YiX6KGo5Lit55qE5L2N572u77yI5L2/55SoIHRyYW5zZm9ybSDmmK/kuLrkuobmm7Tlpb3nmoTmgKfog73vvIlcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICAgIGlmICh0aGlzLiRyZWZzLmNvbnRlbnQpIHtcbiAgICAgICAgICAgIHRoaXMuJHJlZnMuY29udGVudC5zdHlsZS53ZWJraXRUcmFuc2Zvcm0gPSBgdHJhbnNsYXRlM2QoMCwgJHtzdGFydCAqIHRoaXMuaXRlbUhlaWdodH1weCwgMClgXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgICB9LFxuICAgIC8vIOabtOaWsOavj+adoeagvOWtkOmrmOW6plxuICAgIHVwZGF0ZUdyaWRIZWlnaHQoKSB7XG4gICAgICBpZiAodGhpcy5wcm9jZXNzVGFibGVNb2RlID09ICdkb3VibGUnKSB7XG4gICAgICAgIHRoaXMuZ3JpZEhlaWdodCA9IDcwXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmdyaWRIZWlnaHQgPSAzNVxuICAgICAgfVxuICAgIH0sXG4gICAgLy8g5rua5Yqo5p2h5rua5Yqo5Yiw6aG26YOoXG4gICAgZ2VtaW5pU2Nyb2xsYmFyUmVzZXQoKSB7XG4gICAgICB0cnkge1xuICAgICAgICB0aGlzLiRyZWZzLmdlbWluaVNjcm9sbGJhclJlZi4kZWwuY2hpbGROb2Rlc1syXS5zY3JvbGxUb3AgPSAwXG4gICAgICAgIHRoaXMuJGVtaXQoJ3Njcm9sbCcsIDApXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHt9XG4gICAgfSxcbiAgICAvLyDmm7TmlrDmkpHlvIDpq5jluqZcbiAgICB1cGRhdGVWaXJ0dWFsQ29udGVudEhlaWdodCgpIHtcbiAgICAgIHRoaXMudmlydHVhbENvbnRlbnRIZWlnaHQgPSB0aGlzLmRhdGEubGVuZ3RoICogdGhpcy5pdGVtSGVpZ2h0XG4gICAgfSxcbiAgICB1cGRhdGVDb250ZW50SGVpZ2h0KCkge1xuICAgICAgaWYgKHRoaXMudmlydHVhbENvbnRlbnRIZWlnaHQgPiB0aGlzLm1heEhlaWdodCkge1xuICAgICAgICB0aGlzLmNvbnRlbnRIZWlnaHQgPSB0aGlzLm1heEhlaWdodFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jb250ZW50SGVpZ2h0ID0gdGhpcy52aXJ0dWFsQ29udGVudEhlaWdodFxuICAgICAgfVxuICAgIH0sXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3omZrmi5/mu5rliqggZW5kLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBpdGVtQ2xpY2soZGF0YSwgcm93SW5kZXgsIENvbHVtbkluZGV4KSB7XG4gICAgICB0aGlzLiRlbWl0KCdpdGVtQ2xpY2snLCBkYXRhLCByb3dJbmRleCwgQ29sdW1uSW5kZXgpXG4gICAgfSxcbiAgICBpdGVtTW91c2Vtb3ZlKGRhdGEpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ2l0ZW1Nb3VzZU1vdmUnLCBkYXRhKVxuICAgICAgaWYgKHRoaXMuc2hvd1Rvb2x0aXAgPT09IGZhbHNlKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgdGhpcy50b29sdGlwRGF0YSA9IGRhdGFcbiAgICAgIHZhciBldmUgPSB3aW5kb3cuZXZlbnRcbiAgICAgIHZhciB4ID0gZXZlLnggLy8gWOWdkOagh1xuICAgICAgdmFyIHkgPSBldmUueSAvLyBZ5Z2Q5qCHXG4gICAgICB0aGlzLnRvb2x0aXBQb3NpdGlvbiA9IHtcbiAgICAgICAgeDogeCArIDIwLFxuICAgICAgICB5OiB5ICsgMjAsXG4gICAgICB9XG4gICAgICAvLyBjb25zb2xlLmxvZygnaXRlbUhvdmVyJylcbiAgICB9LFxuICAgIGNvbnRlbnRNb3VzZWVudGVyKCkge1xuICAgICAgaWYgKHRoaXMuc2hvd1Rvb2x0aXAgPT09IGZhbHNlKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgdGhpcy50b29sdGlwSXNTaG93ID0gdHJ1ZVxuICAgIH0sXG4gICAgY29udGVudE1vdXNlbGVhdmUoKSB7XG4gICAgICBpZiAodGhpcy5zaG93VG9vbHRpcCA9PT0gZmFsc2UpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICB0aGlzLnRvb2x0aXBJc1Nob3cgPSBmYWxzZVxuICAgIH0sXG4gIH0sXG4gIGJlZm9yZURlc3Ryb3koKSB7fSxcbn1cbjwvc2NyaXB0PlxuPHN0eWxlIGxhbmc9XCJsZXNzXCIgc2NvcGVkPlxuLmNvbG9yLWdyaWQtY2hhcnQge1xuICAmLXJvdyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAmLWl0ZW0ge1xuICAgIC8vIHdpZHRoOiA1MHB4O1xuICAgIC8vIGhlaWdodDogNTBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XG4gICAgJjpob3ZlciB7XG4gICAgICBib3JkZXItY29sb3I6IGJsYWNrO1xuICAgIH1cbiAgICAvLyBib3JkZXItYm90dG9tOiAxcHggc29saWQgd2hpdGU7XG4gIH1cbn1cbi5saXN0LXZpZXctcGhhbnRvbSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogLTE7XG59XG4uY29sb3ItZ3JpZC1jaGFydC10b29sdGlwIHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgb3BhY2l0eTogMC45NjtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBib3gtc2hhZG93OiAwIDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgcGFkZGluZzogMTJweDtcbiAgY29sb3I6ICMzMzMzMzM7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAxMDAwO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG59XG48L3N0eWxlPlxuIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZTczMjVlZGMmc2NvcGVkPXRydWVcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9ZTczMjVlZGMmcHJvZCZsYW5nPWxlc3Mmc2NvcGVkPXRydWVcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiZTczMjVlZGNcIixcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWU3MzI1ZWRjJnByb2QmbGFuZz1sZXNzJnNjb3BlZD10cnVlXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWU3MzI1ZWRjJnByb2QmbGFuZz1sZXNzJnNjb3BlZD10cnVlXCIiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbG9yLWdyaWQtY2hhcnQtcm93W2RhdGEtdi1lNzMyNWVkY10ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG4uY29sb3ItZ3JpZC1jaGFydC1pdGVtW2RhdGEtdi1lNzMyNWVkY10ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcXG59XFxuLmNvbG9yLWdyaWQtY2hhcnQtaXRlbVtkYXRhLXYtZTczMjVlZGNdOmhvdmVyIHtcXG4gIGJvcmRlci1jb2xvcjogYmxhY2s7XFxufVxcbi5saXN0LXZpZXctcGhhbnRvbVtkYXRhLXYtZTczMjVlZGNdIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDA7XFxuICB0b3A6IDA7XFxuICByaWdodDogMDtcXG4gIHotaW5kZXg6IC0xO1xcbn1cXG4uY29sb3ItZ3JpZC1jaGFydC10b29sdGlwW2RhdGEtdi1lNzMyNWVkY10ge1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG4gIG9wYWNpdHk6IDAuOTY7XFxuICBib3JkZXItcmFkaXVzOiA2cHg7XFxuICBib3gtc2hhZG93OiAwIDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcXG4gIHBhZGRpbmc6IDEycHg7XFxuICBjb2xvcjogIzMzMzMzMztcXG4gIGZvbnQtc2l6ZTogMTNweDtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHotaW5kZXg6IDEwMDA7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbn1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==